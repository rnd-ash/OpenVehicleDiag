00000001	0.00000000	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00000002	0.00005870	[580] -- CALGetCommState --> comm link is free	
00000003	0.00012500	[580] -- CALGetCommState --> Caesar is dead ! skip all CAESAR related tests.	
00000004	0.00016540	[580] -- CALGetCommState --> returned bitfield is: 0802	
00000005	0.00022690	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0802	
00000006	0.00038070	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00000007	0.00042180	[580] -- CALGetCommState --> comm link is free	
00000008	0.00046400	[580] -- CALGetCommState --> Caesar is dead ! skip all CAESAR related tests.	
00000009	0.00050600	[580] -- CALGetCommState --> returned bitfield is: 0802	
00000010	0.00055890	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0802	
00000011	4.18697023	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00000012	4.18699503	[580] -- CALGetCommState --> comm link is free	
00000013	4.18709612	[580] -- CALGetCommState --> Caesar is dead ! skip all CAESAR related tests.	
00000014	4.18711853	[580] -- CALGetCommState --> returned bitfield is: 0802	
00000015	4.18722630	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0802	
00000016	4.18738174	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00000017	4.18741465	[580] -- CALGetCommState --> comm link is free	
00000018	4.18748569	[580] -- CALGetCommState --> Caesar is dead ! skip all CAESAR related tests.	
00000019	4.18754911	[580] -- CALGetCommState --> returned bitfield is: 0802	
00000020	4.18760347	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0802	
00000021	11.12901306	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00000022	11.12903690	[580] -- CALGetCommState --> comm link is free	
00000023	11.12910175	[580] -- CALGetCommState --> Caesar is dead ! skip all CAESAR related tests.	
00000024	11.12915039	[580] -- CALGetCommState --> returned bitfield is: 0802	
00000025	11.12920761	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0802	
00000026	11.12940598	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00000027	11.12942410	[580] -- CALGetCommState --> comm link is free	
00000028	11.12948036	[580] -- CALGetCommState --> Caesar is dead ! skip all CAESAR related tests.	
00000029	11.12953949	[580] -- CALGetCommState --> returned bitfield is: 0802	
00000030	11.12959957	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0802	
00000031	11.94845009	[580] -- CAL_SESSION --> Entry...	
00000032	11.94853878	[580] -- CAL_SESSION --> action is START...	
00000033	11.94898987	[580] -- CAL_SESSION (START) --> Distance unit registry key constructed from >>REG_KM<< + >>US<< = >>REG_KM_US<<	
00000034	11.94902515	[580] -- DetermineTargetUnit --> Registry unit >>>REG_KM_US<<< requested.	
00000035	11.94915199	[580] -- DetermineTargetUnit --> ERROR: either REGUNITS.INF does not exist or the requested unit is not contained ! try oldfashioned registry access.	
00000036	11.94944763	[580] -- DetermineTargetUnit --> HKEY_LOCAL_MACHINE contains >>>miles<<<.	
00000037	11.94949627	[580] -- CAL_SESSION (START) --> Registry entry found ! Distance unit is: >>miles<<	
00000038	11.94990921	[580] -- CSessionManager::InitSession --> CAL.INI contains specific configuration >>PASSTHRUCONFIG<< !	
00000039	11.95007610	[580] -- CFGRescale::FileIsPresent --> checking presence of '..\comdat\\PKW\RESCALE.INI'... OK !	
00000040	11.96054935	[580] -- CFGVehicle::FileIsPresent --> checking presence of '..\comdat\\PKW\PKW.GCF'... OK !	
00000041	11.96079636	[580] -- CFGVehicle::GetVehicleInfo --> DecodeFile signalled WARNING: no signature found ! wrong or decoded file; try to use as is.	
00000042	11.96081734	[580] -- CFGVehicle::GetVehicleInfo --> Looking in GCF for requested model >>203.000<< and engine >>><<<...	
00000043	11.98694515	[580] -- CFGVehicle::GetVehicleInfo --> OK, GCF entry found: >>>>>203.000,    203IDENT.mcf, ,AutoIdent<<<<<	
00000044	11.98707008	[580] -- CFGVehicle::FileIsPresent --> checking presence of '..\comdat\\PKW\203IDENT.mcf'... OK !	
00000045	11.98729706	[580] -- CFGVehicle::GetVehicleInfo --> DecodeFile signalled WARNING: no signature found ! wrong or decoded file; try to use as is.	
00000046	11.98746777	[580] -- CFGVehicle::GetVehicleInfo --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for global setup retrieval  !	
00000047	11.98763275	[580] -- CFGVehicle::GetVehicleInfo --> option DISABLE_FIRMWARESWITCH not found or <>  1; use any firmware declarations in GCF or MCF as usual !	
00000048	11.98778248	[580] -- CFGVehicle::GetVehicleInfo --> no MCF ecu INCLUDE declaration found for actual configuration >>PASSTHRUCONFIG<< !	
00000049	11.98793316	[580] -- CFGVehicle::GetVehicleInfo --> no MCF ecu EXCLUDE declaration found for actual configuration >>PASSTHRUCONFIG<< !	
00000050	11.98808956	[580] -- CFGVehicle::GetVehicleInfo --> configured plug in section >>GLOBAL<< is >>>D_OBDII,D_Plug4<<<	
00000051	11.98819542	[580] -- CFGVehicle::GetVehicleInfo --> No entry found for CAN_HS baudrate in section >>GLOBAL<<; default to 500 kBd !	
00000052	11.98834133	[580] -- CFGVehicle::GetVehicleInfo --> No entry found for CAN_LS baudrate in section >>GLOBAL<<; default to 83.3 kBd !	
00000053	11.98849869	[580] -- CFGVehicle::GetVehicleInfo --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>IGNITION_PASSTHRUCONFIG<<; use standard IGNITION section for ignition ecu/service retrieval  !	
00000054	11.98878670	[580] -- CFGVehicle::GetVehicleInfo --> no configuration data present for ignition via comm !	
00000055	11.98894119	[580] -- CFGVehicle::GetVehicleInfo --> configuration data for ignition retry is not specified; default to TRUE !	
00000056	11.98909283	[580] -- CFGVehicle::GetVehicleInfo --> no special CAESAR firmware configured in section >>GLOBAL<<; using CaesarGo as default !	
00000057	11.98923779	[580] -- CFGVehicle::GetVehicleInfo --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>PARALLEL_SHORTTEST_PASSTHRUCONFIG<<; use standard PARALLEL_SHORTTEST section for parallel shorttest configuration retrieval  !	
00000058	11.98940945	[580] -- CFGVehicle::GetVehicleInfo --> nothing configured for parallel shorttest; disable by default !	
00000059	11.98951054	[580] -- CFGVehicle::GetVehicleInfo --> no declaration for single thread maximum; default to 1 !	
00000060	11.98966980	[580] -- CFGVehicle::GetVehicleInfo --> unknown or empty start firmware for parallel shortest; default to TLSlave !	
00000061	11.98996639	[580] -- CFGVehicle::GetVehicleInfo --> global VIN ecu/service from section >>GLOBAL<< are >><< / >><<	
00000062	11.99040985	[580] -- CFGVehicle::GetVehicleInfo --> global distance ecu/service from section >>GLOBAL<< are >><< / >><<	
00000063	11.99253750	[580] -- CFGVehicle::GetVehicleInfo --> Monitoring mode is 'DAS_CONTROLLED'; ALL Ecus are monitored.	
00000064	11.99264336	[580] -- CFGVehicle::GetVehicleInfo --> No WCF name entry in MCF; skip maintenance data retrieval !	
00000065	11.99283409	[580] -- CFGVehicle::GetVehicleInfo --> no declaration for ALLOW_FUSO in >>GLOBAL<<; default to >>not allowed<< !	
00000066	11.99298763	[580] -- CFGVehicle::GetVehicleInfo --> CAESAR_OPTIONS not declared in section >>GLOBAL<< or empty !	
00000067	11.99301243	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> *********************************************************	
00000068	11.99305630	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****  Einstieg Lesen Dio-Names aus MCF	
00000069	11.99310398	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> **** 	
00000070	11.99361801	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****  Ende nach 0.00 seconds für Lesen Dio-Names aus MCF	
00000071	11.99364090	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****                                                   	
00000072	11.99373531	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****  3 Diogenes names detected !	
00000073	11.99375725	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> *********************************************************	
00000074	11.99386311	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> *********************************************************	
00000075	11.99389458	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****  Einstieg GCF scan	
00000076	11.99394608	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> **** 	
00000077	12.43272400	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****  Ende nach 0.44 seconds für GCF scan	
00000078	12.43282032	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****  3 global ECU entries found in GCF file.	
00000079	12.43287659	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> *********************************************************	
00000080	12.43291187	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> VINECU is  / ;  global VIN service is ''	
00000081	12.43304443	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific VIN services will be retrieved after loading the ECU tables.	
00000082	12.43310261	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> Distance ECU is  / ;  global distance service is ''	
00000083	12.43314552	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific distance services will be retrieved after loading the ECU tables.	
00000084	12.43319702	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> fuel level ECU is  / ;  global fuel level service is ''	
00000085	12.43324089	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific fuel level services will be retrieved after loading the ECU tables.	
00000086	12.43328476	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> distance til service ECU is  / ;  global distance til service service is ''	
00000087	12.43333149	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific distance til service services will be retrieved after loading the ECU tables.	
00000088	12.43339157	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> Time til service ECU is  / ;  global Time til service service is ''	
00000089	12.43344116	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific Time til service services will be retrieved after loading the ECU tables.	
00000090	12.43349743	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> WorkshopCode ECU is  / ;  global WorkshopCode service is ''	
00000091	12.43357563	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific WorkshopCode services will be retrieved after loading the ECU tables.	
00000092	12.43363476	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ServiceCode ECU is  / ;  global ServiceCode service is ''	
00000093	12.43368149	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific ServiceCode services will be retrieved after loading the ECU tables.	
00000094	12.43372440	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ServiceScope ECU is  / ;  global ServiceScope service is ''	
00000095	12.43378258	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific ServiceScope services will be retrieved after loading the ECU tables.	
00000096	12.43383503	[580] -- CTableManager::LoadTable --> *********************************************************	
00000097	12.43387985	[580] -- CTableManager::LoadTable --> ****  Einstieg	
00000098	12.43392277	[580] -- CTableManager::LoadTable --> *********************************************************	
00000099	12.43473721	[580] -- CFGEcuList::GetNextEcu -> EZS209*2:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00000100	12.43537807	[580] -- CFGEcuList::GetNextEcu -> EZS209*2:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00000101	12.43579960	[580] -- CFGEcuList::GetNextEcu -> EZS209*2:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00000102	12.43804264	[580] -- CFGEcuList::GetNextEcu -> EZS209*3:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00000103	12.43862343	[580] -- CFGEcuList::GetNextEcu -> EZS209*3:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00000104	12.43904114	[580] -- CFGEcuList::GetNextEcu -> EZS209*3:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00000105	12.44133568	[580] -- CFGEcuList::GetNextEcu -> ZGW203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00000106	12.44193459	[580] -- CFGEcuList::GetNextEcu -> ZGW203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00000107	12.44229507	[580] -- CFGEcuList::GetNextEcu -> ZGW203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00000108	12.44411564	[580] -- CTableManager::LoadTable --> *********************************************************	
00000109	12.44413948	[580] -- CTableManager::LoadTable --> **** Nach Einlesen der Files; Beginn Scan Dependencies	
00000110	12.44423294	[580] -- CTableManager::LoadTable --> *********************************************************	
00000111	12.44553471	[580] -- CTableManager::LoadTable --> *********************************************************	
00000112	12.44558334	[580] -- CTableManager::LoadTable --> ***  Ende Scan Dependencies	
00000113	12.44566631	[580] -- CTableManager::LoadTable --> *********************************************************	
00000114	12.44568920	[580] -- CTableManager::LoadTable --> ======================= DETECTED SHORTTEST DEPENDENCIES ===================	
00000115	12.44578838	[580] -- CTableManager::LoadTable --> ======================== END OF SHORTTEST DEPENDENCIES ====================	
00000116	12.44597530	[580] -- CSessionManager::InitSession --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for VIN/distance retrieval  !	
00000117	12.44603539	[580] -- CSessionManager::InitSession --> Retrieving ECU-specific VIN-services for group >>><<<:	
00000118	12.44608593	[580] -- CSessionManager::InitSession --> Retrieving ECU-specific Distance services for group >>><<<:	
00000119	12.44613266	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> Resolve fuel level MCF entry >><< to single DAS names...	
00000120	12.44619083	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> resulting list of fuel level singles: >><< !	
00000121	12.44623756	[580] -- CSessionManager::LookForEcuSpecificServices --> check for FuelLevel specific services	
00000122	12.44641876	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> Resolve distance til service MCF entry >><< to single DAS names...	
00000123	12.44644928	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> resulting list of distance til service singles: >><< !	
00000124	12.44650364	[580] -- CSessionManager::LookForEcuSpecificServices --> check for DistanceTilService specific services	
00000125	12.44655991	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> Resolve time til service MCF entry >><< to single DAS names...	
00000126	12.44660282	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> resulting list of time til service singles: >><< !	
00000127	12.44666100	[580] -- CSessionManager::LookForEcuSpecificServices --> check for TimeTilService specific services	
00000128	12.44671059	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> Resolve workshop code MCF entry >><< to single DAS names...	
00000129	12.44676685	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> resulting list of workshop code singles: >><< !	
00000130	12.44681549	[580] -- CSessionManager::LookForEcuSpecificServices --> check for WorkshopCode specific services	
00000131	12.44689083	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> Resolve service code MCF entry >><< to single DAS names...	
00000132	12.44694996	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> resulting list of service code singles: >><< !	
00000133	12.44699860	[580] -- CSessionManager::LookForEcuSpecificServices --> check for ServiceCode specific services	
00000134	12.44704247	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> Resolve service scope MCF entry >><< to single DAS names...	
00000135	12.44709873	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> resulting list of service scope singles: >><< !	
00000136	12.44714737	[580] -- CSessionManager::LookForEcuSpecificServices --> check for ServiceScope specific services	
00000137	12.44754124	[580] -- CSessionManager::InitSession --> 6 protocols detected for family [KW2000PKW] = >>KW2000P<<>>KW2000PE<<>>KW2C2PE<<>>KW2C3PE<<>>KW2C3PE_HS<<>>UDS<<	
00000138	12.44778728	[580] -- CSessionManager::InitSession --> 0 protocols detected for family [KW2000NFZ] = 	
00000139	12.44780922	[580] -- CAL_SESSION (START) --> parallel shorttest is DISABLED !	
00000140	12.44827557	[580] -- CCALService::ReadDiogenesFiles --> flash path >>..\comdat\\PKW\CFF<< exists and write protection check shall not be done anymore; so we can use it.	
00000141	12.44851017	[580] -- CCALService::ReadDiogenesFiles --> there is a CENTRAL_GBF declaration with content >>>.\gbf<<<; use as is for GBF retrieval without adding Sparte !	
00000142	12.44876480	[580] -- CreateMapFileIfNecessary --> look for existing map file for >>PKW.MAP<< in directory >>..\comdat\\PKW<<...	
00000143	12.44887447	[580] -- CreateMapFileIfNecessary --> file exists already, skip creation !	
00000144	12.44890594	[580] -- LoadMapFileAndMapDiogenesNames --> look for map file >>PKW.MAP<< in directory >>..\comdat\\PKW<<...	
00000145	12.44906902	[580] -- CreateMapFileIfNecessary --> file exists ! load it.	
00000146	12.45296192	[580] -- CCALService::CreateCBFFileList --> 2 CBF files for 2 Diogenes names found.	
00000147	12.45298481	[580] -- CCALService::ReadDiogenesFiles --> scanning directory for CFF files with mask '..\comdat\\PKW\CFF\*.CFF'	
00000148	12.45328712	[580] -- CCALService::ReadDiogenesFiles --> 8 CFF files found.	
00000149	12.45344734	[580] -- CCALService::ReadDiogenesFiles --> scanning directory for GBF files with mask '.\gbf\*.GBF'	
00000150	12.45400524	[580] -- CCALService::ReadDiogenesFiles --> 19 GBF files found.	
00000151	12.45402813	[580] -- CCALService::ReadDiogenesFiles --> scanning directory for CCF files with mask '..\comdat\\PKW\CCF\*.CCF'	
00000152	12.45416355	[580] -- CCALService::ReadDiogenesFiles --> 0 CCF files found.	
00000153	12.45860863	[580] ==== CAESAR global debugger ==> CaesarSetDebugOutput() called ... DebugLevel is 0	
00000154	12.45862198	[580] ==== CAESAR global debugger ==> CaesarSetChannelDebugOutput() called ... ChannelDebugLevel is 0	
00000155	12.45881748	[580] -- CALStartCaesar --> set CAESAR debug level to value 0 defined in CAL.INI	
00000156	12.45884037	[580] ==== CAESAR global debugger ==> CaesarSetDebugLevel() called ... new DebugLevel is 0	
00000157	12.45896626	[580] ==== CAESAR global debugger ==> CaesarSetChannelDebugLevel() called ... new ChannelDebugLevel is 0	
00000158	12.45935154	[580] ==== CAESAR global debugger ==> SysLogger is set to mode 'application' (old behaviour)	
00000159	12.45960522	[580] -- CALStartCaesar --> default base path for simulation files is: ..\comdat\PKW; check if there is an override by SIMBASEPATH entry...	
00000160	12.45971203	[580] -- CALStartCaesar --> OK, there is a redirection entry: >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim<<	
00000161	12.45975399	[580] -- CALStartCaesar --> redirection entry does not contain a system variable; use >>as is<<	
00000162	12.45981312	[580] -- CALStartCaesar --> finally used path for global simulation file: C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM	
00000163	12.45999622	[580] -- CALStartCaesar --> original Platform enty from CAL.INI: >>PART_J<<	
00000164	12.46005154	[580] -- CALStartCaesar --> Part J (= PassThru device) selected as hardware platform !	
00000165	12.46020126	[580] -- CALStartCaesar --> CAESARMEM entry in CAL.INI requests 0 bytes dummy allocation; inform CAESAR via CaesarSetOptions !	
00000166	12.46026039	[580] ==== CAESAR global debugger ==> +++ OPTION: CALMEM = <disabled>	
00000167	12.46031952	[580] ==== CaesarSetOptions ==> Kein Fehler	
00000168	12.46036816	[580] -- CALStartCaesar --> CaesarSetOptions was OK !	
00000169	12.46061230	[580] ==== CAESAR global debugger ==> ===========================================	
00000170	12.46066952	[580] ==== CAESAR global debugger ==> Version of CAESAR: 3.3.0.0 (3.3.0.0)	
00000171	12.46071911	[580] ==== CAESAR global debugger ==> Compile time     : Aug 31 2015 13:42:11	
00000172	12.46076775	[580] ==== CAESAR global debugger ==> -------------------------------------------	
00000173	12.46082020	[580] ==== CAESAR global debugger ==> Local time  : 2020-11-17 15:15:41	
00000174	12.46108532	[580] ==== CAESAR global debugger ==> Application : C:\Program Files (x86)\Mercedes-Benz\DAS\bin\das32r2_slt.exe (7.7.2.1)	
00000175	12.46114922	[580] ==== CAESAR global debugger ==> CAESAR-DLL  : C:\Program Files (x86)\Mercedes-Benz\DAS\bin\c32s.dll	
00000176	12.46120071	[580] ==== CAESAR global debugger ==> Working-Dir : C:\Program Files (x86)\Mercedes-Benz\DAS\bin	
00000177	12.46125221	[580] ==== CAESAR global debugger ==> Computername: DESKTOP-8A32AS3	
00000178	12.46170998	[580] ==== CAESAR global debugger ==> Username    : Ashcon	
00000179	12.46175957	[580] ==== CAESAR global debugger ==> Process-ID  : 0x00000244	
00000180	12.46180439	[580] ==== CAESAR global debugger ==> Thread-ID   : 0x00001E54	
00000181	12.46236515	[580] ==== CAESAR global debugger ==> ===========================================	
00000182	12.62931061	[580] ==== CaesarConstruct ==> Kein Fehler	
00000183	12.62936306	[580] ==== CaesarSetFlashPath ==> Kein Fehler	
00000184	12.62953472	[580] -- RetrievePassThruInfo --> No CAL.INI entry for ID of last used PassThru device; skip pre-selction !	
00000185	12.62959099	[580] -- CALStartCaesar --> Seed delivered by CaesarAuthentApplicationSeed(DAS): -1297718528 / 0xB2A66300	
00000186	12.62963200	[580] -- CALStartCaesar --> Key calculated for that seed: -596461625 / 0xDC72B7C7	
00000187	12.62967396	[580] -- CALStartCaesar --> authentication was OK ! Continue with CaesarComConstruct...	
00000188	12.62986851	[580] -- CALStartCaesarComm --> Platform is not Part D, skip COM-link check !	
00000189	12.62991142	[580] -- CALStartCaesarComm --> CAESAR firmware >>CAESARGO<< shall be booted.	
00000190	12.62996864	[580] -- CALStartCaesarComm --> Baudrate for CAN_HS = >>500<<, for CAN_LS = >>83_3<<	
00000191	12.63012123	[580] -- CALStartCaesarComm --> no or empty CPULOADREDUCTION entry defined in CAL.INI; skip setting via CaesarSetOptions !	
00000192	12.63016224	[580] -- CALStartCaesarComm --> Starting CaesarComConstruct without Part E Check...	
00000193	12.64144325	[580] ==== CAESAR global debugger ==> ## Starting Registry Scan for SAE-J2534 PassThru Devices...	
00000194	12.64149284	[580] ==== CAESAR global debugger ==> ## Registry Scan for PassThru v04.04 Devices...	
00000195	12.64164352	[580] ==== CAESAR global debugger ==> 1.)  Found (vendor-device): 'Arduino-Passthru'	
00000196	12.64170551	[580] ==== CAESAR global debugger ==>       - is not the wanted one - device ignored	
00000197	12.64179325	[580] ==== CAESAR global debugger ==> 2.)  Found (vendor-device): 'Macchina-Passthru'	
00000198	12.64189339	[580] ==== CAESAR global debugger ==>  Vendor: 'rnd-ash@github.com'	
00000199	12.64198494	[580] ==== CAESAR global debugger ==>         LibPath: C:\Program Files (x86)\macchina\passthru\driver.dll	
00000200	12.79461479	[580] ==== CAESAR global debugger ==>       - Device 'Macchina M2 UTD Passthru', Id: 4660	
00000201	12.80269146	[580] ==== CAESAR global debugger ==>         [ok] Device valid	
00000202	12.80841160	[580] ==== CAESAR global debugger ==> j> Device ID        = 4660	
00000203	12.81453133	[580] ==== CAESAR global debugger ==> j> Firmware Version = 0.1	
00000204	12.82136917	[580] ==== CAESAR global debugger ==> j> DLL Version      = 0.1	
00000205	12.82771015	[580] ==== CAESAR global debugger ==> j> API Version      = 04.04	
00000206	12.83432293	[580] ==== CAESAR global debugger ==> 3.)  Found (vendor-device): 'XHorse - MVCI'	
00000207	12.84076405	[580] ==== CAESAR global debugger ==>       - is not the wanted one - device ignored	
00000208	12.84746552	[580] ==== CAESAR global debugger ==> ## Registry Scan Ends	
00000209	12.85332775	[580] -- CardUsageCallbackFunction --> set card boot name >>CaesarGo<<	
00000210	12.85884094	[580] ==== CAESAR global debugger ==> j> Initialize PassThru Hardware Structures	
00000211	12.86558914	[580] ==== CAESAR global debugger ==> J> SIJGetCableType	
00000212	12.87158012	[580] ==== CAESAR global debugger ==> J> SIJMuxConfigure	
00000213	12.87777805	[580] ==== CAESAR global debugger ==> Security Modul Constructor	
00000214	12.88435555	[580] ==== CAESAR global debugger ==> End of Security Modul Constructor	
00000215	12.89042377	[580] ==== CAESAR global debugger ==> ------------------------------------------	
00000216	12.89738274	[580] ==== CAESAR global debugger ==> List of current CAESAR options	
00000217	12.90408039	[580] ==== CAESAR global debugger ==> - ByteLevelTrace                  : false	
00000218	12.90955925	[580] ==== CAESAR global debugger ==> - CALMEM                          : 0	
00000219	12.91670132	[580] ==== CAESAR global debugger ==> - CAN1Termination                 : 0	
00000220	12.92227554	[580] ==== CAESAR global debugger ==> - CPULoadReduction                : 0	
00000221	12.92862415	[580] ==== CAESAR global debugger ==> - CServerCoding                   : false	
00000222	12.93456745	[580] ==== CAESAR global debugger ==> - CanKairoUsed                    : false	
00000223	12.94024658	[580] ==== CAESAR global debugger ==> - CardsFilterCheck                : false	
00000224	12.94766045	[580] ==== CAESAR global debugger ==> - ChunkedDownload                 : false	
00000225	12.95517063	[580] ==== CAESAR global debugger ==> - CiderPrintfFileOutput           : false	
00000226	12.96252441	[580] ==== CAESAR global debugger ==> - FirmwareUpdate                  : false	
00000227	12.96872425	[580] ==== CAESAR global debugger ==> - GpdDiagJobMemCheck              : -1	
00000228	12.97430134	[580] ==== CAESAR global debugger ==> - HeapCheck                       : false	
00000229	12.98098755	[580] ==== CAESAR global debugger ==> - IgnitionBypass                  : false	
00000230	12.98704720	[580] ==== CAESAR global debugger ==> - IsCAN1TerminationSet            : false	
00000231	12.99284935	[580] ==== CAESAR global debugger ==> - IsMaxNumberOfEthernetGatewaysSet: false	
00000232	12.99983788	[580] ==== CAESAR global debugger ==> - IsMonitoringSet                 : false	
00000233	13.00544834	[580] ==== CAESAR global debugger ==> - IsToolkitChannelNumberSet       : false	
00000234	13.01228142	[580] ==== CAESAR global debugger ==> - LfhEnable                       : true	
00000235	13.01811028	[580] ==== CAESAR global debugger ==> - ListKL15ECUs                    : false	
00000236	13.02463531	[580] ==== CAESAR global debugger ==> - LogCriticalSection              : false	
00000237	13.03094482	[580] ==== CAESAR global debugger ==> - MVCIOptions                     : 	
00000238	13.03721333	[580] ==== CAESAR global debugger ==> - MVCITimeout                     : 14000	
00000239	13.04406834	[580] ==== CAESAR global debugger ==> - MaxNumberOfEthernetGateways     : 0	
00000240	13.04986477	[580] ==== CAESAR global debugger ==> - ModuleScanPreselect             : (null)	
00000241	13.05842686	[580] ==== CAESAR global debugger ==> - MonitoringOn                    : true	
00000242	13.05855083	[580] ==== CAESAR global debugger ==> - PartCFIRSTCARD                  : true	
00000243	13.05903149	[580] ==== CAESAR global debugger ==> - PartECheck                      : 0	
00000244	13.05910969	[580] ==== CAESAR global debugger ==> - PassThruKLineChecksum           : true	
00000245	13.05915833	[580] ==== CAESAR global debugger ==> - PassThruSelectType              : 0	
00000246	13.05920315	[580] ==== CAESAR global debugger ==> - PassThruSelection               : 0	
00000247	13.05924797	[580] ==== CAESAR global debugger ==> - PassThruSelectionUsed           : false	
00000248	13.05929375	[580] ==== CAESAR global debugger ==> - PduApiConnectEnable             : true	
00000249	13.05933952	[580] ==== CAESAR global debugger ==> - PduApiDeviceName                : (null)	
00000250	13.05939960	[580] ==== CAESAR global debugger ==> - PlugCheck                       : false	
00000251	13.05947399	[580] ==== CAESAR global debugger ==> - ReleaseLogDir                   : (null)	
00000252	13.05953026	[580] ==== CAESAR global debugger ==> - StaticThreadPriority            : 255	
00000253	13.05958271	[580] ==== CAESAR global debugger ==> - TesterPresentCheck              : false	
00000254	13.05962658	[580] ==== CAESAR global debugger ==> - ToolkitApiDllDir                : (null)	
00000255	13.05967236	[580] ==== CAESAR global debugger ==> - ToolkitChannelNumber            : 0	
00000256	13.05971432	[580] ==== CAESAR global debugger ==> - TraceAddressFormat              : false	
00000257	13.05975914	[580] ==== CAESAR global debugger ==> - TraceNumOfBytes                 : false	
00000258	13.05980301	[580] ==== CAESAR global debugger ==> - Trace_TD776                     : false	
00000259	13.05987358	[580] ==== CAESAR global debugger ==> - XPThreadSwitching               : 0	
00000260	13.06002712	[580] ==== CAESAR global debugger ==> ------------------------------------------	
00000261	13.06007862	[580] ==== CAESAR global debugger ==> Configuration entries of file: C:\ProgramData\Mercedes-Benz\config\Das\caesar\driver\slave.ini	
00000262	13.06015015	[580] ==== CAESAR global debugger ==> ------------------------------------------------------------------	
00000263	13.06028461	[580] ==== CAESAR global debugger ==> --- Section: General ---	
00000264	13.06035614	[580] ==== CAESAR global debugger ==> CPULoadReduction               = TRUE	
00000265	13.06040287	[580] ==== CAESAR global debugger ==> DiagJobInterpreterAutoInitialize = FALSE	
00000266	13.06047344	[580] ==== CAESAR global debugger ==> DiagJobInterpreterCheckLevel   = 0	
00000267	13.06053162	[580] ==== CAESAR global debugger ==> DiagJobInterpreterCheckPrompt  = FALSE	
00000268	13.06058216	[580] ==== CAESAR global debugger ==> GPDInterpreterAutoInitialize   = FALSE	
00000269	13.06062794	[580] ==== CAESAR global debugger ==> GPDInterpreterCheckLevel       = 0	
00000270	13.06067371	[580] ==== CAESAR global debugger ==> GPDInterpreterCheckPrompt      = FALSE	
00000271	13.06071949	[580] ==== CAESAR global debugger ==> Logging                        = Off	
00000272	13.06076813	[580] ==== CAESAR global debugger ==> LoggingPath                    = C:\ProgramData\Mercedes-Benz\logs\das	
00000273	13.06081200	[580] ==== CAESAR global debugger ==> SysLogFileAppend               = FALSE	
00000274	13.06085777	[580] ==== CAESAR global debugger ==> SysLogPath                     = .	
00000275	13.06112480	[580] ==== CAESAR global debugger ==> SysLogServer                   = APPLICATION	
00000276	13.06122494	[580] ==== CAESAR global debugger ==> --- Section: MVCI_Device ---	
00000277	13.06128407	[580] ==== CAESAR global debugger ==> DeviceOptions                  = ""	
00000278	13.06140327	[580] ==== CAESAR global debugger ==> RootPath                       = .\pdu\RDF_BernerMattner_SGSim.XML	
00000279	13.06152439	[580] ==== CAESAR global debugger ==> --- Section: PartA ---	
00000280	13.06165123	[580] ==== CAESAR global debugger ==> CaesarGoChannels               = 4	
00000281	13.06169891	[580] ==== CAESAR global debugger ==> CANWarningCheck                = TRUE	
00000282	13.06174564	[580] ==== CAESAR global debugger ==> DebugLevel                     = 1	
00000283	13.06179810	[580] ==== CAESAR global debugger ==> Interrupt                      = 188	
00000284	13.06184292	[580] ==== CAESAR global debugger ==> Monitoring                     = TRUE	
00000285	13.06191158	[580] ==== CAESAR global debugger ==> TLSlaveChannels                = 50	
00000286	13.06211948	[580] ==== CAESAR global debugger ==> --- Section: PartC Module0 ---	
00000287	13.06219482	[580] ==== CAESAR global debugger ==> CaesarGoChannels               = 4	
00000288	13.06225872	[580] ==== CAESAR global debugger ==> Monitoring                     = TRUE	
00000289	13.06232166	[580] ==== CAESAR global debugger ==> TLSlaveChannels                = 50	
00000290	13.06242371	[580] ==== CAESAR global debugger ==> --- Section: PartC ---	
00000291	13.06256008	[580] ==== CAESAR global debugger ==> CaesarGoChannels               = 4	
00000292	13.06260872	[580] ==== CAESAR global debugger ==> CANWarningCheck                = FALSE	
00000293	13.06265450	[580] ==== CAESAR global debugger ==> DebugLevel                     = 0	
00000294	13.06270027	[580] ==== CAESAR global debugger ==> Interrupt                      = 4	
00000295	13.06274605	[580] ==== CAESAR global debugger ==> MasterAddress                  = 0xd2000	
00000296	13.06279087	[580] ==== CAESAR global debugger ==> SlaveAddress                   = 0xd4000	
00000297	13.06283569	[580] ==== CAESAR global debugger ==> TLSlaveChannels                = 50	
00000298	13.06291580	[580] ==== CAESAR global debugger ==> --- Section: PartC_38PinCable ---	
00000299	13.06297874	[580] ==== CAESAR global debugger ==> AdapterCode                    = 7	
00000300	13.06302834	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 50	
00000301	13.06309891	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1	
00000302	13.06314564	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN	
00000303	13.06320477	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1	
00000304	13.06325150	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS	
00000305	13.06329727	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 41:40	
00000306	13.06334400	[580] ==== CAESAR global debugger ==> MuxPins                        = 35      , 35      , 0	
00000307	13.06342506	[580] ==== CAESAR global debugger ==> --- Section: PartC_OBD2Cable ---	
00000308	13.06348896	[580] ==== CAESAR global debugger ==> AdapterCode                    = 6	
00000309	13.06353474	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 50	
00000310	13.06366730	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1	
00000311	13.06372166	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN	
00000312	13.06376839	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1	
00000313	13.06381416	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS	
00000314	13.06385994	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 41:40	
00000315	13.06390572	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15      , 0	
00000316	13.06398582	[580] ==== CAESAR global debugger ==> --- Section: PartD ---	
00000317	13.06404781	[580] ==== CAESAR global debugger ==> CaesarGoChannels               = 2	
00000318	13.06409359	[580] ==== CAESAR global debugger ==> CANWarningCheck                = FALSE	
00000319	13.06417084	[580] ==== CAESAR global debugger ==> Com                            = 2	
00000320	13.06421661	[580] ==== CAESAR global debugger ==> Monitoring                     = TRUE	
00000321	13.06426239	[580] ==== CAESAR global debugger ==> TLSlaveChannels                = 50	
00000322	13.06434441	[580] ==== CAESAR global debugger ==> --- Section: PartD_4PinCable ---	
00000323	13.06440639	[580] ==== CAESAR global debugger ==> AdapterCode                    = 10	
00000324	13.06445217	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1	
00000325	13.06449795	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1	
00000326	13.06454277	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart	
00000327	13.06458759	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1	
00000328	13.06471062	[580] ==== CAESAR global debugger ==> DriverType                     = KLine	
00000329	13.06476116	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0	
00000330	13.06480789	[580] ==== CAESAR global debugger ==> MuxPins                        = 1	
00000331	13.06488705	[580] ==== CAESAR global debugger ==> --- Section: PartD_C38 ---	
00000332	13.06494904	[580] ==== CAESAR global debugger ==> AdapterCode                    = 0	
00000333	13.06499577	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1	
00000334	13.06504345	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2	
00000335	13.06508827	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart	
00000336	13.06513405	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2	
00000337	13.06520557	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine	
00000338	13.06525230	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0	
00000339	13.06529713	[580] ==== CAESAR global debugger ==> MuxPins                        = 35      , 35	
00000340	13.06538296	[580] ==== CAESAR global debugger ==> --- Section: PartD_OBD2Cable ---	
00000341	13.06544685	[580] ==== CAESAR global debugger ==> AdapterCode                    = 1	
00000342	13.06549263	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 50	
00000343	13.06553745	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1	
00000344	13.06558323	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN	
00000345	13.06563091	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1	
00000346	13.06576443	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS	
00000347	13.06581879	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 41:40	
00000348	13.06587887	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15      , 0	
00000349	13.06596661	[580] ==== CAESAR global debugger ==> --- Section: PartD_OBD2CANTER ---	
00000350	13.06602955	[580] ==== CAESAR global debugger ==> AdapterCode                    = 81	
00000351	13.06607628	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 50	
00000352	13.06612206	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1	
00000353	13.06616783	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN	
00000354	13.06624508	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1	
00000355	13.06629276	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS	
00000356	13.06633949	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 41:40	
00000357	13.06638527	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15      , 0	
00000358	13.06646442	[580] ==== CAESAR global debugger ==> --- Section: PartJ ---	
00000359	13.06653881	[580] ==== CAESAR global debugger ==> DeviceName                     = "Macchina-Passthru"	
00000360	13.06658459	[580] ==== CAESAR global debugger ==> PassThruVersion                = "04.04"	
00000361	13.06666660	[580] ==== CAESAR global debugger ==> --- Section: PartV ---	
00000362	13.06681156	[580] ==== CAESAR global debugger ==> CaesarGoChannels               = 4	
00000363	13.06685734	[580] ==== CAESAR global debugger ==> CANWarningCheck                = TRUE	
00000364	13.06690216	[580] ==== CAESAR global debugger ==> DebugLevel                     = 1	
00000365	13.06694889	[580] ==== CAESAR global debugger ==> LegacyTiming                   = TRUE	
00000366	13.06699467	[580] ==== CAESAR global debugger ==> Monitoring                     = TRUE	
00000367	13.06703854	[580] ==== CAESAR global debugger ==> ReportErrorOnLowVBatt          = TRUE	
00000368	13.06708336	[580] ==== CAESAR global debugger ==> TLSlaveChannels                = 50	
00000369	13.06716156	[580] ==== CAESAR global debugger ==> --- Section: PartV_Breakout ---	
00000370	13.06725407	[580] ==== CAESAR global debugger ==> AdapterCode                    = 4	
00000371	13.06730366	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 100     , 100     , 100     , 1       , 4	
00000372	13.06735039	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2       , 2,      , 2       , 1	
00000373	13.06739807	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , CAN     , CAN     , Uart    , SSI	
00000374	13.06744385	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2       , 2       , 2       , 1	
00000375	13.06749058	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , CANHS   , CANLS   , J1708   , J1850	
00000376	13.06753635	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 41:40   , 0:0     , 0:0     , 3:11    , 2	
00000377	13.06758404	[580] ==== CAESAR global debugger ==> MuxPins                        = 35      , 35      , 0       , 0       , 0       , 0       , 0	
00000378	13.06766319	[580] ==== CAESAR global debugger ==> --- Section: PartV_C38 ---	
00000379	13.06780338	[580] ==== CAESAR global debugger ==> AdapterCode                    = 0	
00000380	13.06787205	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1	
00000381	13.06792450	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2	
00000382	13.06797123	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart	
00000383	13.06801701	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2	
00000384	13.06806183	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine	
00000385	13.06810760	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0	
00000386	13.06815338	[580] ==== CAESAR global debugger ==> MuxPins                        = 40      , 40	
00000387	13.06823349	[580] ==== CAESAR global debugger ==> --- Section: PartV_MonitorCable ---	
00000388	13.06832886	[580] ==== CAESAR global debugger ==> AdapterCode                    = 3	
00000389	13.06837749	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 100     , 100     , 100	
00000390	13.06842422	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 1       , 2       , 2	
00000391	13.06847000	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , CAN     , CAN     , CAN	
00000392	13.06851578	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 1       , 2       , 2	
00000393	13.06856155	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , CANHS   , CANHS   , CANLS	
00000394	13.06860733	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 5:6     , 7:8     , 7:8	
00000395	13.06865311	[580] ==== CAESAR global debugger ==> MuxPins                        = 40      , 0       , 0       , 0	
00000396	13.06873226	[580] ==== CAESAR global debugger ==> --- Section: PartV_OBD2Cable ---	
00000397	13.06888580	[580] ==== CAESAR global debugger ==> AdapterCode                    = 1	
00000398	13.06893921	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 100     , 100     , 100     , 1	
00000399	13.06898594	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2       , 2,      , 2	
00000400	13.06903076	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , CAN     , CAN     , Uart	
00000401	13.06907749	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2       , 2       , 2	
00000402	13.06912422	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , CANHS   , CANLS   , J1708	
00000403	13.06917000	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 6:14    , 12:13   , 12:13   , 3:11	
00000404	13.06921673	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15      , 0       , 0       , 0       , 0	
00000405	13.06938648	[580] ==== CAESAR global debugger ==> --- Section: PartV_OBD2CANTER ---	
00000406	13.06946182	[580] ==== CAESAR global debugger ==> AdapterCode                    = 81	
00000407	13.06949711	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 50      , 1	
00000408	13.06954288	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2	
00000409	13.06959152	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , Uart	
00000410	13.06963634	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2	
00000411	13.06968307	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , MMCSCM	
00000412	13.06972885	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 41:40   , [11,12,13]	
00000413	13.06977463	[580] ==== CAESAR global debugger ==> MuxPins                        = 20      , 20      , 0       , 3	
00000414	13.06989193	[580] ==== CAESAR global debugger ==> --- Section: PartV_OBD2DOIPCable ---	
00000415	13.06995487	[580] ==== CAESAR global debugger ==> AdapterCode                    = 16	
00000416	13.07000256	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 100     , 100     , 100	
00000417	13.07004833	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2       , 2	
00000418	13.07009506	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , CAN     , CAN	
00000419	13.07014084	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2       , 2	
00000420	13.07018757	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , CANHS   , CANLS	
00000421	13.07023335	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 6:14    , 12:13   , 12:13	
00000422	13.07027912	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15      , 0       , 0       , 0	
00000423	13.07044315	[580] ==== CAESAR global debugger ==> --- Section: PartV_Plug14 ---	
00000424	13.07050800	[580] ==== CAESAR global debugger ==> AdapterCode                    = 2	
00000425	13.07055378	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1	
00000426	13.07059956	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2	
00000427	13.07064629	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart	
00000428	13.07069111	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2	
00000429	13.07073689	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine	
00000430	13.07078266	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0	
00000431	13.07082844	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15	
00000432	13.07093430	[580] ==== CAESAR global debugger ==> --- Section: PartV_PulseConverterCable ---	
00000433	13.07099724	[580] ==== CAESAR global debugger ==> AdapterCode                    = 82	
00000434	13.07104492	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 50      , 1	
00000435	13.07109070	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2	
00000436	13.07113647	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , Uart	
00000437	13.07118225	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2	
00000438	13.07122803	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , MMCSCM	
00000439	13.07127380	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 41:40   , [11,12,13]	
00000440	13.07131958	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15      , 0       , 3	
00000441	13.07147408	[580] ==== CAESAR global debugger ==> --- Section: PartW ---	
00000442	13.07154179	[580] ==== CAESAR global debugger ==> AbortOnTCPError                = TRUE	
00000443	13.07158852	[580] ==== CAESAR global debugger ==> CaesarGoChannels               = 4	
00000444	13.07163429	[580] ==== CAESAR global debugger ==> CANWarningCheck                = FALSE	
00000445	13.07168007	[580] ==== CAESAR global debugger ==> ControlPort                    = 4000	
00000446	13.07172489	[580] ==== CAESAR global debugger ==> CPUActivityThreshold           = 60,200	
00000447	13.07177067	[580] ==== CAESAR global debugger ==> DeferCEResponse                = TRUE	
00000448	13.07181549	[580] ==== CAESAR global debugger ==> FlashIntegrityCheck            = TRUE	
00000449	13.07186127	[580] ==== CAESAR global debugger ==> IPReceiveTimeout               = 4000	
00000450	13.07190514	[580] ==== CAESAR global debugger ==> IPResyncAttempts               = 8	
00000451	13.07197857	[580] ==== CAESAR global debugger ==> LANActivityThreshold           = 30,500	
00000452	13.07202435	[580] ==== CAESAR global debugger ==> LocateAttempts                 = 1	
00000453	13.07206917	[580] ==== CAESAR global debugger ==> PacketDelay                    = 0	
00000454	13.07211399	[580] ==== CAESAR global debugger ==> PingActivityThreshold          = 10,500	
00000455	13.07216072	[580] ==== CAESAR global debugger ==> Protocol                       = TCP	
00000456	13.07220650	[580] ==== CAESAR global debugger ==> ReportErrorOnLowVBatt          = TRUE	
00000457	13.07225227	[580] ==== CAESAR global debugger ==> ReportFlashIntegrityFailure    = TRUE	
00000458	13.07229710	[580] ==== CAESAR global debugger ==> TLSlaveChannels                = 100	
00000459	13.07234192	[580] ==== CAESAR global debugger ==> ToolkitChannelNumber           = 1	
00000460	13.07238674	[580] ==== CAESAR global debugger ==> ToolkitConnectTimeout          = 360000	
00000461	13.07250595	[580] ==== CAESAR global debugger ==> VoltageOnTCPError              = 0	
00000462	13.07255363	[580] ==== CAESAR global debugger ==> WLANActivityThreshold          = 30,500	
00000463	13.07263470	[580] ==== CAESAR global debugger ==> --- Section: PartW_Breakout ---	
00000464	13.07269764	[580] ==== CAESAR global debugger ==> AdapterCode                    = 4	
00000465	13.07274532	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 100     , 100     , 100     , 1       , 4       , 10	
00000466	13.07279205	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2       , 2,      , 2       , 1       , 2	
00000467	13.07283878	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , CAN     , CAN     , Uart    , SSI     , SSI	
00000468	13.07288742	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2       , 2       , 2       , 1       , 1	
00000469	13.07295132	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , CANHS   , CANLS   , J1708   , J1850   , J1708	
00000470	13.07303810	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 41:40   , 0:0     , 0:0     , 3:11    , 2       , 3:11	
00000471	13.07309818	[580] ==== CAESAR global debugger ==> MuxPins                        = 35      , 35      , 0       , 0       , 0       , 0       , 0       , 0	
00000472	13.07319164	[580] ==== CAESAR global debugger ==> --- Section: PartW_C38 ---	
00000473	13.07325649	[580] ==== CAESAR global debugger ==> AdapterCode                    = 0	
00000474	13.07330322	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1	
00000475	13.07334900	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2	
00000476	13.07339478	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart	
00000477	13.07353306	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2	
00000478	13.07360172	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine	
00000479	13.07365608	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0	
00000480	13.07370949	[580] ==== CAESAR global debugger ==> MuxPins                        = 40      , 40	
00000481	13.07379246	[580] ==== CAESAR global debugger ==> --- Section: PartW_MonitorCable ---	
00000482	13.07385635	[580] ==== CAESAR global debugger ==> AdapterCode                    = 3	
00000483	13.07390213	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 100     , 100     , 100	
00000484	13.07394886	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 1       , 2       , 2,	
00000485	13.07403851	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , CAN     , CAN     , CAN	
00000486	13.07409000	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 1       , 2       , 2	
00000487	13.07418633	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , CANHS   , CANHS   , CANLS	
00000488	13.07421303	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 5:6     , 7:8     , 7:8	
00000489	13.07428837	[580] ==== CAESAR global debugger ==> MuxPins                        = 40      , 0       , 0       , 0	
00000490	13.07437801	[580] ==== CAESAR global debugger ==> --- Section: PartW_OBD2Cable ---	
00000491	13.07444668	[580] ==== CAESAR global debugger ==> AdapterCode                    = 1	
00000492	13.07449436	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 100     , 100     , 100     , 1       , 10	
00000493	13.07456779	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2       , 2,      , 2       , 2	
00000494	13.07463169	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , CAN     , CAN     , Uart    , SSI	
00000495	13.07469082	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2       , 2       , 2       , 1	
00000496	13.07474041	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , CANHS   , CANLS   , J1708   , J1708	
00000497	13.07478619	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 6:14    , 12:13   , 12:13   , 3:11    , 3:11	
00000498	13.07483292	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15      , 0       , 0       , 0       , 0       , 0	
00000499	13.07492256	[580] ==== CAESAR global debugger ==> --- Section: PartW_OBD2CANTER ---	
00000500	13.07498550	[580] ==== CAESAR global debugger ==> AdapterCode                    = 81	
00000501	13.07503319	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 50      , 1	
00000502	13.07507896	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2	
00000503	13.07512569	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , Uart	
00000504	13.07517242	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2	
00000505	13.07523251	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , MMCSCM	
00000506	13.07528114	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 41:40   , [11,12,13]	
00000507	13.07532692	[580] ==== CAESAR global debugger ==> MuxPins                        = 20      , 20      , 0       , 3	
00000508	13.07540798	[580] ==== CAESAR global debugger ==> --- Section: PartW_OBD2DOIPCable ---	
00000509	13.07546997	[580] ==== CAESAR global debugger ==> AdapterCode                    = 16	
00000510	13.07551479	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 100     , 100     , 100	
00000511	13.07556057	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2       , 2,	
00000512	13.07563496	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , CAN     , CAN	
00000513	13.07570267	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2       , 2	
00000514	13.07575035	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , CANHS   , CANLS	
00000515	13.07579708	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 6:14    , 12:13   , 12:13	
00000516	13.07584190	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15      , 0       , 0       , 0	
00000517	13.07592201	[580] ==== CAESAR global debugger ==> --- Section: PartW_Plug14 ---	
00000518	13.07598305	[580] ==== CAESAR global debugger ==> AdapterCode                    = 2	
00000519	13.07602882	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1	
00000520	13.07607365	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2	
00000521	13.07611847	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart	
00000522	13.07616329	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2	
00000523	13.07620811	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine	
00000524	13.07625294	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0	
00000525	13.07629681	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15	
00000526	13.07637596	[580] ==== CAESAR global debugger ==> --- Section: PartW_PulseConverterCable ---	
00000527	13.07643795	[580] ==== CAESAR global debugger ==> AdapterCode                    = 82	
00000528	13.07648277	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 50      , 1	
00000529	13.07654095	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2	
00000530	13.07658672	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , Uart	
00000531	13.07663631	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2	
00000532	13.07670403	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , MMCSCM	
00000533	13.07675552	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 41:40   , [11,12,13]	
00000534	13.07680035	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15      , 0       , 3	
00000535	13.07688046	[580] ==== CAESAR global debugger ==> --- Section: PartX ---	
00000536	13.07694626	[580] ==== CAESAR global debugger ==> CaesarGoChannels               = 4	
00000537	13.07699203	[580] ==== CAESAR global debugger ==> CANWarningCheck                = FALSE	
00000538	13.07703495	[580] ==== CAESAR global debugger ==> ControlPort                    = 4000	
00000539	13.07707977	[580] ==== CAESAR global debugger ==> ServerAdr                      = 192.168.0.12	
00000540	13.07712460	[580] ==== CAESAR global debugger ==> SlavePortBase                  = 4101	
00000541	13.07716942	[580] ==== CAESAR global debugger ==> TLSlaveChannels                = 50	
00000542	13.07726765	[580] ==== CAESAR global debugger ==> --- Section: PartY ---	
00000543	13.07733536	[580] ==== CAESAR global debugger ==> CaesarGoChannels               = 4	
00000544	13.07738209	[580] ==== CAESAR global debugger ==> CANWarningCheck                = TRUE	
00000545	13.07742882	[580] ==== CAESAR global debugger ==> Com                            = 1	
00000546	13.07747364	[580] ==== CAESAR global debugger ==> Interface                      = USB	
00000547	13.07751751	[580] ==== CAESAR global debugger ==> Monitoring                     = TRUE	
00000548	13.07756138	[580] ==== CAESAR global debugger ==> TLSlaveChannels                = 50	
00000549	13.07764149	[580] ==== CAESAR global debugger ==> --- Section: PartZ ---	
00000550	13.07770443	[580] ==== CAESAR global debugger ==> CaesarGoChannels               = 4	
00000551	13.07774925	[580] ==== CAESAR global debugger ==> CANWarningCheck                = TRUE	
00000552	13.07779408	[580] ==== CAESAR global debugger ==> DebugLevel                     = 1	
00000553	13.07783794	[580] ==== CAESAR global debugger ==> LegacyTiming                   = TRUE	
00000554	13.07788277	[580] ==== CAESAR global debugger ==> Monitoring                     = TRUE	
00000555	13.07792759	[580] ==== CAESAR global debugger ==> MonitoringLog                  = CAN1|CAN2|KLine1|KLine2	
00000556	13.07797337	[580] ==== CAESAR global debugger ==> MonitoringLogPath              = c:\userdata\	
00000557	13.07801819	[580] ==== CAESAR global debugger ==> MonitoringMaxFiles             = 5	
00000558	13.07806301	[580] ==== CAESAR global debugger ==> MonitoringMaxFileSize          = 50000000	
00000559	13.07810783	[580] ==== CAESAR global debugger ==> OneWirePin                     = 1	
00000560	13.07815266	[580] ==== CAESAR global debugger ==> ReportErrorOnLowVBatt          = TRUE	
00000561	13.07819653	[580] ==== CAESAR global debugger ==> ServerAdr                      = 192.168.171.2	
00000562	13.07824135	[580] ==== CAESAR global debugger ==> TLSlaveChannels                = 50	
00000563	13.07833004	[580] ==== CAESAR global debugger ==> --- Section: PartZ_C38 ---	
00000564	13.07839394	[580] ==== CAESAR global debugger ==> AdapterCode                    = 0	
00000565	13.07843876	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1	
00000566	13.07848358	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2	
00000567	13.07852936	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart	
00000568	13.07857323	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2	
00000569	13.07861805	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine	
00000570	13.07866287	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0	
00000571	13.07870770	[580] ==== CAESAR global debugger ==> MuxPins                        = 35      , 35	
00000572	13.07878590	[580] ==== CAESAR global debugger ==> --- Section: PartZ_EVOBUSFPXDMS ---	
00000573	13.07884693	[580] ==== CAESAR global debugger ==> AdapterCode                    = 8	
00000574	13.07889271	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 100     , 100     , 100	
00000575	13.07893848	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 1       , 2       , 2	
00000576	13.07898331	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , CAN     , CAN     , CAN	
00000577	13.07903004	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 1       , 2       , 2	
00000578	13.07907486	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , CANHS   , CANHS   , CANLS	
00000579	13.07911968	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 5:6     , 7:8     , 7:8	
00000580	13.07916451	[580] ==== CAESAR global debugger ==> MuxPins                        = 40      , 0       , 0       , 0	
00000581	13.07924271	[580] ==== CAESAR global debugger ==> --- Section: PartZ_MonitorCable ---	
00000582	13.07930374	[580] ==== CAESAR global debugger ==> AdapterCode                    = 3	
00000583	13.07935047	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 100     , 100     , 100	
00000584	13.07940960	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 1       , 2       , 2	
00000585	13.07945633	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , CAN     , CAN     , CAN	
00000586	13.07950211	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 1       , 2       , 2	
00000587	13.07957649	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , CANHS   , CANHS   , CANLS	
00000588	13.07962322	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 5:6     , 7:8     , 7:8	
00000589	13.07966900	[580] ==== CAESAR global debugger ==> MuxPins                        = 40      , 0       , 0       , 0	
00000590	13.07974815	[580] ==== CAESAR global debugger ==> --- Section: PartZ_OBD2Cable ---	
00000591	13.07980919	[580] ==== CAESAR global debugger ==> AdapterCode                    = 1	
00000592	13.07988071	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 100     , 100     , 100     , 1	
00000593	13.07994843	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2       , 2,      , 2	
00000594	13.08003521	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , CAN     , CAN     , Uart	
00000595	13.08008194	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2       , 2       , 2	
00000596	13.08012772	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , CANHS   , CANLS   , J1708	
00000597	13.08017349	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 6:14    , 12:13   , 12:13   , 3:11	
00000598	13.08021832	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15      , 0       , 0       , 0       , 0	
00000599	13.08029938	[580] ==== CAESAR global debugger ==> --- Section: PartZ_OBD2DOIPCable ---	
00000600	13.08036041	[580] ==== CAESAR global debugger ==> AdapterCode                    = 16	
00000601	13.08040619	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 100     , 100     , 100	
00000602	13.08045769	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2       , 2	
00000603	13.08051968	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , CAN     , CAN	
00000604	13.08057976	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2       , 2	
00000605	13.08094311	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , CANHS   , CANLS	
00000606	13.08102417	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 6:14    , 12:13   , 12:13	
00000607	13.08109570	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15      , 0       , 0       , 0	
00000608	13.08121967	[580] ==== CAESAR global debugger ==> --- Section: PartZ_Plug14 ---	
00000609	13.08130836	[580] ==== CAESAR global debugger ==> AdapterCode                    = 2	
00000610	13.08146763	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1	
00000611	13.08152294	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2	
00000612	13.08156967	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart	
00000613	13.08161545	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2	
00000614	13.08166409	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine	
00000615	13.08170605	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0	
00000616	13.08175087	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15	
00000617	13.08183479	[580] ==== CAESAR global debugger ==> --- Section: PartZ_PulseConverterCable ---	
00000618	13.08189869	[580] ==== CAESAR global debugger ==> AdapterCode                    = 82	
00000619	13.08197117	[580] ==== CAESAR global debugger ==> AvailableChannels              = 1       , 1       , 50      , 1	
00000620	13.08201790	[580] ==== CAESAR global debugger ==> DeviceNumber                   = 1       , 2       , 1       , 2	
00000621	13.08206367	[580] ==== CAESAR global debugger ==> DeviceType                     = Uart    , Uart    , CAN     , Uart	
00000622	13.08210945	[580] ==== CAESAR global debugger ==> DriverNumber                   = 1       , 2       , 1       , 2	
00000623	13.08215427	[580] ==== CAESAR global debugger ==> DriverType                     = KLine   , KLine   , CANHS   , MMCSCM	
00000624	13.08220005	[580] ==== CAESAR global debugger ==> HardwarePins                   = 0       , 0       , 41:40   , [11,12,13]	
00000625	13.08224583	[580] ==== CAESAR global debugger ==> MuxPins                        = 15      , 15      , 0       , 3	
00000626	13.08232594	[580] ==== CAESAR global debugger ==> --- Section: Spartacus ---	
00000627	13.08246422	[580] ==== CAESAR global debugger ==> CaesarGoChannels               = 4	
00000628	13.08250999	[580] ==== CAESAR global debugger ==> Monitoring                     = FALSE	
00000629	13.08255482	[580] ==== CAESAR global debugger ==> TLSlaveChannels                = 50	
00000630	13.08280659	[580] ==== CaesarComConstruct ==> Kein Fehler	
00000631	13.08285522	[580] -- CALStartCaesarComm --> no CAESAR options from MCF-file; just continue...	
00000632	13.08307362	[580] -- CALStartCaesarComm --> no or empty CPULOADREDUCTION entry defined in CAL.INI; skip setting via CaesarSetOptions !	
00000633	13.08312798	[580] -- CALStartCaesarComm --> Prüfung card errors: 1 cards detected !	
00000634	13.08316803	[580] -- CALStartCaesarComm / 1. card --> no card error set, card is OK !	
00000635	13.08323288	[580] -- CCALComm::IsCableOK --> Platform >>PART_J<< is neither Part D/T/V/W/Z, skip cable check !	
00000636	13.08329105	[580] ==== RMGetCableName ==> Kein Fehler	
00000637	13.08343410	[580] ==== SOpenEMA1 ==> Kein Fehler	
00000638	13.08349133	[580] -- CALStartCaesarComm --> EMA1 HW ID: 00.00.00, SW ID: 03.03.00, serial number: 004660	
00000639	13.08353615	[580] -- CALStartCaesarComm --> EMA1 User: DaimlerChrysler, Userkennung: 00, Userklassifizierung: 00	
00000640	13.08357716	[580] -- CALStartCaesarComm --> EMA1 hardware authentification: 00.00.00	
00000641	13.08362007	[580] -- CALStartCaesarComm --> EMA1 authorization level: 1	
00000642	13.08367634	[580] -- CALStartCaesarComm --> Patched User ID bytes 0..3 = 00/46/60/00	
00000643	13.08387280	[580] -- CALStartCaesarComm --> FLASH entry with value >>>C:\ProgramData\Mercedes-Benz\csd\writefil\flash\temp<< found in section [PATH]; use that one as flash base path !	
00000644	13.08398438	[580] -- CALStartCaesarComm --> path >>>C:\ProgramData\Mercedes-Benz\csd\writefil\flash\temp<<< is already existing; just pass it to CAESAR !	
00000645	13.08402920	[580] ==== CaesarSetFlashPath ==> Kein Fehler	
00000646	13.08408546	[580] -- CALStartCaesarComm --> Flash path read back from CAESAR: 'C:\ProgramData\Mercedes-Benz\csd\writefil\flash\temp'	
00000647	13.08415318	[580] -- Card Info -->   01: ID=4660, Interface=Part_J	
00000648	13.08419800	[580] -- Card Info -->       Firmware V 0.0	
00000649	13.08424282	[580] ==== CAESAR global debugger ==> J> SIJGetCableType	
00000650	13.08428764	[580] -- Card Info --> Cable info: Cable type = 6000, ID = 6000, Cable name = SAEJ2534_PassThru, Card boot name = TLSlave	
00000651	13.08433437	[580] -- Card Info --> Software ID = 30300	
00000652	13.08439064	[580] -- Card Info --> Allowed CBF/GBF version range:	
00000653	13.08439064	[580] 	
00000654	13.08439064	[580]    CBF: 40000/40099	
00000655	13.08439064	[580]    GBF: 34100/40199	
00000656	13.08450794	[580] -- CALStartCaesarComm --> platform is no XXXconnect; skip FUSO check !	
00000657	13.08456516	[580] -- CALStartCaesarComm --> platform is not Part D; skip EMA1 data verification...	
00000658	13.08462048	[580] -- CCALComm::IsSerialNumberOK --> Platform >>PART_J<< is neither Part D/T/V/W, skip serial number check !	
00000659	13.08466816	[580] -- CALStartCaesar --> Part J (= PassThru device) selected as hardware platform !	
00000660	13.08472443	[580] -- CALStartCaesar --> PassThru devices cannot read ignition from plug; force readout from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<<.	
00000661	13.08477020	[580] -- CCALComm::SetIgnitionMode --> switch to IgnitionReadFromSim	
00000662	13.08482361	[580] ==== CAESAR global debugger ==> +++ OPTION: IGNITIONINITBYPASS=ON used for IgnitionMeasurement via CAN	
00000663	13.08487988	[580] ==== CaesarSetOptions ==> Kein Fehler	
00000664	13.08492661	[580] -- CALStartCaesar --> CaesarSetOptions (IGNITIONINITBYPASS=ON) was OK !	
00000665	13.08497238	[580] -- CAL_SESSION --> check if right CAESAR firmware >>CAESARGO<< is active...	
00000666	13.18835926	[580] -- CCALComm::SelectCaesarFirmware --> trying to activate firmware >>CAESARGO<< for all known (1) cards...	
00000667	13.18881512	[580] -- CCALComm::SelectCaesarFirmware --> 1. card >>Macchina M2 UTD Passthru<< has active firmware >>TLSLAVE<<, trying to switch to >>CAESARGO<< !	
00000668	13.18903542	[580] -- CCALComm::SelectCaesarFirmware --> switch to ignition from plug to be on the safe side...	
00000669	13.18983650	[580] -- CCALComm::SetIgnitionMode --> switch to IgnitionFromPlug	
00000670	13.19058514	[580] ==== SISetupIgnitionMeasurement ==> Kein Fehler	
00000671	13.19106102	[580] ==== CMGetMoreCaesarResources ==> Fehler-Nr 8003 = ResourceManager: 08003: Reboot of slave card failed	
00000672	13.19170761	[580] -- CCALComm::SelectCaesarFirmware --> switch ignition mode back to state before firmware switch !	
00000673	13.19222546	[580] -- CCALComm::SetIgnitionMode --> switch to IgnitionReadFromSim	
00000674	13.42726707	[580] -- CAL_SESSION --> CAESAR has been started fresh; so ignition mode has been set freshly, too...	
00000675	13.43556499	[580] -- CContext::ClearContext --> All context entries removed.	
00000676	13.44152355	[580] -- CContext::InitializeContext --> scanning CAL database for all possible vehicle ECUs...	
00000677	13.44741154	[580] -- CCALComm::SetMonitoringMode --> setting monitoring to DAS_CONTROLLED for ALL Ecus.	
00000678	13.45356941	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00000679	13.51862907	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00000680	13.72810364	[580] -- CCALCalOpenCommNew::PerformAPICall --> ------------ START -----------	
00000681	13.72816277	[580] -- CCALCalOpenCommNew::PerformAPICall --> No blocking DAS ecu on another channel detected; just continue.	
00000682	13.72821903	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00000683	13.72829723	[580] -- CCALCalOpenCommNew::OpenCommSTART --> starting OpenComm for ecu >>>ALLEZS<<< on channel >>1<<....	
00000684	13.72833729	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00000685	13.72849751	[580] -- CCALCalOpenCommNew::OpenCommSTART --> group name is >>>ALLEZS<<<.	
00000686	13.72851563	[580] -- CCALCalOpenCommNew::OpenCommSTART --> requested ecu is a group name ==> no implicit group reset required !	
00000687	13.72862244	[580] -- CCALCalOpenCommNew::OpenCommSTART --> CDB_GetMarkedECU delivers >><< for Ecu name >>ALLEZS<< !	
00000688	13.72865582	[580] -- CTableManager::ResetTable --> resetting entry >>ALLEZS<<; erase marks = 0	
00000689	13.72872162	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00000690	13.72880173	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ------------ no thread active / switch to RETRIEVE_NEXT_ECU --------------	
00000691	13.72890091	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00000692	13.75969887	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): ALLEZS / EZS4CAN / EZS209*2	
00000693	13.76798248	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>EZS209*2<< is a CAN ECU, skip check!	
00000694	13.77367973	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00000695	13.78356838	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00000696	13.79056931	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00000697	13.80020142	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00000698	13.80618763	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00000699	13.81470680	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00000700	13.82096195	[580] -- CCalComm::GetEcuInterface --> >>>EZS209*2<<< has 3 ecu interfaces; try to to find correct one !	
00000701	13.82812500	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00000702	13.83408833	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00000703	13.84080791	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00000704	13.84883213	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E25F9A)	
00000705	13.85595512	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E25F9A)	
00000706	13.86387539	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00000707	13.87018204	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00000708	13.87791157	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00000709	13.88435173	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00000710	13.89040661	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00000711	13.89910698	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E25D1A)	
00000712	13.90528679	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E25D1A)	
00000713	13.91404343	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>LSCAN_KW2C3PE_83_3<<, long name >>LSCAN (KW2C3PE, 83.3)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00000714	13.92027664	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00000715	13.92670918	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00000716	13.93263817	[580] -- CCalComm::GetEcuInterface --> interface is >>LSCAN<<, baudrate is >>83_3<< !	
00000717	13.94151211	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00000718	13.94797802	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E261DA)	
00000719	13.95363235	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E261DA)	
00000720	13.95983696	[580] -- CCalComm::GetEcuInterface --> 3. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00000721	13.96647167	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00000722	13.97246838	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00000723	13.97955036	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00000724	13.98572350	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00000725	13.99237919	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00000726	13.99892330	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00000727	14.00678253	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>EZS209*2<< has no mutual exclusions !	
00000728	14.01490593	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> EZS4CAN is not a bus member.	
00000729	14.02179050	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>EZS4CAN<< !	
00000730	14.02820778	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00000731	14.03395557	[580] -- CALInitEcu --> Ecu >>>EZS209*2<<< is a normal CAESAR Ecu !	
00000732	14.04011726	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00000733	14.04580116	[580] -- CALInitEcu thread proc --> CBF to initialize: EZS209 on channel 1/ pin 101, has own connection (no bus member)	
00000734	14.05171013	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00000735	14.06172466	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00000736	14.06180191	[580] -- CALInitEcu thread proc --> Init service: 	
00000737	14.06189442	[580] -- CALInitEcu thread proc --> Special handlings: 	
00000738	14.06195354	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00000739	14.06202126	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00000740	14.06207657	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>EZS209*2<< / >>EZS209<<, SubSystem service = >><<	
00000741	14.06213093	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >><<, bCommIsActive = 0	
00000742	14.06218910	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00000743	14.06226444	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>EZS209<<< on CAN_HS	
00000744	14.06232929	[580] ==== CMLockResources ==> Kein Fehler	
00000745	14.06238365	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00000746	14.06244183	[580] -- CCalComm::GetEcuInterface --> >>>EZS209*2<<< has 3 ecu interfaces; try to to find correct one !	
00000747	14.06249428	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00000748	14.06253719	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00000749	14.06258106	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00000750	14.06263542	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E261DA)	
00000751	14.06362534	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E261DA)	
00000752	14.06445599	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00000753	14.06447887	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00000754	14.06457615	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00000755	14.06465244	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00000756	14.06469250	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00000757	14.06474209	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E25E9A)	
00000758	14.06566715	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E25E9A)	
00000759	14.06654549	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>LSCAN_KW2C3PE_83_3<<, long name >>LSCAN (KW2C3PE, 83.3)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00000760	14.06656837	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00000761	14.06667519	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00000762	14.06669807	[580] -- CCalComm::GetEcuInterface --> interface is >>LSCAN<<, baudrate is >>83_3<< !	
00000763	14.06678867	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00000764	14.06680202	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E2601A)	
00000765	14.06773567	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E2601A)	
00000766	14.06862259	[580] -- CCalComm::GetEcuInterface --> 3. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00000767	14.06864452	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00000768	14.06876755	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00000769	14.06880760	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00000770	14.06894398	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00000771	14.06897259	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E2601A)	
00000772	14.07009315	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00000773	14.07017803	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00000774	14.07035542	[580] ==== CAESAR global debugger ==> CMOpenChannel(EZS209) on CANHS-1 on Card 4660 #OC#	
00000775	14.07060623	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E391CA)	
00000776	14.07169628	[580] ==== CAESAR global debugger ==> #CR498# ECU: EZS209, GPD: ((VERSION 03.77.02, 18.01.06, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.10))	
00000777	14.07182884	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00000778	14.07266712	[580] ==== CAESAR global debugger ==> J> SIJLoadGPD	
00000779	14.07269001	[580] ==== CAESAR global debugger ==> J> SIJLoadGPD(GPDName C:\Program Files (x86)\Mercedes-Benz\DAS\bin\gbf\protocol.gbf, ProtocolName KW2C3PE#TL, notify 0	
00000780	14.07380772	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00000781	14.07420921	[580] ==== CAESAR global debugger ==> Warning: Loading DLL 'C:\Program Files (x86)\Mercedes-Benz\DAS\bin\InterpreterDebugPanel.DLL' failed (errorcode 2)	
00000782	14.07552147	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00000783	14.07555008	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00000784	14.07564449	[580] -- CALInitEcu --> CC is not allowed	
00000785	14.07567215	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00000786	14.07576275	[580] ==== CAESAR global debugger ==> CMInitChannel(EZS209) #OCI#	
00000787	14.08145714	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02074:GPDTOKENPRESENT: GPD received the token	
00000788	20.55010605	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00000789	20.55021286	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00000790	20.55025673	[580] ==== CAESAR global debugger ==> CMExitChannel(EZS209) #OCI#	
00000791	20.55180740	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00000792	20.55187607	[580] ==== CAESAR global debugger ==> CMCloseChannel(EZS209) #OC#	
00000793	20.55276680	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>EZS209*2<<	
00000794	20.55285263	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00000795	20.55293083	[580] -- CCalComm::GetEcuInterface --> >>>EZS209*2<<< has 3 ecu interfaces; try to to find correct one !	
00000796	20.55300522	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00000797	20.55306053	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00000798	20.55315971	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00000799	20.55323029	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E39D4A)	
00000800	20.55420494	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E39D4A)	
00000801	20.55511284	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00000802	20.55517578	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00000803	20.55526733	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00000804	20.55533218	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00000805	20.55540085	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00000806	20.55546951	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E39C8A)	
00000807	20.55691528	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E39C8A)	
00000808	20.55781364	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>LSCAN_KW2C3PE_83_3<<, long name >>LSCAN (KW2C3PE, 83.3)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00000809	20.55787659	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00000810	20.55794334	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00000811	20.55801201	[580] -- CCalComm::GetEcuInterface --> interface is >>LSCAN<<, baudrate is >>83_3<< !	
00000812	20.55807114	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00000813	20.55814552	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E39F4A)	
00000814	20.55925179	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E39F4A)	
00000815	20.56016350	[580] -- CCalComm::GetEcuInterface --> 3. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00000816	20.56023598	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00000817	20.56030083	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00000818	20.56036377	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00000819	20.56042671	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00000820	20.56050491	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E39F4A)	
00000821	20.56138992	[580] ==== DIOpenEcu ==> Kein Fehler	
00000822	20.56148911	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00000823	20.56155586	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00000824	20.56162262	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00000825	20.56266594	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00000826	20.56269646	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00000827	20.56279373	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00000828	20.56285286	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00000829	20.56288147	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00000830	20.56293297	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00000831	20.58340454	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name):  /  / 	
00000832	20.58344269	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> no more ECUs in CAL database !	
00000833	20.58354187	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ...but we had a at least one real init try; so return the fault of that try.	
00000834	20.58357430	[580] -- CALOpenCommNew --> Communication was NOK; resetting >>>ALLEZS<<< to allow test for ECU change with new CBF and Protocol on next try.	
00000835	20.58367729	[580] -- CTableManager::ResetTable --> resetting entry >>ALLEZS<<; erase marks = 1	
00000836	20.58377266	[580] -- CContext::TraceEntry --> context entry: Group >>ALLEZS<<, Members >>|EZS4CAN|<<, status is NOK	
00000837	20.60164833	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00000838	20.68468094	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00000839	21.89189529	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00000840	21.89192009	[580] -- CALGetCommState --> comm link is free	
00000841	21.89202309	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00000842	21.89221764	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00000843	21.89224243	[580] -- CALGetCommState --> Channel 1 is not in use	
00000844	21.89235115	[580] -- CALGetCommState --> Channel 2 is not in use	
00000845	21.89237213	[580] -- CALGetCommState --> returned bitfield is: 0801	
00000846	21.89249611	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00000847	21.89254379	[580] -- CCALCalOpenCommNew::PerformAPICall --> ------------ START -----------	
00000848	21.89262390	[580] -- CCALCalOpenCommNew::PerformAPICall --> No blocking DAS ecu on another channel detected; just continue.	
00000849	21.89266014	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00000850	21.89272308	[580] -- CCALCalOpenCommNew::OpenCommSTART --> starting OpenComm for ecu >>>EZS4K<<< on channel >>1<<....	
00000851	21.89277458	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00000852	21.89284134	[580] -- CCALCalOpenCommNew::OpenCommSTART --> group name is >>>EZS4K<<<.	
00000853	21.89289093	[580] -- CCALCalOpenCommNew::OpenCommSTART --> requested ecu is a group name ==> no implicit group reset required !	
00000854	21.89294243	[580] -- CCALCalOpenCommNew::OpenCommSTART --> CDB_GetMarkedECU delivers >><< for Ecu name >>EZS4K<< !	
00000855	21.89299202	[580] -- CTableManager::ResetTable --> resetting entry >>EZS4K<<; erase marks = 0	
00000856	21.89304352	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00000857	21.89309311	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ------------ no thread active / switch to RETRIEVE_NEXT_ECU --------------	
00000858	21.89316177	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00000859	21.89321518	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): EZS4K / EZS4K / EZS209*3	
00000860	21.89331436	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>EZS209*3<<	
00000861	21.89337349	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00000862	21.89342117	[580] -- CCalComm::GetEcuInterface --> >>>EZS209*3<<< has 3 ecu interfaces; try to to find correct one !	
00000863	21.89347267	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>KLINE<< !	
00000864	21.89352036	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00000865	21.89357758	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E3954A)	
00000866	21.89449883	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E3954A)	
00000867	21.89530754	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00000868	21.89533043	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00000869	21.89546967	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00000870	21.89548874	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00000871	21.89558983	[580] -- CCalComm::GetEcuInterface --> interface is OK and it is no CAN ECU; so skip baudrate check and just use it !	
00000872	21.89561844	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E3954A)	
00000873	21.89650154	[580] ==== DIOpenEcu ==> Kein Fehler	
00000874	21.89660835	[580] -- CCALComm::GetAdressAndProtocol --> Address = 22 hex, Protocol = >>KW2000PE<<	
00000875	21.89663124	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>EZS209*3<< has protocol KW2000PE, pin 1 and address 0x22 / 34 decimal !	
00000876	21.89673615	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00000877	21.89675713	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00000878	21.89686012	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00000879	21.89689255	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00000880	21.89694595	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00000881	21.89702225	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00000882	21.89710236	[580] -- CCalComm::GetEcuInterface --> >>>EZS209*3<<< has 3 ecu interfaces; try to to find correct one !	
00000883	21.89715195	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>KLINE<< !	
00000884	21.89723206	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00000885	21.89727974	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E39A0A)	
00000886	21.89817238	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E39A0A)	
00000887	21.89898872	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00000888	21.89901161	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00000889	21.89912605	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00000890	21.89918137	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00000891	21.89929771	[580] -- CCalComm::GetEcuInterface --> interface is OK and it is no CAN ECU; so skip baudrate check and just use it !	
00000892	21.89934349	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00000893	21.89940071	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00000894	21.89945030	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>EZS209*3<< has no mutual exclusions !	
00000895	21.89949989	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> EZS4K is not a bus member.	
00000896	21.89954948	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>EZS4K<< !	
00000897	21.89969635	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00000898	21.89974785	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00000899	21.89979172	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00000900	21.90008545	[580] -- CALInitEcu --> Ecu >>>EZS209*3<<< is a normal CAESAR Ecu !	
00000901	21.90016747	[580] -- CALInitEcu thread proc --> CBF to initialize: EZS209 on channel 1/ pin 1, has own connection (no bus member)	
00000902	21.90027237	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00000903	21.90040398	[580] -- CALInitEcu thread proc --> Init service: 	
00000904	21.90051079	[580] -- CALInitEcu thread proc --> Special handlings: 	
00000905	21.90061378	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00000906	21.90074730	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00000907	21.90088081	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>EZS209*3<< / >>EZS209<<, SubSystem service = >><<	
00000908	21.90094757	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>EZS209<<, bCommIsActive = 0	
00000909	21.90102386	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00000910	21.90110016	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>EZS209<<< on pin 1	
00000911	21.90119934	[580] ==== CMLockResources ==> Kein Fehler	
00000912	21.90128708	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00000913	21.90139389	[580] -- CCalComm::GetEcuInterface --> >>>EZS209*3<<< has 3 ecu interfaces; try to to find correct one !	
00000914	21.90147018	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>KLINE<< !	
00000915	21.90154076	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00000916	21.90161705	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E39C8A)	
00000917	21.90284729	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E39C8A)	
00000918	21.90415382	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00000919	21.90423393	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00000920	21.90430832	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00000921	21.90438461	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00000922	21.90446091	[580] -- CCalComm::GetEcuInterface --> interface is OK and it is no CAN ECU; so skip baudrate check and just use it !	
00000923	21.90453720	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x07E39C8A)	
00000924	21.90539360	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00000925	21.90546036	[580] -- CCALComm::RetrieveAndOpenChannel --> no fitting resource available ! deliver OPEN error.	
00000926	21.90553856	[580] -- CALInitEcu --> OPEN error occured; DO NOT memorize, Pin/address/protocol combination !	
00000927	21.90560722	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00000928	21.90569115	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00000929	21.90574074	[580] -- CCALCalOpenCommNew::CheckEcuInit --> no comm error. return with NOK !	
00000930	21.90580750	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00000931	21.90592575	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to FINISHED --------------	
00000932	21.90609360	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00000933	21.90617752	[580] -- CALOpenCommNew --> Communication was NOK; resetting >>>EZS4K<<< to allow test for ECU change with new CBF and Protocol on next try.	
00000934	21.90623283	[580] -- CTableManager::ResetTable --> resetting entry >>EZS4K<<; erase marks = 1	
00000935	22.60204887	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00000936	22.70731735	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00000937	24.60530472	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00000938	24.66931343	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00000939	26.45740318	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00000940	26.45746040	[580] -- CALGetCommState --> comm link is free	
00000941	26.45752716	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00000942	26.45773888	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00000943	26.45778656	[580] -- CALGetCommState --> Channel 1 is not in use	
00000944	26.45784569	[580] -- CALGetCommState --> Channel 2 is not in use	
00000945	26.45790100	[580] -- CALGetCommState --> returned bitfield is: 0801	
00000946	26.45796585	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00000947	26.45814323	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00000948	26.45825005	[580] -- CALGetCommState --> comm link is free	
00000949	26.45835304	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00000950	26.45864296	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00000951	26.45867729	[580] -- CALGetCommState --> Channel 1 is not in use	
00000952	26.45876312	[580] -- CALGetCommState --> Channel 2 is not in use	
00000953	26.45884895	[580] -- CALGetCommState --> returned bitfield is: 0801	
00000954	26.45894623	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00000955	26.56347466	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00000956	26.62064552	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.9 V !	
00000957	28.73798752	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00000958	28.73803139	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00000959	30.63497353	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00000960	30.70874214	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00000961	32.60576248	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00000962	32.66257095	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00000963	34.55987167	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00000964	34.60284805	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00000965	36.05332565	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00000966	36.05339050	[580] -- CALGetCommState --> comm link is free	
00000967	36.05344772	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00000968	36.05364609	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00000969	36.05371475	[580] -- CALGetCommState --> Channel 1 is not in use	
00000970	36.05376053	[580] -- CALGetCommState --> Channel 2 is not in use	
00000971	36.05380630	[580] -- CALGetCommState --> returned bitfield is: 0801	
00000972	36.05396652	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00000973	36.05413818	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00000974	36.05415726	[580] -- CALGetCommState --> comm link is free	
00000975	36.05421829	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00000976	36.05438232	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00000977	36.05443192	[580] -- CALGetCommState --> Channel 1 is not in use	
00000978	36.05447388	[580] -- CALGetCommState --> Channel 2 is not in use	
00000979	36.05451965	[580] -- CALGetCommState --> returned bitfield is: 0801	
00000980	36.05456924	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00000981	36.58285522	[580] -- CAL_SESSION --> Entry...	
00000982	36.58300018	[580] -- CAL_SESSION --> action is RESET_SESSION...	
00000983	36.58314133	[580] -- CTableManager::ResetTable --> resetting whole table (full shorttest); erase = 1	
00000984	36.58337402	[580] -- CContext::ClearContext --> All context entries removed.	
00000985	36.58346939	[580] -- CContext::InitializeContext --> scanning CAL database for all possible vehicle ECUs...	
00000986	36.58707047	[580] -- CALCloseComm --> close channel 0	
00000987	36.58720779	[580] -- CalCloseComm --> CloseComm thread for channel 0 finished !	
00000988	36.58890152	[580] -- CALCloseComm --> close channel 1	
00000989	36.58905411	[580] -- CalCloseComm --> CloseComm thread for channel 1 finished !	
00000990	36.59140778	[580] -- CALCloseComm --> close channel 2	
00000991	36.59155273	[580] -- CalCloseComm --> CloseComm thread for channel 2 finished !	
00000992	36.59375381	[580] -- CALCloseComm --> close channel 3	
00000993	36.59385300	[580] -- CalCloseComm --> CloseComm thread for channel 3 finished !	
00000994	36.59622574	[580] -- CALCloseComm --> close channel 4	
00000995	36.59632492	[580] -- CalCloseComm --> CloseComm thread for channel 4 finished !	
00000996	36.59782028	[580] -- CALCloseComm --> close channel 5	
00000997	36.59792709	[580] -- CalCloseComm --> CloseComm thread for channel 5 finished !	
00000998	36.60042191	[580] -- CALCloseComm --> close channel 6	
00000999	36.60050201	[580] -- CalCloseComm --> CloseComm thread for channel 6 finished !	
00001000	36.60174561	[580] -- CALCloseComm --> close channel 7	
00001001	36.60189819	[580] -- CalCloseComm --> CloseComm thread for channel 7 finished !	
00001002	36.60346603	[580] -- CALCloseComm --> close channel 8	
00001003	36.60354614	[580] -- CalCloseComm --> CloseComm thread for channel 8 finished !	
00001004	36.60523987	[580] -- CALCloseComm --> close channel 9	
00001005	36.60533524	[580] -- CalCloseComm --> CloseComm thread for channel 9 finished !	
00001006	36.60632706	[580] -- CAL_SESSION --> CAESAR is ComConstructed, set right ignition mode...	
00001007	36.60647202	[580] -- CCALComm::SetIgnitionMode --> switch to IgnitionReadFromSim	
00001008	36.60674667	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001009	36.66302490	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001010	38.62691879	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001011	38.71483994	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.9 V !	
00001012	39.15624237	[580] -- CCALCalOpenCommNew::PerformAPICall --> ------------ START -----------	
00001013	39.15632248	[580] -- CCALCalOpenCommNew::PerformAPICall --> No blocking DAS ecu on another channel detected; just continue.	
00001014	39.15638351	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00001015	39.15646362	[580] -- CCALCalOpenCommNew::OpenCommSTART --> starting OpenComm for ecu >>>ZGWIDENT<<< on channel >>1<<....	
00001016	39.15647507	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00001017	39.15653992	[580] -- CCALCalOpenCommNew::OpenCommSTART --> group name is >>><<<.	
00001018	39.15658951	[580] -- CCALCalOpenCommNew::OpenCommSTART --> requested ecu is a group member, but group is not marked yet ==> no implicit group reset required !	
00001019	39.15663910	[580] -- CCALCalOpenCommNew::OpenCommSTART --> CDB_GetMarkedECU delivers >><< for Ecu name >>ZGWIDENT<< !	
00001020	39.15668869	[580] -- CTableManager::ResetTable --> resetting entry >>ZGWIDENT<<; erase marks = 0	
00001021	39.15684128	[580] -- CCALCalOpenCommNew::OpenCommSTART --> CDB_ResetTable failed for ecu name >>ZGWIDENT<< !	
00001022	39.15694427	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00001023	39.15705109	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ------------ switch to FINISHED --------------	
00001024	39.15708160	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00001025	39.15717697	[580] -- CALOpenCommNew --> Communication was NOK; resetting >>>ZGWIDENT<<< to allow test for ECU change with new CBF and Protocol on next try.	
00001026	39.15719986	[580] -- CTableManager::ResetTable --> resetting entry >>ZGWIDENT<<; erase marks = 1	
00001027	39.17197418	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00001028	39.17208481	[580] -- CALGetCommState --> comm link is free	
00001029	39.17210007	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00001030	39.17230988	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00001031	39.17233658	[580] -- CALGetCommState --> Channel 1 is not in use	
00001032	39.17239761	[580] -- CALGetCommState --> Channel 2 is not in use	
00001033	39.17245483	[580] -- CALGetCommState --> returned bitfield is: 0801	
00001034	39.17256927	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00001035	39.17272186	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00001036	39.17274475	[580] -- CALGetCommState --> comm link is free	
00001037	39.17279816	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00001038	39.17294693	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00001039	39.17299652	[580] -- CALGetCommState --> Channel 1 is not in use	
00001040	39.17306137	[580] -- CALGetCommState --> Channel 2 is not in use	
00001041	39.17310715	[580] -- CALGetCommState --> returned bitfield is: 0801	
00001042	39.17315674	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00001043	39.74032974	[580] -- CAL_SESSION --> Entry...	
00001044	39.74040222	[580] -- CAL_SESSION --> action is STOP...	
00001045	39.74068451	[580] -- CCALCalCloseComm::PerformAPICall --> ecu name is ALL_CHANNELS; close all connections !	
00001046	39.74179077	[580] -- CALCloseComm --> close channel 0	
00001047	39.74192047	[580] -- CalCloseComm --> CloseComm thread for channel 0 finished !	
00001048	39.74443054	[580] -- CALCloseComm --> close channel 1	
00001049	39.74453735	[580] -- CalCloseComm --> CloseComm thread for channel 1 finished !	
00001050	39.74590302	[580] -- CALCloseComm --> close channel 2	
00001051	39.74648666	[580] -- CalCloseComm --> CloseComm thread for channel 2 finished !	
00001052	39.77499008	[580] -- CALCloseComm --> close channel 3	
00001053	39.78981781	[580] -- CalCloseComm --> CloseComm thread for channel 3 finished !	
00001054	39.79693604	[580] -- CALCloseComm --> close channel 4	
00001055	39.80488586	[580] -- CalCloseComm --> CloseComm thread for channel 4 finished !	
00001056	39.81091690	[580] -- CALCloseComm --> close channel 5	
00001057	39.81803513	[580] -- CalCloseComm --> CloseComm thread for channel 5 finished !	
00001058	39.82423782	[580] -- CALCloseComm --> close channel 6	
00001059	39.83121109	[580] -- CalCloseComm --> CloseComm thread for channel 6 finished !	
00001060	39.83751297	[580] -- CALCloseComm --> close channel 7	
00001061	39.84463120	[580] -- CalCloseComm --> CloseComm thread for channel 7 finished !	
00001062	39.85205460	[580] -- CALCloseComm --> close channel 8	
00001063	39.85817337	[580] -- CalCloseComm --> CloseComm thread for channel 8 finished !	
00001064	39.86487961	[580] -- CALCloseComm --> close channel 9	
00001065	39.87128067	[580] -- CalCloseComm --> CloseComm thread for channel 9 finished !	
00001066	39.87670898	[580] -- CCALComm::SetMonitoringMode --> setting monitoring to OFF.	
00001067	39.88349533	[580] -- CContext::ClearContext --> All context entries removed.	
00001068	39.88939667	[580] -- CAL_SESSION --> CDB_ExitSession completed	
00001069	39.90511703	[580] -- CAL_SESSION --> STOP completed..	
00001070	39.98348618	[580] -- CAL_SESSION --> Entry...	
00001071	39.98351288	[580] -- CAL_SESSION --> action is START...	
00001072	39.98377228	[580] -- CAL_SESSION (START) --> Distance unit registry key constructed from >>REG_KM<< + >>US<< = >>REG_KM_US<<	
00001073	39.98393631	[580] -- DetermineTargetUnit --> Registry unit >>>REG_KM_US<<< requested.	
00001074	39.98408127	[580] -- DetermineTargetUnit --> ERROR: either REGUNITS.INF does not exist or the requested unit is not contained ! try oldfashioned registry access.	
00001075	39.98426819	[580] -- DetermineTargetUnit --> HKEY_LOCAL_MACHINE contains >>>miles<<<.	
00001076	39.98431778	[580] -- CAL_SESSION (START) --> Registry entry found ! Distance unit is: >>miles<<	
00001077	39.98460388	[580] -- CSessionManager::InitSession --> CAL.INI contains specific configuration >>PASSTHRUCONFIG<< !	
00001078	39.98477554	[580] -- CFGRescale::FileIsPresent --> checking presence of '..\comdat\\PKW\RESCALE.INI'... OK !	
00001079	39.99411774	[580] -- CFGVehicle::FileIsPresent --> checking presence of '..\comdat\\PKW\PKW.GCF'... OK !	
00001080	39.99429321	[580] -- CFGVehicle::GetVehicleInfo --> DecodeFile signalled WARNING: no signature found ! wrong or decoded file; try to use as is.	
00001081	39.99440765	[580] -- CFGVehicle::GetVehicleInfo --> Looking in GCF for requested model >>203.007<< and engine >>>MOPF203<<<...	
00001082	40.02630234	[580] -- CFGVehicle::GetVehicleInfo --> OK, GCF entry found: >>>>>203.007,    203_D_15.mcf,MOPF203,C 200,CDI     ,   ,MN_CDI3,PT<<<<<	
00001083	40.02650070	[580] -- CFGVehicle::FileIsPresent --> checking presence of '..\comdat\\PKW\203_D_15.mcf'... OK !	
00001084	40.02669525	[580] -- CFGVehicle::GetVehicleInfo --> DecodeFile signalled WARNING: no signature found ! wrong or decoded file; try to use as is.	
00001085	40.02693176	[580] -- CFGVehicle::GetVehicleInfo --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for global setup retrieval  !	
00001086	40.02715683	[580] -- CFGVehicle::GetVehicleInfo --> option DISABLE_FIRMWARESWITCH not found or <>  1; use any firmware declarations in GCF or MCF as usual !	
00001087	40.02745438	[580] -- CFGVehicle::GetVehicleInfo --> no MCF ecu INCLUDE declaration found for actual configuration >>PASSTHRUCONFIG<< !	
00001088	40.02764130	[580] -- CFGVehicle::GetVehicleInfo --> no MCF ecu EXCLUDE declaration found for actual configuration >>PASSTHRUCONFIG<< !	
00001089	40.02779388	[580] -- CFGVehicle::GetVehicleInfo --> configured plug in section >>GLOBAL<< is >>>D_OBDII,D_Plug4<<<	
00001090	40.02800369	[580] -- CFGVehicle::GetVehicleInfo --> No entry found for CAN_HS baudrate in section >>GLOBAL<<; default to 500 kBd !	
00001091	40.02819443	[580] -- CFGVehicle::GetVehicleInfo --> No entry found for CAN_LS baudrate in section >>GLOBAL<<; default to 83.3 kBd !	
00001092	40.02833939	[580] -- CFGVehicle::GetVehicleInfo --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>IGNITION_PASSTHRUCONFIG<<; use standard IGNITION section for ignition ecu/service retrieval  !	
00001093	40.02867508	[580] -- CFGVehicle::GetVehicleInfo --> no configuration data present for ignition via comm !	
00001094	40.02883148	[580] -- CFGVehicle::GetVehicleInfo --> configuration data for ignition retry is not specified; default to TRUE !	
00001095	40.02909088	[580] -- CFGVehicle::GetVehicleInfo --> no special CAESAR firmware configured in section >>GLOBAL<<; using CaesarGo as default !	
00001096	40.02943420	[580] -- CFGVehicle::GetVehicleInfo --> we have an active configuration >>PASSTHRUCONFIG<< and MCF contains a section >>PARALLEL_SHORTTEST_PASSTHRUCONFIG<<; use that one for parallel shorttest configuration retrieval !	
00001097	40.02959824	[580] -- CFGVehicle::GetVehicleInfo --> nothing configured for parallel shorttest; disable by default !	
00001098	40.02992630	[580] -- CFGVehicle::GetVehicleInfo --> no declaration for single thread maximum; default to 1 !	
00001099	40.03025818	[580] -- CFGVehicle::GetVehicleInfo --> unknown or empty start firmware for parallel shortest; default to TLSlave !	
00001100	40.03079987	[580] -- CFGVehicle::GetVehicleInfo --> global VIN ecu/service from section >>GLOBAL<< are >>ALLCDI3<< / >>DT_FIN_Lesen<<	
00001101	40.03113937	[580] -- CFGVehicle::GetVehicleInfo --> global distance ecu/service from section >>GLOBAL<< are >>KIW2M<< / >>DT_Gesamtwegstrecke_Wert<<	
00001102	40.03353500	[580] -- CFGVehicle::GetVehicleInfo --> Monitoring mode is 'DAS_CONTROLLED'; ALL Ecus are monitored.	
00001103	40.03380203	[580] -- CFGVehicle::GetVehicleInfo --> WCF name entry in MCF is >>PKW<<; full path is >>..\comdat\\PKW\PKW.WCF<< !	
00001104	40.03398132	[580] -- CFGVehicle::GetVehicleInfo --> no declaration for ALLOW_FUSO in >>GLOBAL<<; default to >>not allowed<< !	
00001105	40.03416061	[580] -- CFGVehicle::GetVehicleInfo --> CAESAR_OPTIONS not declared in section >>GLOBAL<< or empty !	
00001106	40.03422546	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> *********************************************************	
00001107	40.03432083	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****  Einstieg Lesen Dio-Names aus MCF	
00001108	40.03438568	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> **** 	
00001109	40.04230881	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****  Ende nach 0.01 seconds für Lesen Dio-Names aus MCF	
00001110	40.04233932	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****                                                   	
00001111	40.04240036	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****  61 Diogenes names detected !	
00001112	40.04245758	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> *********************************************************	
00001113	40.04250717	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> *********************************************************	
00001114	40.04254913	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****  Einstieg GCF scan	
00001115	40.04259491	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> **** 	
00001116	40.99064255	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****  Ende nach 0.95 seconds für GCF scan	
00001117	40.99077606	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ****  61 global ECU entries found in GCF file.	
00001118	40.99090195	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> *********************************************************	
00001119	40.99093628	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> VINECU is ALLCDI3 / ;  global VIN service is 'DT_FIN_Lesen'	
00001120	40.99099350	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific VIN services will be retrieved after loading the ECU tables.	
00001121	40.99103928	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> Distance ECU is KIW2M / KI203M;  global distance service is 'DT_Gesamtwegstrecke_Wert'	
00001122	40.99108124	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific distance services will be retrieved after loading the ECU tables.	
00001123	40.99112701	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> fuel level ECU is  / ;  global fuel level service is ''	
00001124	40.99116898	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific fuel level services will be retrieved after loading the ECU tables.	
00001125	40.99121094	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> distance til service ECU is KIW2M / KI203M;  global distance til service service is 'DT_STO_Auslesen_WIA_Messwerte_Restlaufstrecke_Anzeige, km'	
00001126	40.99125290	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific distance til service services will be retrieved after loading the ECU tables.	
00001127	40.99131393	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> Time til service ECU is KIW2M / KI203M;  global Time til service service is 'DT_STO_Zwischenwerte_Serviceintervall_Restlaufzeit, d'	
00001128	40.99143982	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific Time til service services will be retrieved after loading the ECU tables.	
00001129	40.99146271	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> WorkshopCode ECU is  / ;  global WorkshopCode service is ''	
00001130	40.99151230	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific WorkshopCode services will be retrieved after loading the ECU tables.	
00001131	40.99156189	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ServiceCode ECU is  / ;  global ServiceCode service is ''	
00001132	40.99162292	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific ServiceCode services will be retrieved after loading the ECU tables.	
00001133	40.99166870	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ServiceScope ECU is KIW2M / KI203M;  global ServiceScope service is 'DT_STO_Zwischenwerte_Serviceintervall_Serviceumfang'	
00001134	40.99171448	[580] -- CFGGlobalEcuInfo::CFGGlobalEcuInfo --> ECU specific ServiceScope services will be retrieved after loading the ECU tables.	
00001135	40.99176407	[580] -- CTableManager::LoadTable --> *********************************************************	
00001136	40.99180603	[580] -- CTableManager::LoadTable --> ****  Einstieg	
00001137	40.99192810	[580] -- CTableManager::LoadTable --> *********************************************************	
00001138	40.99273682	[580] -- CFGEcuList::GetNextEcu -> ZGW203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001139	40.99335480	[580] -- CFGEcuList::GetNextEcu -> ZGW203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001140	40.99380875	[580] -- CFGEcuList::GetNextEcu -> ZGW203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001141	40.99609375	[580] -- CFGEcuList::GetNextEcu -> EZS209:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001142	40.99675369	[580] -- CFGEcuList::GetNextEcu -> EZS209:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001143	40.99715042	[580] -- CFGEcuList::GetNextEcu -> EZS209:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001144	40.99945450	[580] -- CFGEcuList::GetNextEcu -> EGS52:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001145	41.00005341	[580] -- CFGEcuList::GetNextEcu -> EGS52:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001146	41.00058746	[580] -- CFGEcuList::GetNextEcu -> EGS52:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001147	41.00267029	[580] -- CFGEcuList::GetNextEcu -> EGS53:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001148	41.00328827	[580] -- CFGEcuList::GetNextEcu -> EGS53:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001149	41.00368500	[580] -- CFGEcuList::GetNextEcu -> EGS53:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001150	41.00575256	[580] -- CFGEcuList::GetNextEcu -> VGSNAG2:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001151	41.00632858	[580] -- CFGEcuList::GetNextEcu -> VGSNAG2:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001152	41.00674438	[580] -- CFGEcuList::GetNextEcu -> VGSNAG2:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001153	41.00879288	[580] -- CFGEcuList::GetNextEcu -> VGSNAG2*PDTC:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001154	41.00939941	[580] -- CFGEcuList::GetNextEcu -> VGSNAG2*PDTC:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001155	41.00979614	[580] -- CFGEcuList::GetNextEcu -> VGSNAG2*PDTC:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001156	41.01213455	[580] -- CFGEcuList::GetNextEcu -> KSG:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001157	41.01285934	[580] -- CFGEcuList::GetNextEcu -> KSG:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001158	41.01323700	[580] -- CFGEcuList::GetNextEcu -> KSG:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001159	41.01522064	[580] -- CFGEcuList::GetNextEcu -> EWM203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001160	41.01576996	[580] -- CFGEcuList::GetNextEcu -> EWM203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001161	41.01613235	[580] -- CFGEcuList::GetNextEcu -> EWM203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001162	41.01820374	[580] -- CFGEcuList::GetNextEcu -> CR3_UP:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001163	41.01882553	[580] -- CFGEcuList::GetNextEcu -> CR3_UP:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001164	41.01922226	[580] -- CFGEcuList::GetNextEcu -> CR3_UP:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001165	41.02128983	[580] -- CFGEcuList::GetNextEcu -> CR3_UP*1:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001166	41.02191544	[580] -- CFGEcuList::GetNextEcu -> CR3_UP*1:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001167	41.02231979	[580] -- CFGEcuList::GetNextEcu -> CR3_UP*1:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001168	41.02440262	[580] -- CFGEcuList::GetNextEcu -> CR3_UP*2:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001169	41.02517319	[580] -- CFGEcuList::GetNextEcu -> CR3_UP*2:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001170	41.02554703	[580] -- CFGEcuList::GetNextEcu -> CR3_UP*2:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001171	41.02796936	[580] -- CFGEcuList::GetNextEcu -> ESPMK25:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001172	41.02868271	[580] -- CFGEcuList::GetNextEcu -> ESPMK25:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001173	41.02916336	[580] -- CFGEcuList::GetNextEcu -> ESPMK25:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001174	41.03144455	[580] -- CFGEcuList::GetNextEcu -> ARMADA:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001175	41.03210068	[580] -- CFGEcuList::GetNextEcu -> ARMADA:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001176	41.03246689	[580] -- CFGEcuList::GetNextEcu -> ARMADA:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001177	41.03489304	[580] -- CFGEcuList::GetNextEcu -> DBE203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001178	41.03553772	[580] -- CFGEcuList::GetNextEcu -> DBE203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001179	41.03593445	[580] -- CFGEcuList::GetNextEcu -> DBE203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001180	41.03817749	[580] -- CFGEcuList::GetNextEcu -> WSS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001181	41.03882599	[580] -- CFGEcuList::GetNextEcu -> WSS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001182	41.03921890	[580] -- CFGEcuList::GetNextEcu -> WSS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001183	41.04145432	[580] -- CFGEcuList::GetNextEcu -> UBF203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001184	41.04211807	[580] -- CFGEcuList::GetNextEcu -> UBF203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001185	41.04257202	[580] -- CFGEcuList::GetNextEcu -> UBF203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001186	41.04484940	[580] -- CFGEcuList::GetNextEcu -> OBF203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001187	41.04554749	[580] -- CFGEcuList::GetNextEcu -> OBF203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001188	41.04695129	[580] -- CFGEcuList::GetNextEcu -> OBF203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001189	41.04923248	[580] -- CFGEcuList::GetNextEcu -> SAMV203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001190	41.04988480	[580] -- CFGEcuList::GetNextEcu -> SAMV203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001191	41.05029678	[580] -- CFGEcuList::GetNextEcu -> SAMV203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001192	41.05272675	[580] -- CFGEcuList::GetNextEcu -> SAMH203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001193	41.05330658	[580] -- CFGEcuList::GetNextEcu -> SAMH203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001194	41.05398178	[580] -- CFGEcuList::GetNextEcu -> SAMH203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001195	41.05619049	[580] -- CFGEcuList::GetNextEcu -> AAG203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001196	41.05693054	[580] -- CFGEcuList::GetNextEcu -> AAG203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001197	41.05732346	[580] -- CFGEcuList::GetNextEcu -> AAG203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001198	41.05954742	[580] -- CFGEcuList::GetNextEcu -> AAG169:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001199	41.06030655	[580] -- CFGEcuList::GetNextEcu -> AAG169:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001200	41.06074142	[580] -- CFGEcuList::GetNextEcu -> AAG169:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001201	41.06306076	[580] -- CFGEcuList::GetNextEcu -> MSS203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001202	41.06391525	[580] -- CFGEcuList::GetNextEcu -> MSS203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001203	41.06433487	[580] -- CFGEcuList::GetNextEcu -> MSS203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001204	41.06702805	[580] -- CFGEcuList::GetNextEcu -> TSGVL203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001205	41.06766510	[580] -- CFGEcuList::GetNextEcu -> TSGVL203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001206	41.06812668	[580] -- CFGEcuList::GetNextEcu -> TSGVL203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001207	41.07047653	[580] -- CFGEcuList::GetNextEcu -> TSGVR203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001208	41.07112122	[580] -- CFGEcuList::GetNextEcu -> TSGVR203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001209	41.07157898	[580] -- CFGEcuList::GetNextEcu -> TSGVR203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001210	41.07383347	[580] -- CFGEcuList::GetNextEcu -> TSGHL203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001211	41.07443237	[580] -- CFGEcuList::GetNextEcu -> TSGHL203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001212	41.07487869	[580] -- CFGEcuList::GetNextEcu -> TSGHL203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001213	41.07710266	[580] -- CFGEcuList::GetNextEcu -> TSGHR203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001214	41.07774353	[580] -- CFGEcuList::GetNextEcu -> TSGHR203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001215	41.07815170	[580] -- CFGEcuList::GetNextEcu -> TSGHR203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001216	41.08043671	[580] -- CFGEcuList::GetNextEcu -> SSGB203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001217	41.08103180	[580] -- CFGEcuList::GetNextEcu -> SSGB203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001218	41.08145142	[580] -- CFGEcuList::GetNextEcu -> SSGB203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001219	41.08372116	[580] -- CFGEcuList::GetNextEcu -> SSGB211:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001220	41.08444595	[580] -- CFGEcuList::GetNextEcu -> SSGB211:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001221	41.08489609	[580] -- CFGEcuList::GetNextEcu -> SSGB211:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001222	41.08725739	[580] -- CFGEcuList::GetNextEcu -> SSGB164:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001223	41.08786392	[580] -- CFGEcuList::GetNextEcu -> SSGB164:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001224	41.08829880	[580] -- CFGEcuList::GetNextEcu -> SSGB164:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001225	41.09100342	[580] -- CFGEcuList::GetNextEcu -> SSGF203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001226	41.09166336	[580] -- CFGEcuList::GetNextEcu -> SSGF203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001227	41.09208679	[580] -- CFGEcuList::GetNextEcu -> SSGF203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001228	41.09432983	[580] -- CFGEcuList::GetNextEcu -> SSGF211:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001229	41.09503937	[580] -- CFGEcuList::GetNextEcu -> SSGF211:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001230	41.09542084	[580] -- CFGEcuList::GetNextEcu -> SSGF211:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001231	41.09767151	[580] -- CFGEcuList::GetNextEcu -> SSGF164:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001232	41.09833145	[580] -- CFGEcuList::GetNextEcu -> SSGF164:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001233	41.09872818	[580] -- CFGEcuList::GetNextEcu -> SSGF164:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001234	41.10105133	[580] -- CFGEcuList::GetNextEcu -> KI203M:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001235	41.10164642	[580] -- CFGEcuList::GetNextEcu -> KI203M:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001236	41.10209656	[580] -- CFGEcuList::GetNextEcu -> KI203M:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001237	41.10461426	[580] -- CFGEcuList::GetNextEcu -> PTS203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001238	41.10524750	[580] -- CFGEcuList::GetNextEcu -> PTS203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001239	41.10564041	[580] -- CFGEcuList::GetNextEcu -> PTS203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001240	41.10795975	[580] -- CFGEcuList::GetNextEcu -> MRM169:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001241	41.10863876	[580] -- CFGEcuList::GetNextEcu -> MRM169:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001242	41.10906982	[580] -- CFGEcuList::GetNextEcu -> MRM169:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001243	41.11134338	[580] -- CFGEcuList::GetNextEcu -> KLA203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001244	41.11197662	[580] -- CFGEcuList::GetNextEcu -> KLA203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001245	41.11234665	[580] -- CFGEcuList::GetNextEcu -> KLA203:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001246	41.11461639	[580] -- CFGEcuList::GetNextEcu -> STH211:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001247	41.11528397	[580] -- CFGEcuList::GetNextEcu -> STH211:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001248	41.11584473	[580] -- CFGEcuList::GetNextEcu -> STH211:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001249	41.11887360	[580] -- CFGEcuList::GetNextEcu -> ALWRM203_230:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001250	41.11954880	[580] -- CFGEcuList::GetNextEcu -> ALWRM203_230:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001251	41.11993790	[580] -- CFGEcuList::GetNextEcu -> ALWRM203_230:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001252	41.12216568	[580] -- CFGEcuList::GetNextEcu -> ALWRS203_230:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001253	41.12281418	[580] -- CFGEcuList::GetNextEcu -> ALWRS203_230:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001254	41.12326050	[580] -- CFGEcuList::GetNextEcu -> ALWRS203_230:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001255	41.12551880	[580] -- CFGEcuList::GetNextEcu -> XAGW:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001256	41.12611389	[580] -- CFGEcuList::GetNextEcu -> XAGW:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001257	41.12657928	[580] -- CFGEcuList::GetNextEcu -> XAGW:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001258	41.12697220	[580] -- CFGEcuList::GetNextEcu -> XAGW:  --> we have an active configuration >>PASSTHRUCONFIG<< and MCF contains a section >>PARALLEL_SHORTTEST_PASSTHRUCONFIG<<; use that one for ParaKT info retrieval !	
00001259	41.13474274	[580] -- CFGMemberList::GetNextMember -> XHU:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001260	41.13539505	[580] -- CFGMemberList::GetNextMember -> XHU:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001261	41.13772964	[580] -- CFGMemberList::GetNextMember -> XHUJP:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001262	41.13837051	[580] -- CFGMemberList::GetNextMember -> XHUJP:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001263	41.14076614	[580] -- CFGMemberList::GetNextMember -> XUHI:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001264	41.14151764	[580] -- CFGMemberList::GetNextMember -> XUHI:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001265	41.14369583	[580] -- CFGMemberList::GetNextMember -> XCDC:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001266	41.14428329	[580] -- CFGMemberList::GetNextMember -> XCDC:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001267	41.14644241	[580] -- CFGMemberList::GetNextMember -> XSBS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001268	41.14703369	[580] -- CFGMemberList::GetNextMember -> XSBS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001269	41.14917755	[580] -- CFGMemberList::GetNextMember -> XSNDHB:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001270	41.14976501	[580] -- CFGMemberList::GetNextMember -> XSNDHB:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001271	41.15194321	[580] -- CFGMemberList::GetNextMember -> XTV:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001272	41.15252304	[580] -- CFGMemberList::GetNextMember -> XTV:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001273	41.15477753	[580] -- CFGMemberList::GetNextMember -> XSDARS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001274	41.15538406	[580] -- CFGMemberList::GetNextMember -> XSDARS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001275	41.15926361	[580] -- CFGEcuList::GetNextEcu -> XHUAGW:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001276	41.15989304	[580] -- CFGEcuList::GetNextEcu -> XHUAGW:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001277	41.16028976	[580] -- CFGEcuList::GetNextEcu -> XHUAGW:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001278	41.16072464	[580] -- CFGEcuList::GetNextEcu -> XHUAGW:  --> we have an active configuration >>PASSTHRUCONFIG<< and MCF contains a section >>PARALLEL_SHORTTEST_PASSTHRUCONFIG<<; use that one for ParaKT info retrieval !	
00001279	41.16747665	[580] -- CFGMemberList::GetNextMember -> XHU:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001280	41.16808319	[580] -- CFGMemberList::GetNextMember -> XHU:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001281	41.17034149	[580] -- CFGMemberList::GetNextMember -> XHUJP:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001282	41.17096710	[580] -- CFGMemberList::GetNextMember -> XHUJP:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001283	41.17323303	[580] -- CFGMemberList::GetNextMember -> XUHI:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001284	41.17383194	[580] -- CFGMemberList::GetNextMember -> XUHI:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001285	41.17605209	[580] -- CFGMemberList::GetNextMember -> XCDC:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001286	41.17667770	[580] -- CFGMemberList::GetNextMember -> XCDC:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001287	41.17890167	[580] -- CFGMemberList::GetNextMember -> XSBS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001288	41.17950439	[580] -- CFGMemberList::GetNextMember -> XSBS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001289	41.18191147	[580] -- CFGMemberList::GetNextMember -> XSNDHB:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001290	41.18264771	[580] -- CFGMemberList::GetNextMember -> XSNDHB:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001291	41.18532944	[580] -- CFGMemberList::GetNextMember -> XTV:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001292	41.18593216	[580] -- CFGMemberList::GetNextMember -> XTV:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001293	41.18823242	[580] -- CFGMemberList::GetNextMember -> XSDARS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001294	41.18883133	[580] -- CFGMemberList::GetNextMember -> XSDARS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001295	41.19366455	[580] -- CFGEcuList::GetNextEcu -> XMCSNAV:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001296	41.19426727	[580] -- CFGEcuList::GetNextEcu -> XMCSNAV:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001297	41.19467163	[580] -- CFGEcuList::GetNextEcu -> XMCSNAV:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001298	41.19686890	[580] -- CFGEcuList::GetNextEcu -> XLCT:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001299	41.19767380	[580] -- CFGEcuList::GetNextEcu -> XLCT:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001300	41.19813156	[580] -- CFGEcuList::GetNextEcu -> XLCT:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001301	41.20051193	[580] -- CFGEcuList::GetNextEcu -> XLCTECL:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001302	41.20118713	[580] -- CFGEcuList::GetNextEcu -> XLCTECL:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001303	41.20156860	[580] -- CFGEcuList::GetNextEcu -> XLCTECL:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001304	41.20401764	[580] -- CFGEcuList::GetNextEcu -> XLCTSERV:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001305	41.20472336	[580] -- CFGEcuList::GetNextEcu -> XLCTSERV:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001306	41.20512772	[580] -- CFGEcuList::GetNextEcu -> XLCTSERV:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001307	41.20730209	[580] -- CFGEcuList::GetNextEcu -> XLCTTRK:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001308	41.20791626	[580] -- CFGEcuList::GetNextEcu -> XLCTTRK:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001309	41.20832062	[580] -- CFGEcuList::GetNextEcu -> XLCTTRK:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001310	41.21049118	[580] -- CFGEcuList::GetNextEcu -> XLCTREM:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001311	41.21108246	[580] -- CFGEcuList::GetNextEcu -> XLCTREM:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001312	41.21146774	[580] -- CFGEcuList::GetNextEcu -> XLCTREM:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001313	41.21368408	[580] -- CFGEcuList::GetNextEcu -> XTELJP:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001314	41.21450424	[580] -- CFGEcuList::GetNextEcu -> XTELJP:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001315	41.21498871	[580] -- CFGEcuList::GetNextEcu -> XTELJP:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001316	41.21751404	[580] -- CFGEcuList::GetNextEcu -> SD211:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001317	41.21854782	[580] -- CFGEcuList::GetNextEcu -> SD211:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001318	41.21896744	[580] -- CFGEcuList::GetNextEcu -> SD211:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001319	41.22156525	[580] -- CFGEcuList::GetNextEcu -> CAN_Monitoring:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001320	41.22224808	[580] -- CFGEcuList::GetNextEcu -> CAN_Monitoring:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001321	41.22262573	[580] -- CFGEcuList::GetNextEcu -> CAN_Monitoring:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001322	41.22578049	[580] -- CFGEcuList::GetNextEcu -> CAN_MonitoringHS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001323	41.22661209	[580] -- CFGEcuList::GetNextEcu -> CAN_MonitoringHS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001324	41.22700119	[580] -- CFGEcuList::GetNextEcu -> CAN_MonitoringHS:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001325	41.22941589	[580] -- CFGEcuList::GetNextEcu -> CAN_WakeUp:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001326	41.23024750	[580] -- CFGEcuList::GetNextEcu -> CAN_WakeUp:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001327	41.23062134	[580] -- CFGEcuList::GetNextEcu -> CAN_WakeUp:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001328	41.23309708	[580] -- CFGEcuList::GetNextEcu -> CAN_KeepAlive:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for CAESAR default firmware retrieval  !	
00001329	41.23371124	[580] -- CFGEcuList::GetNextEcu -> CAN_KeepAlive:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>COMMPARAMS_PASSTHRUCONFIG<<; use standard COMMPARAMS section for comm params retrieval  !	
00001330	41.23416519	[580] -- CFGEcuList::GetNextEcu -> CAN_KeepAlive:  --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>CONTACT CHECK_PASSTHRUCONFIG<<; use standard CONTACT CHECK section for contact check retrieval  !	
00001331	41.23623276	[580] -- CTableManager::LoadTable --> *********************************************************	
00001332	41.23626709	[580] -- CTableManager::LoadTable --> **** Nach Einlesen der Files; Beginn Scan Dependencies	
00001333	41.23633575	[580] -- CTableManager::LoadTable --> *********************************************************	
00001334	41.32851791	[580] -- CTableManager::LoadTable --> *********************************************************	
00001335	41.33957291	[580] -- CTableManager::LoadTable --> ***  Ende Scan Dependencies	
00001336	41.34594727	[580] -- CTableManager::LoadTable --> *********************************************************	
00001337	41.35388947	[580] -- CTableManager::LoadTable --> ======================= DETECTED SHORTTEST DEPENDENCIES ===================	
00001338	41.36195755	[580] -- CTableManager::LoadTable --> ======================== END OF SHORTTEST DEPENDENCIES ====================	
00001339	41.37009048	[580] -- CSessionManager::InitSession --> we have an active configuration >>PASSTHRUCONFIG<< but MCF contains no section >>GLOBAL_PASSTHRUCONFIG<<; use standard GLOBAL section for VIN/distance retrieval  !	
00001340	41.37763596	[580] -- CSessionManager::InitSession --> Retrieving ECU-specific VIN-services for group >>>ALLCDI3<<<:	
00001341	41.38591385	[580] -- CSessionManager::InitSession --> No specific VIN service for >>>CDI3_UP<<< found in section >>GLOBAL<<	
00001342	41.39291000	[580] -- CSessionManager::InitSession --> No specific VIN service for >>>CDI3_UP_K<<< found in section >>GLOBAL<<	
00001343	41.40081787	[580] -- CSessionManager::InitSession --> No specific VIN service for >>>CDI3_UP_CAN<<< found in section >>GLOBAL<<	
00001344	41.40968704	[580] -- CSessionManager::InitSession --> Retrieving ECU-specific Distance services for group >>>KIW2M<<<:	
00001345	41.41839218	[580] -- CSessionManager::InitSession --> No specific distance service for >>>KIW2M<<< found in section >>GLOBAL<<	
00001346	41.42625809	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> Resolve fuel level MCF entry >><< to single DAS names...	
00001347	41.43595123	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> resulting list of fuel level singles: >><< !	
00001348	41.44281387	[580] -- CSessionManager::LookForEcuSpecificServices --> check for FuelLevel specific services	
00001349	41.45217896	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> Resolve distance til service MCF entry >>KIW2M<< to single DAS names...	
00001350	41.45931244	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> resulting list of distance til service singles: >>KIW2M,<< !	
00001351	41.46954346	[580] -- CSessionManager::LookForEcuSpecificServices --> check for DistanceTilService specific services	
00001352	41.47634506	[580] -- CSessionManager::LookForEcuSpecificServices --> No specific DistanceTilService service for >>>KIW2M<<< found.	
00001353	41.48505020	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> Resolve time til service MCF entry >>KIW2M<< to single DAS names...	
00001354	41.49292755	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> resulting list of time til service singles: >>KIW2M,<< !	
00001355	41.50057983	[580] -- CSessionManager::LookForEcuSpecificServices --> check for TimeTilService specific services	
00001356	41.50670242	[580] -- CSessionManager::LookForEcuSpecificServices --> No specific TimeTilService service for >>>KIW2M<<< found.	
00001357	41.51357269	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> Resolve workshop code MCF entry >><< to single DAS names...	
00001358	41.52068329	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> resulting list of workshop code singles: >><< !	
00001359	41.52743149	[580] -- CSessionManager::LookForEcuSpecificServices --> check for WorkshopCode specific services	
00001360	41.53456116	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> Resolve service code MCF entry >><< to single DAS names...	
00001361	41.54159927	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> resulting list of service code singles: >><< !	
00001362	41.54945374	[580] -- CSessionManager::LookForEcuSpecificServices --> check for ServiceCode specific services	
00001363	41.56023788	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> Resolve service scope MCF entry >>KIW2M<< to single DAS names...	
00001364	41.56031036	[580] -- CSessionManager::ResolveMCFEntryToSingleDASNames --> resulting list of service scope singles: >>KIW2M,<< !	
00001365	41.56044769	[580] -- CSessionManager::LookForEcuSpecificServices --> check for ServiceScope specific services	
00001366	41.56081772	[580] -- CSessionManager::LookForEcuSpecificServices --> No specific ServiceScope service for >>>KIW2M<<< found.	
00001367	41.56112671	[580] -- CSessionManager::InitSession --> 6 protocols detected for family [KW2000PKW] = >>KW2000P<<>>KW2000PE<<>>KW2C2PE<<>>KW2C3PE<<>>KW2C3PE_HS<<>>UDS<<	
00001368	41.56149292	[580] -- CSessionManager::InitSession --> 0 protocols detected for family [KW2000NFZ] = 	
00001369	41.56156158	[580] -- CAL_SESSION (START) --> parallel shorttest is DISABLED !	
00001370	41.56193161	[580] -- CCALComm::IsCableOK --> Platform >>PART_J<< is neither Part D/T/V/W/Z, skip cable check !	
00001371	41.56205750	[580] ==== RMGetCableName ==> Kein Fehler	
00001372	41.56244659	[580] -- CreateMapFileIfNecessary --> look for existing map file for >>PKW.MAP<< in directory >>..\comdat\\PKW<<...	
00001373	41.56261826	[580] -- CreateMapFileIfNecessary --> file exists already, skip creation !	
00001374	41.56264877	[580] -- LoadMapFileAndMapDiogenesNames --> look for map file >>PKW.MAP<< in directory >>..\comdat\\PKW<<...	
00001375	41.56275940	[580] -- CreateMapFileIfNecessary --> file exists ! load it.	
00001376	41.57154083	[580] -- CreateMapFileIfNecessary --> ERROR: no hashing result for Diogenes name >>CAN_Monitoring<< !	
00001377	41.57158661	[580] -- CreateMapFileIfNecessary --> ERROR: no hashing result for Diogenes name >>CAN_MonitoringHS<< !	
00001378	41.57164001	[580] -- CreateMapFileIfNecessary --> ERROR: no hashing result for Diogenes name >>CAN_WakeUp<< !	
00001379	41.57169342	[580] -- CreateMapFileIfNecessary --> ERROR: no hashing result for Diogenes name >>CAN_KeepAlive<< !	
00001380	41.57436371	[580] -- CCALService::CreateCBFFileList --> 54 CBF files for 58 Diogenes names found.	
00001381	41.57495499	[580] -- CALAdaptCBFFileList --> 2 CBF-files loaded before adaption !	
00001382	41.57498932	[580] -- CALAdaptCBFFileList --> skipping search for CBF files which can be unloaded !	
00001383	41.57509613	[580] -- CALAdaptCBFFileList --> ...and now search for CBFs additionally required !	
00001384	41.66439438	[580] -- CALAdaptCBFFileList --> 54 CBF-files loaded in total after adaption !	
00001385	41.66453552	[580] -- CAL_SESSION --> check if right CAESAR firmware >>CAESARGO<< is active...	
00001386	41.78857422	[580] -- CCALComm::SelectCaesarFirmware --> trying to activate firmware >>CAESARGO<< for all known (1) cards...	
00001387	41.80448532	[580] -- CCALComm::SelectCaesarFirmware --> 1. card >>Macchina M2 UTD Passthru<< has active firmware >>TLSLAVE<<, trying to switch to >>CAESARGO<< !	
00001388	41.81689835	[580] -- CCALComm::SelectCaesarFirmware --> switch to ignition from plug to be on the safe side...	
00001389	41.82726288	[580] -- CCALComm::SetIgnitionMode --> switch to IgnitionFromPlug	
00001390	41.83372879	[580] ==== SISetupIgnitionMeasurement ==> Kein Fehler	
00001391	41.84141922	[580] ==== CMGetMoreCaesarResources ==> Fehler-Nr 8003 = ResourceManager: 08003: Reboot of slave card failed	
00001392	41.84766769	[580] -- CCALComm::SelectCaesarFirmware --> switch ignition mode back to state before firmware switch !	
00001393	41.85515976	[580] -- CCALComm::SetIgnitionMode --> switch to IgnitionReadFromSim	
00001394	41.94850922	[580] -- CAL_SESSION --> active CAESAR has been reused; set ignition mode explicitely to be on the safe side...	
00001395	41.94905853	[580] -- CCALComm::SetIgnitionMode --> switch to IgnitionReadFromSim	
00001396	41.94934082	[580] -- CAL_SESSION --> ...and do the same for the CAN baudrates !	
00001397	41.94973755	[580] -- CContext::ClearContext --> All context entries removed.	
00001398	41.95020294	[580] -- CContext::InitializeContext --> scanning CAL database for all possible vehicle ECUs...	
00001399	41.98983765	[580] -- CCALComm::SetMonitoringMode --> setting monitoring to DAS_CONTROLLED for ALL Ecus.	
00001400	41.99008179	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001401	42.07617569	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001402	42.25501251	[580] -- CCALCalOpenCommNew::PerformAPICall --> ------------ START -----------	
00001403	42.26146698	[580] -- CCALCalOpenCommNew::PerformAPICall --> No blocking DAS ecu on another channel detected; just continue.	
00001404	42.26921463	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00001405	42.27664948	[580] -- CCALCalOpenCommNew::OpenCommSTART --> starting OpenComm for ecu >>>HUGO<<< on channel >>1<<....	
00001406	42.28297424	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00001407	42.29000473	[580] -- CCALCalOpenCommNew::OpenCommSTART --> group name is >>><<<.	
00001408	42.29657745	[580] -- CCALCalOpenCommNew::OpenCommSTART --> requested ecu is a group member, but group is not marked yet ==> no implicit group reset required !	
00001409	42.30563354	[580] -- CCALCalOpenCommNew::OpenCommSTART --> CDB_GetMarkedECU delivers >><< for Ecu name >>HUGO<< !	
00001410	42.31203461	[580] -- CTableManager::ResetTable --> resetting entry >>HUGO<<; erase marks = 0	
00001411	42.32110214	[580] -- CCALCalOpenCommNew::OpenCommSTART --> CDB_ResetTable failed for ecu name >>HUGO<< !	
00001412	42.32698822	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00001413	42.33493423	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ------------ switch to FINISHED --------------	
00001414	42.34198761	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00001415	42.35107040	[580] -- CALOpenCommNew --> Communication was NOK; resetting >>>HUGO<<< to allow test for ECU change with new CBF and Protocol on next try.	
00001416	42.36076355	[580] -- CTableManager::ResetTable --> resetting entry >>HUGO<<; erase marks = 1	
00001417	43.18375015	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00001418	43.18378067	[580] -- CALGetCommState --> comm link is free	
00001419	43.18389893	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00001420	43.18413925	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00001421	43.18416977	[580] -- CALGetCommState --> Channel 1 is not in use	
00001422	43.18427277	[580] -- CALGetCommState --> Channel 2 is not in use	
00001423	43.18429947	[580] -- CALGetCommState --> returned bitfield is: 0801	
00001424	43.18443298	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00001425	43.18466568	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00001426	43.18469620	[580] -- CALGetCommState --> comm link is free	
00001427	43.18481445	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00001428	43.18500900	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00001429	43.18507767	[580] -- CALGetCommState --> Channel 1 is not in use	
00001430	43.18515015	[580] -- CALGetCommState --> Channel 2 is not in use	
00001431	43.18521881	[580] -- CALGetCommState --> returned bitfield is: 0801	
00001432	43.18529892	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00001433	43.61789322	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001434	43.67210388	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001435	44.96265030	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00001436	44.96269608	[580] -- CALGetCommState --> comm link is free	
00001437	44.96273804	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00001438	44.96289825	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00001439	44.96294785	[580] -- CALGetCommState --> Channel 1 is not in use	
00001440	44.96298981	[580] -- CALGetCommState --> Channel 2 is not in use	
00001441	44.96304321	[580] -- CALGetCommState --> returned bitfield is: 0801	
00001442	44.96310043	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00001443	44.96328735	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00001444	44.96331024	[580] -- CALGetCommState --> comm link is free	
00001445	44.96335983	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00001446	44.96350098	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00001447	44.96355820	[580] -- CALGetCommState --> Channel 1 is not in use	
00001448	44.96360397	[580] -- CALGetCommState --> Channel 2 is not in use	
00001449	44.96365738	[580] -- CALGetCommState --> returned bitfield is: 0801	
00001450	44.96371078	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00001451	45.58077621	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001452	45.65058517	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001453	46.30326080	[580] -- CCALCalGetSpecialInfo::PerformAPICall --> cache shall not be used; try to retrieve the value from ECU !	
00001454	46.30329514	[580] -- CCALCalGetSpecialInfo::StartRetrieval --> =======================================================================================================================	
00001455	46.30334473	[580] -- CCALCalGetSpecialInfo::StartRetrieval --> starting VIN retrieval; passed ECU name is >>><<<, passed service is >>><<< !	
00001456	46.30339432	[580] -- CCALCalGetSpecialInfo::StartRetrieval --> =======================================================================================================================	
00001457	46.30344772	[580] -- CCALCalGetSpecialInfo::GetTheECUName: use service  --> DT_FIN_Lesen	
00001458	46.30376434	[580] -- CCALCalGetSpecialInfo::StartRetrieval --> use free channel 1 for retrieval....	
00001459	46.30384827	[580] -- CCALCalOpenCommNew::PerformAPICall --> ------------ START -----------	
00001460	46.30394745	[580] -- CCALCalOpenCommNew::PerformAPICall --> No blocking DAS ecu on another channel detected; just continue.	
00001461	46.30397034	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00001462	46.30402756	[580] -- CCALCalOpenCommNew::OpenCommSTART --> starting OpenComm for ecu >>>ALLCDI3<<< on channel >>1<<....	
00001463	46.30407715	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00001464	46.30422211	[580] -- CCALCalOpenCommNew::OpenCommSTART --> group name is >>>ALLCDI3<<<.	
00001465	46.30425262	[580] -- CCALCalOpenCommNew::OpenCommSTART --> requested ecu is a group name ==> no implicit group reset required !	
00001466	46.30444336	[580] -- CCALCalOpenCommNew::OpenCommSTART --> CDB_GetMarkedECU delivers >><< for Ecu name >>ALLCDI3<< !	
00001467	46.30446625	[580] -- CTableManager::ResetTable --> resetting entry >>ALLCDI3<<; erase marks = 0	
00001468	46.30458069	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00001469	46.30461884	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ------------ no thread active / switch to RETRIEVE_NEXT_ECU --------------	
00001470	46.30472183	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00001471	46.30494308	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): ALLCDI3 / CDI3_UP / CR3_UP	
00001472	46.30496597	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>CR3_UP<< is a CAN ECU, skip check!	
00001473	46.30503082	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00001474	46.30508041	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00001475	46.30515289	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00001476	46.30519867	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00001477	46.30527496	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00001478	46.30531311	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00001479	46.30536270	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP<<< has 2 ecu interfaces; try to to find correct one !	
00001480	46.30541611	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00001481	46.30546188	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00001482	46.30551147	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00001483	46.30559158	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4329D2)	
00001484	46.33465195	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4329D2)	
00001485	46.36350632	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00001486	46.36355591	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001487	46.36360550	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001488	46.36364746	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00001489	46.36369324	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001490	46.36375427	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A433052)	
00001491	46.39216614	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A433052)	
00001492	46.42077255	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001493	46.42084885	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001494	46.42091370	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001495	46.42099380	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00001496	46.42105865	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00001497	46.42117310	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00001498	46.42127228	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00001499	46.42152023	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>CR3_UP<< has no mutual exclusions !	
00001500	46.42168808	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> CDI3_UP is not a bus member.	
00001501	46.42176056	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>CDI3_UP<< !	
00001502	46.42190552	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00001503	46.42205811	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00001504	46.42217255	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00001505	46.42235565	[580] -- CALInitEcu --> Ecu >>>CR3_UP<<< is a normal CAESAR Ecu !	
00001506	46.42238617	[580] -- CALInitEcu thread proc --> CBF to initialize: CR3_UP on channel 1/ pin 101, has own connection (no bus member)	
00001507	46.42244720	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00001508	46.42249680	[580] -- CALInitEcu thread proc --> Init service: FN_SG_Entriegeln	
00001509	46.42254257	[580] -- CALInitEcu thread proc --> Special handlings: FLASHID_CODE;FLASHID_DATA;NO_CODING_KEYWORDS_IN_ST;	
00001510	46.42258835	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00001511	46.42264557	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00001512	46.42269516	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>CR3_UP<< / >>CR3_UP<<, SubSystem service = >><<	
00001513	46.42274094	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>EZS209<<, bCommIsActive = 0	
00001514	46.42279053	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00001515	46.42289734	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>CR3_UP<<< on CAN_HS	
00001516	46.42290878	[580] ==== CMLockResources ==> Kein Fehler	
00001517	46.42297745	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00001518	46.42303848	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP<<< has 2 ecu interfaces; try to to find correct one !	
00001519	46.42309189	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00001520	46.42313766	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00001521	46.42318344	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00001522	46.42327499	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432D92)	
00001523	46.45147705	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432D92)	
00001524	46.47943497	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00001525	46.47946167	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001526	46.47955704	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001527	46.47958374	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00001528	46.47963333	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001529	46.47974396	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432B92)	
00001530	46.50754547	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432B92)	
00001531	46.53559875	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001532	46.53562546	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001533	46.53573227	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001534	46.53575516	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00001535	46.53588104	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00001536	46.53591156	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432B92)	
00001537	46.56523895	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00001538	46.56545639	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00001539	46.56550598	[580] ==== CAESAR global debugger ==> CMOpenChannel(CR3_UP) on CANHS-1 on Card 4660 #OC#	
00001540	46.56560898	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432C52)	
00001541	46.59473801	[580] ==== CAESAR global debugger ==> #CR498# ECU: CR3_UP, GPD: ((VERSION 03.77.02, 18.01.06, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.15))	
00001542	46.59487534	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00001543	46.59501266	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00001544	46.59701920	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00001545	46.59710693	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00001546	46.59719086	[580] -- CALInitEcu --> CC is not allowed	
00001547	46.59729385	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00001548	46.59741592	[580] ==== CAESAR global debugger ==> CMInitChannel(CR3_UP) #OCI#	
00001549	47.58320236	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001550	47.68829346	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001551	49.57905197	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001552	49.65556717	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001553	51.65627289	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001554	51.75220108	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001555	53.10548019	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00001556	53.10564804	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00001557	53.10577774	[580] ==== CAESAR global debugger ==> CMExitChannel(CR3_UP) #OCI#	
00001558	53.11695099	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00001559	53.11697769	[580] ==== CAESAR global debugger ==> CMCloseChannel(CR3_UP) #OC#	
00001560	53.12193298	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>CR3_UP<<	
00001561	53.12206650	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00001562	53.12208939	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP<<< has 2 ecu interfaces; try to to find correct one !	
00001563	53.12220001	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00001564	53.12221909	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00001565	53.12228012	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00001566	53.12233734	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432B92)	
00001567	53.15103531	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432B92)	
00001568	53.17940521	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00001569	53.17950821	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001570	53.17953873	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001571	53.17959976	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00001572	53.17969131	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001573	53.17974854	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432E52)	
00001574	53.20822144	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432E52)	
00001575	53.23738480	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001576	53.23743820	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001577	53.23759460	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001578	53.23762894	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00001579	53.23767853	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00001580	53.23773575	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432E52)	
00001581	53.27463531	[580] ==== DIOpenEcu ==> Kein Fehler	
00001582	53.28279495	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00001583	53.29179001	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00001584	53.29832077	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00001585	53.30642700	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00001586	53.31518555	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00001587	53.32314301	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00001588	53.32920456	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00001589	53.33657455	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00001590	53.34378052	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00001591	53.34993744	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): ALLCDI3 / CDI3_UP_K / CR3_UP*1	
00001592	53.35875702	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>CR3_UP*1<< is a CAN ECU, skip check!	
00001593	53.36564636	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00001594	53.37413406	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00001595	53.38019180	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00001596	53.38857269	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00001597	53.39554596	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00001598	53.40262604	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00001599	53.40985107	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP*1<<< has 2 ecu interfaces; try to to find correct one !	
00001600	53.41869736	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00001601	53.42558289	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00001602	53.43558884	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00001603	53.44236374	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4329D2)	
00001604	53.46466064	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4329D2)	
00001605	53.49338531	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00001606	53.49350357	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001607	53.49351501	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001608	53.49361420	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00001609	53.49364471	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001610	53.49375534	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432B92)	
00001611	53.52206421	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432B92)	
00001612	53.54999924	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001613	53.55004501	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001614	53.55009460	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001615	53.55015564	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00001616	53.55021667	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00001617	53.55034637	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00001618	53.55036926	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00001619	53.55043030	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>CR3_UP*1<< has no mutual exclusions !	
00001620	53.55049133	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> CDI3_UP_K is not a bus member.	
00001621	53.55053329	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>CDI3_UP_K<< !	
00001622	53.55072784	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00001623	53.55075836	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00001624	53.55082703	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00001625	53.55122375	[580] -- CALInitEcu --> Ecu >>>CR3_UP*1<<< is a normal CAESAR Ecu !	
00001626	53.55131912	[580] -- CALInitEcu thread proc --> CBF to initialize: CR3_UP on channel 1/ pin 101, has own connection (no bus member)	
00001627	53.55134583	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00001628	53.55142975	[580] -- CALInitEcu thread proc --> Init service: 	
00001629	53.55149078	[580] -- CALInitEcu thread proc --> Special handlings: FLASHID_CODE;FLASHID_DATA;	
00001630	53.55155182	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00001631	53.55164337	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00001632	53.55170822	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>CR3_UP*1<< / >>CR3_UP<<, SubSystem service = >><<	
00001633	53.55177689	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>CR3_UP<<, bCommIsActive = 0	
00001634	53.55184174	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00001635	53.55191803	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>CR3_UP<<< on CAN_HS	
00001636	53.55199814	[580] ==== CMLockResources ==> Kein Fehler	
00001637	53.55208588	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00001638	53.55215454	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP*1<<< has 2 ecu interfaces; try to to find correct one !	
00001639	53.55222702	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00001640	53.55229568	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00001641	53.55235672	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00001642	53.55243301	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432F92)	
00001643	53.59418106	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432F92)	
00001644	53.63323975	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00001645	53.63335419	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001646	53.63338470	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001647	53.63349915	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00001648	53.63352966	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001649	53.63364792	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432D52)	
00001650	53.66427231	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432D52)	
00001651	53.69245529	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001652	53.69248581	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001653	53.69256973	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001654	53.69259644	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00001655	53.69269943	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00001656	53.69271851	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432D52)	
00001657	53.72071838	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00001658	53.72076035	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00001659	53.72087860	[580] ==== CAESAR global debugger ==> CMOpenChannel(CR3_UP) on CANHS-1 on Card 4660 #OC#	
00001660	53.72089767	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432B92)	
00001661	53.74895477	[580] ==== CAESAR global debugger ==> #CR498# ECU: CR3_UP, GPD: ((VERSION 03.77.02, 18.01.06, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.15))	
00001662	53.74911499	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001663	53.74913788	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00001664	53.74931335	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00001665	53.75083542	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00001666	53.77402878	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00001667	53.78237915	[580] -- CALInitEcu --> CC is not allowed	
00001668	53.78902435	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00001669	53.79539108	[580] ==== CAESAR global debugger ==> CMInitChannel(CR3_UP) #OCI#	
00001670	53.85067368	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001671	55.62958145	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001672	55.69922638	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001673	57.58935547	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001674	57.65994263	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001675	59.66333389	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001676	59.75282669	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001677	60.37080383	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00001678	60.37088776	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00001679	60.37095642	[580] ==== CAESAR global debugger ==> CMExitChannel(CR3_UP) #OCI#	
00001680	60.38190842	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00001681	60.38191986	[580] ==== CAESAR global debugger ==> CMCloseChannel(CR3_UP) #OC#	
00001682	60.38772583	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>CR3_UP*1<<	
00001683	60.38774872	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00001684	60.38780975	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP*1<<< has 2 ecu interfaces; try to to find correct one !	
00001685	60.38786697	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00001686	60.38790512	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00001687	60.38794708	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00001688	60.38800812	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432E12)	
00001689	60.41578293	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432E12)	
00001690	60.44384003	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00001691	60.44387817	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001692	60.44396210	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001693	60.44397354	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00001694	60.44403076	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001695	60.44408417	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432E52)	
00001696	60.47193527	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432E52)	
00001697	60.49990463	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001698	60.49995422	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001699	60.50000763	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001700	60.50009537	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00001701	60.50012207	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00001702	60.50017166	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432E52)	
00001703	60.52783966	[580] ==== DIOpenEcu ==> Kein Fehler	
00001704	60.52793503	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00001705	60.52796173	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00001706	60.52805710	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00001707	60.52809525	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00001708	60.52817154	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00001709	60.52823639	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00001710	60.52851105	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00001711	60.52860641	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00001712	60.52871704	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00001713	60.52885818	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): ALLCDI3 / CDI3_UP_CAN / CR3_UP*2	
00001714	60.52897263	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>CR3_UP*2<< is a CAN ECU, skip check!	
00001715	60.52899170	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00001716	60.52904510	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00001717	60.52908707	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00001718	60.52915955	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00001719	60.52924728	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00001720	60.52930450	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00001721	60.52938080	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP*2<<< has 2 ecu interfaces; try to to find correct one !	
00001722	60.52945328	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00001723	60.52951813	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00001724	60.52956772	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00001725	60.52972031	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432B92)	
00001726	60.55749893	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432B92)	
00001727	60.58525467	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00001728	60.58529282	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001729	60.58539581	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001730	60.58541489	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00001731	60.58551025	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001732	60.58553696	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432CD2)	
00001733	60.61328506	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432CD2)	
00001734	60.64146423	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001735	60.64149857	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001736	60.64160156	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001737	60.64162064	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00001738	60.64173508	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00001739	60.64176178	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00001740	60.64180374	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00001741	60.64191818	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>CR3_UP*2<< has no mutual exclusions !	
00001742	60.64194107	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> CDI3_UP_CAN is not a bus member.	
00001743	60.64199829	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>CDI3_UP_CAN<< !	
00001744	60.64217758	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00001745	60.64220810	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00001746	60.64231491	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00001747	60.64281082	[580] -- CALInitEcu --> Ecu >>>CR3_UP*2<<< is a normal CAESAR Ecu !	
00001748	60.64290619	[580] -- CALInitEcu thread proc --> CBF to initialize: CR3_UP on channel 1/ pin 101, has own connection (no bus member)	
00001749	60.64299011	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00001750	60.64305878	[580] -- CALInitEcu thread proc --> Init service: 	
00001751	60.64313507	[580] -- CALInitEcu thread proc --> Special handlings: FLASHID_CODE;FLASHID_DATA;	
00001752	60.64331055	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00001753	60.64339828	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00001754	60.64346313	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>CR3_UP*2<< / >>CR3_UP<<, SubSystem service = >><<	
00001755	60.64353180	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>CR3_UP<<, bCommIsActive = 0	
00001756	60.64360428	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00001757	60.64367294	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>CR3_UP<<< on CAN_HS	
00001758	60.64378738	[580] ==== CMLockResources ==> Kein Fehler	
00001759	60.64390945	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00001760	60.64398193	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP*2<<< has 2 ecu interfaces; try to to find correct one !	
00001761	60.64405060	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00001762	60.64412308	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00001763	60.64419174	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00001764	60.64436340	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432E52)	
00001765	60.67835999	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432E52)	
00001766	60.71087265	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00001767	60.71089172	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001768	60.71103287	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001769	60.71105194	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00001770	60.71115494	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001771	60.71117401	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432D12)	
00001772	60.77511597	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432D12)	
00001773	60.78320694	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001774	60.79035568	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001775	60.79611588	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001776	60.80220795	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00001777	60.80964661	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00001778	60.81701660	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432D12)	
00001779	60.83980179	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00001780	60.83986664	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00001781	60.83993530	[580] ==== CAESAR global debugger ==> CMOpenChannel(CR3_UP) on CANHS-1 on Card 4660 #OC#	
00001782	60.83999252	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432AD2)	
00001783	60.86784744	[580] ==== CAESAR global debugger ==> #CR498# ECU: CR3_UP, GPD: ((VERSION 03.77.02, 18.01.06, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.15))	
00001784	60.86803055	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00001785	60.86816025	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00001786	60.87033081	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00001787	60.87042618	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00001788	60.87054062	[580] -- CALInitEcu --> CC is not allowed	
00001789	60.87059021	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00001790	60.87066269	[580] ==== CAESAR global debugger ==> CMInitChannel(CR3_UP) #OCI#	
00001791	61.63508606	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001792	61.70986938	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001793	63.59994125	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001794	63.66741943	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.9 V !	
00001795	65.55888367	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001796	65.62220001	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00001797	67.37780762	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00001798	67.37794495	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00001799	67.37796783	[580] ==== CAESAR global debugger ==> CMExitChannel(CR3_UP) #OCI#	
00001800	67.38896942	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00001801	67.38899231	[580] ==== CAESAR global debugger ==> CMCloseChannel(CR3_UP) #OC#	
00001802	67.38949585	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>CR3_UP*2<<	
00001803	67.38962555	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00001804	67.38973236	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP*2<<< has 2 ecu interfaces; try to to find correct one !	
00001805	67.38976288	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00001806	67.38980865	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00001807	67.38986206	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00001808	67.38992310	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432E12)	
00001809	67.41800690	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432E12)	
00001810	67.44560242	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00001811	67.44562531	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001812	67.44572449	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001813	67.44575500	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00001814	67.44585419	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001815	67.44586945	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432D92)	
00001816	67.47451782	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432D92)	
00001817	67.51291656	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001818	67.51316833	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001819	67.51332855	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001820	67.51343536	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00001821	67.51346588	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00001822	67.51354980	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A432D92)	
00001823	67.54159546	[580] ==== DIOpenEcu ==> Kein Fehler	
00001824	67.54170227	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00001825	67.54172516	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00001826	67.54183960	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00001827	67.54187012	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00001828	67.54193115	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00001829	67.54216003	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00001830	67.54259491	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00001831	67.54267883	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00001832	67.54279327	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00001833	67.54424286	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name):  /  / 	
00001834	67.54430389	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> no more ECUs in CAL database !	
00001835	67.54438019	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ...but we had a at least one real init try; so return the fault of that try.	
00001836	67.54445648	[580] -- CALOpenCommNew --> Communication was NOK; resetting >>>ALLCDI3<<< to allow test for ECU change with new CBF and Protocol on next try.	
00001837	67.54451752	[580] -- CTableManager::ResetTable --> resetting entry >>ALLCDI3<<; erase marks = 1	
00001838	67.62651825	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00001839	67.70813751	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.9 V !	
00001840	67.70844269	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00001841	67.70849609	[580] -- CALGetCommState --> comm link is free	
00001842	67.70854187	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00001843	67.70873260	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00001844	67.70878601	[580] -- CALGetCommState --> Channel 1 is not in use	
00001845	67.70884705	[580] -- CALGetCommState --> Channel 2 is not in use	
00001846	67.70889282	[580] -- CALGetCommState --> returned bitfield is: 0801	
00001847	67.70896912	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00001848	67.70912933	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00001849	67.70918274	[580] -- CALGetCommState --> comm link is free	
00001850	67.70922852	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00001851	67.70939636	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00001852	67.70944214	[580] -- CALGetCommState --> Channel 1 is not in use	
00001853	67.70948792	[580] -- CALGetCommState --> Channel 2 is not in use	
00001854	67.70957184	[580] -- CALGetCommState --> returned bitfield is: 0801	
00001855	67.70963287	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00001856	68.37007904	[580] -- CCALCalOpenCommNew::PerformAPICall --> ------------ START -----------	
00001857	68.37010193	[580] -- CCALCalOpenCommNew::PerformAPICall --> No blocking DAS ecu on another channel detected; just continue.	
00001858	68.37019348	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00001859	68.37023163	[580] -- CCALCalOpenCommNew::OpenCommSTART --> starting OpenComm for ecu >>>ALLEZS2<<< on channel >>1<<....	
00001860	68.37032318	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00001861	68.37045288	[580] -- CCALCalOpenCommNew::OpenCommSTART --> group name is >>>ALLEZS2<<<.	
00001862	68.37046051	[580] -- CCALCalOpenCommNew::OpenCommSTART --> requested ecu is a group name ==> no implicit group reset required !	
00001863	68.37055969	[580] -- CCALCalOpenCommNew::OpenCommSTART --> CDB_GetMarkedECU delivers >><< for Ecu name >>ALLEZS2<< !	
00001864	68.37062073	[580] -- CTableManager::ResetTable --> resetting entry >>ALLEZS2<<; erase marks = 0	
00001865	68.37071991	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00001866	68.37078094	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ------------ no thread active / switch to RETRIEVE_NEXT_ECU --------------	
00001867	68.37091064	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00001868	68.39242554	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): ALLEZS2 / EZS4 / EZS209	
00001869	68.39247131	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>EZS209<< is a CAN ECU, skip check!	
00001870	68.39251709	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00001871	68.39255524	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00001872	68.39260101	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00001873	68.39264679	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00001874	68.39268494	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00001875	68.39276886	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00001876	68.39280701	[580] -- CCalComm::GetEcuInterface --> >>>EZS209<<< has 3 ecu interfaces; try to to find correct one !	
00001877	68.39286041	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00001878	68.39291382	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00001879	68.39295197	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00001880	68.39301300	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432D52)	
00001881	68.39411926	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432D52)	
00001882	68.39511108	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00001883	68.39514923	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001884	68.39525604	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001885	68.39535522	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00001886	68.39540863	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001887	68.39546967	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432F92)	
00001888	68.39655304	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432F92)	
00001889	68.39755249	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>LSCAN_KW2C3PE_83_3<<, long name >>LSCAN (KW2C3PE, 83.3)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001890	68.39758301	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001891	68.39767456	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001892	68.39769745	[580] -- CCalComm::GetEcuInterface --> interface is >>LSCAN<<, baudrate is >>83_3<< !	
00001893	68.39778900	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001894	68.39781952	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432FD2)	
00001895	68.39884949	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432FD2)	
00001896	68.40251160	[580] -- CCalComm::GetEcuInterface --> 3. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001897	68.40337372	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001898	68.40360260	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001899	68.40361786	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00001900	68.40368652	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00001901	68.40377808	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00001902	68.40390015	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00001903	68.40391541	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>EZS209<< has no mutual exclusions !	
00001904	68.40397644	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> EZS4 is not a bus member.	
00001905	68.40402985	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>EZS4<< !	
00001906	68.40422821	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00001907	68.40427399	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00001908	68.40433502	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00001909	68.40460968	[580] -- CALInitEcu --> Ecu >>>EZS209<<< is a normal CAESAR Ecu !	
00001910	68.40471649	[580] -- CALInitEcu thread proc --> CBF to initialize: EZS209 on channel 1/ pin 101, has own connection (no bus member)	
00001911	68.40483093	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00001912	68.40484619	[580] -- CALInitEcu thread proc --> Init service: 	
00001913	68.40489960	[580] -- CALInitEcu thread proc --> Special handlings: 	
00001914	68.40493774	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00001915	68.40499115	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00001916	68.40505219	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>EZS209<< / >>EZS209<<, SubSystem service = >><<	
00001917	68.40509796	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>CR3_UP<<, bCommIsActive = 0	
00001918	68.40513611	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00001919	68.40518188	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>EZS209<<< on CAN_HS	
00001920	68.40524292	[580] ==== CMLockResources ==> Kein Fehler	
00001921	68.40529633	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00001922	68.40534973	[580] -- CCalComm::GetEcuInterface --> >>>EZS209<<< has 3 ecu interfaces; try to to find correct one !	
00001923	68.40540314	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00001924	68.40544128	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00001925	68.40548706	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00001926	68.40553284	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A433052)	
00001927	68.40644073	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A433052)	
00001928	68.40727997	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00001929	68.40731049	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001930	68.40740204	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001931	68.40743256	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00001932	68.40752411	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001933	68.40755463	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432D92)	
00001934	68.40847778	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432D92)	
00001935	68.40936279	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>LSCAN_KW2C3PE_83_3<<, long name >>LSCAN (KW2C3PE, 83.3)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001936	68.40938568	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001937	68.40944672	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001938	68.40949249	[580] -- CCalComm::GetEcuInterface --> interface is >>LSCAN<<, baudrate is >>83_3<< !	
00001939	68.40953064	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001940	68.40959930	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432A92)	
00001941	68.41050720	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432A92)	
00001942	68.41136169	[580] -- CCalComm::GetEcuInterface --> 3. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001943	68.41138458	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001944	68.41148376	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001945	68.41149902	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00001946	68.41159058	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00001947	68.41161346	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432A92)	
00001948	68.41253662	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00001949	68.41255951	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00001950	68.41266632	[580] ==== CAESAR global debugger ==> CMOpenChannel(EZS209) on CANHS-1 on Card 4660 #OC#	
00001951	68.41268158	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A4325D2)	
00001952	68.41358185	[580] ==== CAESAR global debugger ==> #CR498# ECU: EZS209, GPD: ((VERSION 03.77.02, 18.01.06, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.10))	
00001953	68.41368866	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00001954	68.41379547	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00001955	68.41575623	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00001956	68.41577911	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00001957	68.41588593	[580] -- CALInitEcu --> CC is not allowed	
00001958	68.41598511	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00001959	68.41601563	[580] ==== CAESAR global debugger ==> CMInitChannel(EZS209) #OCI#	
00001960	68.42088318	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02074:GPDTOKENPRESENT: GPD received the token	
00001961	74.89305115	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00001962	74.89318085	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00001963	74.89318848	[580] ==== CAESAR global debugger ==> CMExitChannel(EZS209) #OCI#	
00001964	74.89463043	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00001965	74.89466095	[580] ==== CAESAR global debugger ==> CMCloseChannel(EZS209) #OC#	
00001966	74.89512634	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>EZS209<<	
00001967	74.89518738	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00001968	74.89521790	[580] -- CCalComm::GetEcuInterface --> >>>EZS209<<< has 3 ecu interfaces; try to to find correct one !	
00001969	74.89528656	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00001970	74.89533234	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00001971	74.89537048	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00001972	74.89542389	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A431F12)	
00001973	74.89635468	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A431F12)	
00001974	74.89717865	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00001975	74.89720154	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001976	74.89729309	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001977	74.89731598	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00001978	74.89741516	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001979	74.89743042	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A431F92)	
00001980	74.89838409	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A431F92)	
00001981	74.89929199	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>LSCAN_KW2C3PE_83_3<<, long name >>LSCAN (KW2C3PE, 83.3)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001982	74.89931488	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001983	74.89937592	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001984	74.89943695	[580] -- CCalComm::GetEcuInterface --> interface is >>LSCAN<<, baudrate is >>83_3<< !	
00001985	74.89947510	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00001986	74.89958191	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432052)	
00001987	74.90045166	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432052)	
00001988	74.90138245	[580] -- CCalComm::GetEcuInterface --> 3. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00001989	74.90139771	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00001990	74.90148163	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00001991	74.90151215	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00001992	74.90160370	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00001993	74.90162659	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EZS209', 0x0A432052)	
00001994	74.90251923	[580] ==== DIOpenEcu ==> Kein Fehler	
00001995	74.90262604	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00001996	74.90269470	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00001997	74.90275574	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00001998	74.92046356	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00001999	74.92053223	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00002000	74.92063141	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00002001	74.92066193	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002002	74.92080688	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00002003	74.92082214	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002004	74.94407654	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name):  /  / 	
00002005	74.94411469	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> no more ECUs in CAL database !	
00002006	74.94421387	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ...but we had a at least one real init try; so return the fault of that try.	
00002007	74.94423676	[580] -- CALOpenCommNew --> Communication was NOK; resetting >>>ALLEZS2<<< to allow test for ECU change with new CBF and Protocol on next try.	
00002008	74.94434357	[580] -- CTableManager::ResetTable --> resetting entry >>ALLEZS2<<; erase marks = 1	
00002009	74.94438171	[580] -- CContext::TraceEntry --> context entry: Group >>ALLEZS2<<, Members >>|EZS4|<<, status is NOK	
00002010	74.97647095	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002011	75.06809998	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.9 V !	
00002012	76.62528229	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002013	76.67156219	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.9 V !	
00002014	77.14184570	[580] -- CContext::IsKeywordPresent --> single ECU name >>ZGW<< has been passed.	
00002015	77.14191437	[580] -- CContext::IsKeywordPresent --> passed keyword name was >>ECU_ZGW_NAME<<; looking for >>NAME@<< !	
00002016	77.14199829	[580] -- CContext::IsKeywordPresent --> scanning context for >>>ZGW<<<	
00002017	77.14207458	[580] -- CContext::IsKeywordPresent --> context entry for requested ECU found; requested is the marked one or group name !	
00002018	77.14212036	[580] -- CContext::IsKeywordPresent --> keyword detected in >>ZGW<< ECU; value is >>ZGW<<	
00002019	77.14216614	[580] -- CCALCalIsKeyWordPresent::PerformAPICall --> Context returned as value for ECU >>ZGW<< / keyword >>ECU_ZGW_NAME<<: >>ZGW<<	
00002020	77.14232635	[580] -- CContext::IsKeywordPresent --> single ECU name >>ZGW<< has been passed.	
00002021	77.14239502	[580] -- CContext::IsKeywordPresent --> passed keyword name was >>ECU_ZGW_NAME<<; looking for >>NAME@<< !	
00002022	77.14247894	[580] -- CContext::IsKeywordPresent --> scanning context for >>>ZGW<<<	
00002023	77.14254761	[580] -- CContext::IsKeywordPresent --> context entry for requested ECU found; requested is the marked one or group name !	
00002024	77.14260101	[580] -- CContext::IsKeywordPresent --> keyword detected in >>ZGW<< ECU; value is >>ZGW<<	
00002025	77.14264679	[580] -- CCALCalIsKeyWordPresent::PerformAPICall --> Context returned as value for ECU >>ZGW<< / keyword >>ECU_ZGW_NAME<<: >>ZGW<<	
00002026	78.50395966	[580] -- CCALCalGetSpecialInfo::PerformAPICall --> no overrides, no memorized value; try standard procedure !	
00002027	78.50403595	[580] -- CCALCalGetSpecialInfo::StartRetrieval --> =======================================================================================================================	
00002028	78.50412750	[580] -- CCALCalGetSpecialInfo::StartRetrieval --> starting VIN retrieval; passed ECU name is >>><<<, passed service is >>><<< !	
00002029	78.50420380	[580] -- CCALCalGetSpecialInfo::StartRetrieval --> =======================================================================================================================	
00002030	78.50442505	[580] -- CCALCalGetSpecialInfo::GetTheECUName: use service  --> DT_FIN_Lesen	
00002031	78.50453949	[580] -- CCALCalGetSpecialInfo::StartRetrieval --> use free channel 1 for retrieval....	
00002032	78.50463104	[580] -- CCALCalOpenCommNew::PerformAPICall --> ------------ START -----------	
00002033	78.50473022	[580] -- CCALCalOpenCommNew::PerformAPICall --> No blocking DAS ecu on another channel detected; just continue.	
00002034	78.50495148	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00002035	78.50506592	[580] -- CCALCalOpenCommNew::OpenCommSTART --> starting OpenComm for ecu >>>ALLCDI3<<< on channel >>1<<....	
00002036	78.50514984	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00002037	78.50528717	[580] -- CCALCalOpenCommNew::OpenCommSTART --> group name is >>>ALLCDI3<<<.	
00002038	78.50564575	[580] -- CCALCalOpenCommNew::OpenCommSTART --> requested ecu is a group name ==> no implicit group reset required !	
00002039	78.50580597	[580] -- CCALCalOpenCommNew::OpenCommSTART --> CDB_GetMarkedECU delivers >><< for Ecu name >>ALLCDI3<< !	
00002040	78.50585175	[580] -- CTableManager::ResetTable --> resetting entry >>ALLCDI3<<; erase marks = 0	
00002041	78.50617981	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00002042	78.50627899	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ------------ no thread active / switch to RETRIEVE_NEXT_ECU --------------	
00002043	78.50634766	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00002044	78.50665283	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): ALLCDI3 / CDI3_UP / CR3_UP	
00002045	78.50678253	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>CR3_UP<< is a CAN ECU, skip check!	
00002046	78.50681305	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00002047	78.50697327	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002048	78.50723267	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00002049	78.50737000	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002050	78.50747681	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00002051	78.50773621	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002052	78.50786591	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP<<< has 2 ecu interfaces; try to to find correct one !	
00002053	78.50799561	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002054	78.50810242	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002055	78.50826263	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002056	78.50841522	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431652)	
00002057	78.55633545	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431652)	
00002058	78.58789825	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002059	78.58792877	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002060	78.58808136	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002061	78.58817291	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002062	78.58818817	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002063	78.58828735	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4316D2)	
00002064	78.61996460	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4316D2)	
00002065	78.65544891	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002066	78.65547180	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002067	78.65557861	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002068	78.65560150	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002069	78.65570831	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002070	78.65573883	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00002071	78.65578461	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00002072	78.65589142	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>CR3_UP<< has no mutual exclusions !	
00002073	78.65591431	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> CDI3_UP is not a bus member.	
00002074	78.65596771	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>CDI3_UP<< !	
00002075	78.65613556	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002076	78.65616608	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00002077	78.65625763	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002078	78.65658569	[580] -- CALInitEcu --> Ecu >>>CR3_UP<<< is a normal CAESAR Ecu !	
00002079	78.65663147	[580] -- CALInitEcu thread proc --> CBF to initialize: CR3_UP on channel 1/ pin 101, has own connection (no bus member)	
00002080	78.65669250	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00002081	78.65674591	[580] -- CALInitEcu thread proc --> Init service: FN_SG_Entriegeln	
00002082	78.65680695	[580] -- CALInitEcu thread proc --> Special handlings: FLASHID_CODE;FLASHID_DATA;NO_CODING_KEYWORDS_IN_ST;	
00002083	78.65686798	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00002084	78.65699768	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002085	78.65702820	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>CR3_UP<< / >>CR3_UP<<, SubSystem service = >><<	
00002086	78.65710449	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>EZS209<<, bCommIsActive = 0	
00002087	78.65717316	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002088	78.65724182	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>CR3_UP<<< on CAN_HS	
00002089	78.65732574	[580] ==== CMLockResources ==> Kein Fehler	
00002090	78.65745544	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002091	78.65751648	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP<<< has 2 ecu interfaces; try to to find correct one !	
00002092	78.65759277	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002093	78.65764618	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002094	78.65772247	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002095	78.65779877	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431212)	
00002096	78.68669128	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431212)	
00002097	78.71586609	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002098	78.71588898	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002099	78.71599579	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002100	78.71601105	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002101	78.71607208	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002102	78.71613312	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431212)	
00002103	78.76882935	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431212)	
00002104	78.78140259	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002105	78.78153229	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002106	78.78159332	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002107	78.78165436	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002108	78.78170776	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002109	78.78177643	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431212)	
00002110	78.81089783	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00002111	78.81099701	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00002112	78.81111145	[580] ==== CAESAR global debugger ==> CMOpenChannel(CR3_UP) on CANHS-1 on Card 4660 #OC#	
00002113	78.81114960	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431712)	
00002114	78.84309387	[580] ==== CAESAR global debugger ==> #CR498# ECU: CR3_UP, GPD: ((VERSION 03.77.02, 18.01.06, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.15))	
00002115	78.84319305	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002116	78.84325409	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00002117	78.84341431	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00002118	78.84472656	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00002119	78.84477234	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00002120	78.84487915	[580] -- CALInitEcu --> CC is not allowed	
00002121	78.84489441	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00002122	78.84495544	[580] ==== CAESAR global debugger ==> CMInitChannel(CR3_UP) #OCI#	
00002123	78.92310333	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002124	80.59085083	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002125	80.69322968	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002126	82.58470917	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002127	82.67488098	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002128	84.56606293	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002129	84.65823364	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002130	85.43035889	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002131	85.43047333	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002132	85.43051147	[580] ==== CAESAR global debugger ==> CMExitChannel(CR3_UP) #OCI#	
00002133	85.44161224	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00002134	85.44167328	[580] ==== CAESAR global debugger ==> CMCloseChannel(CR3_UP) #OC#	
00002135	85.44393921	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>CR3_UP<<	
00002136	85.44396210	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002137	85.44406128	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP<<< has 2 ecu interfaces; try to to find correct one !	
00002138	85.44409180	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002139	85.44419098	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002140	85.44421387	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002141	85.44429016	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431312)	
00002142	85.47246552	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431312)	
00002143	85.50115204	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002144	85.50121307	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002145	85.50128174	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002146	85.50132751	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002147	85.50138092	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002148	85.50144196	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4310D2)	
00002149	85.52968597	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4310D2)	
00002150	85.55786133	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002151	85.55788422	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002152	85.55800629	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002153	85.55803680	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002154	85.55813599	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002155	85.55815887	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4310D2)	
00002156	85.58602905	[580] ==== DIOpenEcu ==> Kein Fehler	
00002157	85.58610535	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00002158	85.58621979	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00002159	85.58623505	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00002160	85.58636475	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00002161	85.58637238	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00002162	85.58644104	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00002163	85.58663177	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002164	85.58686829	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00002165	85.58688354	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002166	85.58706665	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): ALLCDI3 / CDI3_UP_K / CR3_UP*1	
00002167	85.58714294	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>CR3_UP*1<< is a CAN ECU, skip check!	
00002168	85.58719635	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00002169	85.58724213	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002170	85.58731842	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00002171	85.58735657	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002172	85.58739471	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00002173	85.58753967	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002174	85.58759308	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP*1<<< has 2 ecu interfaces; try to to find correct one !	
00002175	85.58763885	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002176	85.58768463	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002177	85.58774567	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002178	85.58779907	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431592)	
00002179	85.61954498	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431592)	
00002180	85.65204620	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002181	85.65207672	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002182	85.65225220	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002183	85.65233612	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002184	85.65249634	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002185	85.65259552	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431892)	
00002186	85.68105316	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431892)	
00002187	85.70922089	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002188	85.70932770	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002189	85.70936584	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002190	85.70942688	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002191	85.70948792	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002192	85.70960999	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00002193	85.70970917	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00002194	85.70972443	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>CR3_UP*1<< has no mutual exclusions !	
00002195	85.70977783	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> CDI3_UP_K is not a bus member.	
00002196	85.70983887	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>CDI3_UP_K<< !	
00002197	85.70997620	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002198	85.71002197	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00002199	85.71007538	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002200	85.71041107	[580] -- CALInitEcu --> Ecu >>>CR3_UP*1<<< is a normal CAESAR Ecu !	
00002201	85.71047974	[580] -- CALInitEcu thread proc --> CBF to initialize: CR3_UP on channel 1/ pin 101, has own connection (no bus member)	
00002202	85.71053314	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00002203	85.71058655	[580] -- CALInitEcu thread proc --> Init service: 	
00002204	85.71063232	[580] -- CALInitEcu thread proc --> Special handlings: FLASHID_CODE;FLASHID_DATA;	
00002205	85.71067810	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00002206	85.71073914	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002207	85.71078491	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>CR3_UP*1<< / >>CR3_UP<<, SubSystem service = >><<	
00002208	85.71083832	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>CR3_UP<<, bCommIsActive = 0	
00002209	85.71087646	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002210	85.71092987	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>CR3_UP<<< on CAN_HS	
00002211	85.71099854	[580] ==== CMLockResources ==> Kein Fehler	
00002212	85.71105957	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002213	85.71110535	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP*1<<< has 2 ecu interfaces; try to to find correct one !	
00002214	85.71115875	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002215	85.71120453	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002216	85.71125031	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002217	85.71130371	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431392)	
00002218	85.73945618	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431392)	
00002219	85.79184723	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002220	85.80033112	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002221	85.80609131	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002222	85.81192780	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002223	85.81815338	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002224	85.82397461	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431892)	
00002225	85.84937286	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431892)	
00002226	85.87746429	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002227	85.87773895	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002228	85.87785339	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002229	85.87794495	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002230	85.87798309	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002231	85.87805176	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431892)	
00002232	85.90631104	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00002233	85.90649414	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00002234	85.90660095	[580] ==== CAESAR global debugger ==> CMOpenChannel(CR3_UP) on CANHS-1 on Card 4660 #OC#	
00002235	85.90663147	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431452)	
00002236	85.94899750	[580] ==== CAESAR global debugger ==> #CR498# ECU: CR3_UP, GPD: ((VERSION 03.77.02, 18.01.06, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.15))	
00002237	85.94924164	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00002238	85.94939423	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00002239	85.95116425	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00002240	85.95124054	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00002241	85.95128632	[580] -- CALInitEcu --> CC is not allowed	
00002242	85.95136261	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00002243	85.95141602	[580] ==== CAESAR global debugger ==> CMInitChannel(CR3_UP) #OCI#	
00002244	86.60656738	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002245	86.69794464	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002246	88.58808899	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002247	88.66834259	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002248	90.55864716	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002249	90.65048981	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002250	92.76165009	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002251	92.77708435	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002252	92.79641724	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002253	92.81101990	[580] ==== CAESAR global debugger ==> CMExitChannel(CR3_UP) #OCI#	
00002254	92.81950378	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00002255	92.83544922	[580] ==== CAESAR global debugger ==> CMCloseChannel(CR3_UP) #OC#	
00002256	93.25765991	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002257	93.26232147	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>CR3_UP*1<<	
00002258	93.27091980	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002259	93.27868652	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP*1<<< has 2 ecu interfaces; try to to find correct one !	
00002260	93.29061890	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002261	93.30639648	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002262	93.32044983	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002263	93.33335114	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431312)	
00002264	93.76255035	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431312)	
00002265	93.76905060	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002266	93.77687073	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002267	93.78697205	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002268	93.79499817	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002269	93.80592346	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002270	93.81871033	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4312D2)	
00002271	94.26023102	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4312D2)	
00002272	94.26560974	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002273	94.27390289	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002274	94.28171539	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002275	94.29036713	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002276	94.29872894	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002277	94.30950928	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4312D2)	
00002278	94.76094818	[580] ==== DIOpenEcu ==> Kein Fehler	
00002279	94.77841187	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00002280	94.81501770	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002281	94.82981110	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00002282	94.84038544	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00002283	95.25785065	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002284	95.27004242	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00002285	95.29119873	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00002286	95.31765747	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00002287	95.33319855	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002288	95.34526825	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00002289	95.35375214	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002290	95.36534119	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): ALLCDI3 / CDI3_UP_CAN / CR3_UP*2	
00002291	95.37697601	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>CR3_UP*2<< is a CAN ECU, skip check!	
00002292	95.38595581	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00002293	95.39469147	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002294	95.40326691	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00002295	95.41094208	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002296	95.42741394	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00002297	95.43668365	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002298	95.44519806	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP*2<<< has 2 ecu interfaces; try to to find correct one !	
00002299	95.45396423	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002300	95.46211243	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002301	95.47574615	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002302	95.48553467	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4310D2)	
00002303	95.75858307	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4310D2)	
00002304	95.76532745	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002305	95.77696228	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002306	95.79051208	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002307	95.79937744	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002308	95.81021118	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002309	95.81829834	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4314D2)	
00002310	96.25971222	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4314D2)	
00002311	96.26966858	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002312	96.28653717	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002313	96.30480194	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002314	96.32784271	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002315	96.34342957	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002316	96.36248016	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00002317	96.37954712	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00002318	96.39701843	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>CR3_UP*2<< has no mutual exclusions !	
00002319	96.40830994	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> CDI3_UP_CAN is not a bus member.	
00002320	96.41921234	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>CDI3_UP_CAN<< !	
00002321	96.43001556	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002322	96.43867493	[580] -- CALInitEcu --> Ecu >>>CR3_UP*2<<< is a normal CAESAR Ecu !	
00002323	96.44981384	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00002324	96.45987701	[580] -- CALInitEcu thread proc --> CBF to initialize: CR3_UP on channel 1/ pin 101, has own connection (no bus member)	
00002325	96.46907043	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002326	96.48088074	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00002327	96.49216461	[580] -- CALInitEcu thread proc --> Init service: 	
00002328	96.50905609	[580] -- CALInitEcu thread proc --> Special handlings: FLASHID_CODE;FLASHID_DATA;	
00002329	96.51827240	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00002330	96.53068542	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002331	96.54207611	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>CR3_UP*2<< / >>CR3_UP<<, SubSystem service = >><<	
00002332	96.55138397	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>CR3_UP<<, bCommIsActive = 0	
00002333	96.56338501	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002334	96.75837708	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>CR3_UP<<< on CAN_HS	
00002335	96.76339722	[580] ==== CMLockResources ==> Kein Fehler	
00002336	96.77288818	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002337	96.78130341	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP*2<<< has 2 ecu interfaces; try to to find correct one !	
00002338	96.79147339	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002339	96.80052185	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002340	96.80760193	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002341	96.81636810	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4310D2)	
00002342	97.25778198	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A4310D2)	
00002343	97.26477814	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002344	97.27843475	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002345	97.29125977	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002346	97.30307770	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002347	97.31140900	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002348	97.31919861	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431212)	
00002349	97.75952148	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431212)	
00002350	97.77141571	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002351	97.78228760	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002352	97.79338837	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002353	97.79968262	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002354	97.80786133	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002355	97.81395721	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431212)	
00002356	98.26299286	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00002357	98.27156830	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00002358	98.28752899	[580] ==== CAESAR global debugger ==> CMOpenChannel(CR3_UP) on CANHS-1 on Card 4660 #OC#	
00002359	98.29898071	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431112)	
00002360	98.76107788	[580] ==== CAESAR global debugger ==> #CR498# ECU: CR3_UP, GPD: ((VERSION 03.77.02, 18.01.06, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.15))	
00002361	98.76430511	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002362	98.77235413	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00002363	98.77960968	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00002364	98.79139709	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00002365	98.79721832	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00002366	98.80480957	[580] -- CALInitEcu --> CC is not allowed	
00002367	98.81182861	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00002368	98.82256317	[580] ==== CAESAR global debugger ==> CMInitChannel(CR3_UP) #OCI#	
00002369	99.25923920	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002370	99.26486969	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002371	99.75727844	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002372	100.63719177	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002373	100.72106934	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002374	102.61150360	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002375	102.68775940	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002376	104.58014679	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002377	104.64404297	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.9 V !	
00002378	105.38101196	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002379	105.38111115	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002380	105.38114929	[580] ==== CAESAR global debugger ==> CMExitChannel(CR3_UP) #OCI#	
00002381	105.39179230	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00002382	105.39183044	[580] ==== CAESAR global debugger ==> CMCloseChannel(CR3_UP) #OC#	
00002383	105.39635468	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>CR3_UP*2<<	
00002384	105.39640045	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002385	105.39645386	[580] -- CCalComm::GetEcuInterface --> >>>CR3_UP*2<<< has 2 ecu interfaces; try to to find correct one !	
00002386	105.39649963	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002387	105.39654541	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002388	105.39659882	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002389	105.39664459	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431352)	
00002390	105.42436218	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431352)	
00002391	105.45186615	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002392	105.45189667	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002393	105.45195007	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002394	105.45200348	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002395	105.45204163	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002396	105.45210266	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431812)	
00002397	105.47994995	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431812)	
00002398	105.50949860	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002399	105.50955200	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002400	105.50959778	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002401	105.50981140	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002402	105.50988007	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002403	105.50995636	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('CR3_UP', 0x0A431812)	
00002404	105.53773499	[580] ==== DIOpenEcu ==> Kein Fehler	
00002405	105.53783417	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00002406	105.53786469	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00002407	105.53797913	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00002408	105.53801727	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00002409	105.53811646	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00002410	105.53813934	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00002411	105.53830719	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002412	105.53839111	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00002413	105.53846741	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002414	105.54013062	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name):  /  / 	
00002415	105.54015350	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> no more ECUs in CAL database !	
00002416	105.54024506	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ...but we had a at least one real init try; so return the fault of that try.	
00002417	105.54026794	[580] -- CALOpenCommNew --> Communication was NOK; resetting >>>ALLCDI3<<< to allow test for ECU change with new CBF and Protocol on next try.	
00002418	105.54036713	[580] -- CTableManager::ResetTable --> resetting entry >>ALLCDI3<<; erase marks = 1	
00002419	106.66335297	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002420	106.73357391	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002421	108.63303375	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002422	108.69471741	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002423	108.88847351	[580] [CRYPT] CSDDecode entry	
00002424	108.88857269	[580] Create CSDCrypt	
00002425	108.88874054	[580] [CRYPT] vor decode call	
00002426	108.88919067	[580] [CRYPT] nach decode call	
00002427	108.88953400	[580] [CRYPT] CSDDecode exit	
00002428	108.93878937	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00002429	108.93882751	[580] -- CALGetCommState --> comm link is free	
00002430	108.93901062	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00002431	108.93914795	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00002432	108.93918610	[580] -- CALGetCommState --> Channel 1 is not in use	
00002433	108.93923950	[580] -- CALGetCommState --> Channel 2 is not in use	
00002434	108.93927765	[580] -- CALGetCommState --> returned bitfield is: 0801	
00002435	108.93935394	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00002436	108.93950653	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00002437	108.93955994	[580] -- CALGetCommState --> comm link is free	
00002438	108.93961334	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00002439	108.93976593	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00002440	108.93981171	[580] -- CALGetCommState --> Channel 1 is not in use	
00002441	108.93984985	[580] -- CALGetCommState --> Channel 2 is not in use	
00002442	108.93988800	[580] -- CALGetCommState --> returned bitfield is: 0801	
00002443	108.93994141	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00002444	110.58791351	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002445	110.65350342	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.9 V !	
00002446	112.55908966	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002447	112.60539246	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002448	114.00035858	[580] -- CCALService::CheckCommReInit --> ERROR: >>>GETRIEBE<<< not kown on any channel !	
00002449	114.02647400	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00002450	114.02651215	[580] -- CALGetCommState --> comm link is free	
00002451	114.02659607	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00002452	114.02678680	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00002453	114.02690887	[580] -- CALGetCommState --> Channel 1 is not in use	
00002454	114.02694702	[580] -- CALGetCommState --> Channel 2 is not in use	
00002455	114.02702332	[580] -- CALGetCommState --> returned bitfield is: 0801	
00002456	114.02706909	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00002457	114.02731323	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00002458	114.02734375	[580] -- CALGetCommState --> comm link is free	
00002459	114.02744293	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00002460	114.02759552	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00002461	114.02764893	[580] -- CALGetCommState --> Channel 1 is not in use	
00002462	114.02768707	[580] -- CALGetCommState --> Channel 2 is not in use	
00002463	114.02774048	[580] -- CALGetCommState --> returned bitfield is: 0801	
00002464	114.02780151	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00002465	114.55963898	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002466	114.62077332	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.9 V !	
00002467	114.76652527	[580] -- CCALCalOpenCommNew::PerformAPICall --> ------------ START -----------	
00002468	114.77492523	[580] -- CCALCalOpenCommNew::PerformAPICall --> No blocking DAS ecu on another channel detected; just continue.	
00002469	114.78179932	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00002470	114.78852844	[580] -- CCALCalOpenCommNew::OpenCommSTART --> starting OpenComm for ecu >>>GETRIEBE<<< on channel >>1<<....	
00002471	114.79718781	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00002472	114.80378723	[580] -- CCALCalOpenCommNew::OpenCommSTART --> group name is >>>GETRIEBE<<<.	
00002473	114.81351471	[580] -- CCALCalOpenCommNew::OpenCommSTART --> requested ecu is a group name ==> no implicit group reset required !	
00002474	114.82123566	[580] -- CCALCalOpenCommNew::OpenCommSTART --> CDB_GetMarkedECU delivers >><< for Ecu name >>GETRIEBE<< !	
00002475	114.82969666	[580] -- CTableManager::ResetTable --> resetting entry >>GETRIEBE<<; erase marks = 0	
00002476	114.83746338	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00002477	114.84690857	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ------------ no thread active / switch to RETRIEVE_NEXT_ECU --------------	
00002478	114.85820007	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00002479	114.86886597	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): GETRIEBE / EGS1 / EGS52	
00002480	114.86894226	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>EGS52<< is a CAN ECU, skip check!	
00002481	114.86909485	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00002482	114.86914825	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002483	114.86918640	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00002484	114.86923218	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002485	114.86930084	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00002486	114.86934662	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002487	114.86940002	[580] -- CCalComm::GetEcuInterface --> >>>EGS52<<< has 2 ecu interfaces; try to to find correct one !	
00002488	114.86943817	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002489	114.86949158	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002490	114.86952972	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002491	114.86962128	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431712)	
00002492	114.87081909	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431712)	
00002493	114.87264252	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002494	114.87272644	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002495	114.87279510	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002496	114.87287140	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002497	114.87292480	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002498	114.87300873	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4312D2)	
00002499	114.87427521	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4312D2)	
00002500	114.87531281	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002501	114.87538147	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002502	114.87544250	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002503	114.87551880	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002504	114.87558746	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002505	114.87568665	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00002506	114.87574768	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00002507	114.87581635	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>EGS52<< has no mutual exclusions !	
00002508	114.87594604	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> EGS1 is not a bus member.	
00002509	114.87608337	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>EGS1<< !	
00002510	114.87621307	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002511	114.87625885	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00002512	114.87631226	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002513	114.87667084	[580] -- CALInitEcu --> Ecu >>>EGS52<<< is a normal CAESAR Ecu !	
00002514	114.87673950	[580] -- CALInitEcu thread proc --> CBF to initialize: EGS52 on channel 1/ pin 101, has own connection (no bus member)	
00002515	114.87677765	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00002516	114.87681580	[580] -- CALInitEcu thread proc --> Init service: 	
00002517	114.87685394	[580] -- CALInitEcu thread proc --> Special handlings: FLASHID_CODE;	
00002518	114.87689972	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00002519	114.87695313	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002520	114.87699127	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>EGS52<< / >>EGS52<<, SubSystem service = >><<	
00002521	114.87708282	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>CR3_UP<<, bCommIsActive = 0	
00002522	114.87723541	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002523	114.87728882	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>EGS52<<< on CAN_HS	
00002524	114.87734985	[580] ==== CMLockResources ==> Kein Fehler	
00002525	114.87740326	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002526	114.87744904	[580] -- CCalComm::GetEcuInterface --> >>>EGS52<<< has 2 ecu interfaces; try to to find correct one !	
00002527	114.87750244	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002528	114.87755585	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002529	114.87759399	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002530	114.87764740	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4311D2)	
00002531	114.87855530	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4311D2)	
00002532	114.87948608	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002533	114.87951660	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002534	114.87961578	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002535	114.87963104	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002536	114.87973022	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002537	114.87974548	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431352)	
00002538	114.88080597	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431352)	
00002539	114.88178253	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002540	114.88180542	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002541	114.88189697	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002542	114.88191986	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002543	114.88201141	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002544	114.88203430	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431352)	
00002545	114.88335419	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00002546	114.88344574	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00002547	114.88346863	[580] ==== CAESAR global debugger ==> CMOpenChannel(EGS52) on CANHS-1 on Card 4660 #OC#	
00002548	114.88354492	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4316D2)	
00002549	114.88484192	[580] ==== CAESAR global debugger ==> #CR498# ECU: EGS52, GPD: ((VERSION 03.77.02, 18.01.06, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.15))	
00002550	114.88496399	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00002551	114.88514709	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00002552	114.88662720	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00002553	114.88668060	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00002554	114.88671875	[580] -- CALInitEcu --> CC is not allowed	
00002555	114.88679504	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00002556	114.88684845	[580] ==== CAESAR global debugger ==> CMInitChannel(EGS52) #OCI#	
00002557	121.40064240	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002558	121.40088654	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002559	121.40104675	[580] ==== CAESAR global debugger ==> CMExitChannel(EGS52) #OCI#	
00002560	121.40341949	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00002561	121.40355682	[580] ==== CAESAR global debugger ==> CMCloseChannel(EGS52) #OC#	
00002562	121.40436554	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>EGS52<<	
00002563	121.40449524	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002564	121.40464783	[580] -- CCalComm::GetEcuInterface --> >>>EGS52<<< has 2 ecu interfaces; try to to find correct one !	
00002565	121.40470886	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002566	121.40483856	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002567	121.40493774	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002568	121.40512085	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4310D2)	
00002569	121.40814209	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4310D2)	
00002570	121.41152954	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002571	121.41172791	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002572	121.41191864	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002573	121.41209412	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002574	121.41222382	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002575	121.41244507	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4311D2)	
00002576	121.41613007	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4311D2)	
00002577	121.41899872	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002578	121.41979218	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002579	121.42019653	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002580	121.42034149	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002581	121.42051697	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002582	121.42068481	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4311D2)	
00002583	121.42321014	[580] ==== DIOpenEcu ==> Kein Fehler	
00002584	121.42343903	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00002585	121.42352295	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00002586	121.42364502	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00002587	121.42977142	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00002588	121.42986298	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00002589	121.42997742	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00002590	121.43023682	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002591	121.43029785	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00002592	121.43041229	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002593	121.45217133	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): GETRIEBE / EGS3 / EGS53	
00002594	121.45223999	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>EGS53<< is a CAN ECU, skip check!	
00002595	121.45249176	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00002596	121.45252991	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002597	121.45272064	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00002598	121.45300293	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002599	121.45315552	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00002600	121.45326996	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002601	121.45364380	[580] -- CCalComm::GetEcuInterface --> >>>EGS53<<< has 2 ecu interfaces; try to to find correct one !	
00002602	121.45381165	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002603	121.45409393	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002604	121.45417023	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002605	121.45436096	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS53', 0x0A431592)	
00002606	121.46002197	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS53', 0x0A431592)	
00002607	121.46535492	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002608	121.46540833	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002609	121.46607208	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002610	121.46641541	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002611	121.46656036	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002612	121.46704865	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00002613	121.46713257	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00002614	121.46726227	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>EGS53<< has no mutual exclusions !	
00002615	121.46762085	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> EGS3 is not a bus member.	
00002616	121.46768951	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>EGS3<< !	
00002617	121.46810913	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002618	121.46820068	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00002619	121.46832275	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002620	121.46884155	[580] -- CALInitEcu --> Ecu >>>EGS53<<< is a normal CAESAR Ecu !	
00002621	121.46897888	[580] -- CALInitEcu thread proc --> CBF to initialize: EGS53 on channel 1/ pin 101, has own connection (no bus member)	
00002622	121.46909332	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00002623	121.46918488	[580] -- CALInitEcu thread proc --> Init service: 	
00002624	121.46932220	[580] -- CALInitEcu thread proc --> Special handlings: FLASHID_CODE;NO_CODING_KEYWORDS_IN_ST;	
00002625	121.46942902	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00002626	121.46956635	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002627	121.46967316	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>EGS53<< / >>EGS53<<, SubSystem service = >><<	
00002628	121.46978760	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>EGS52<<, bCommIsActive = 0	
00002629	121.46996307	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002630	121.47009277	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>EGS53<<< on CAN_HS	
00002631	121.47022247	[580] ==== CMLockResources ==> Kein Fehler	
00002632	121.47035980	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002633	121.47046661	[580] -- CCalComm::GetEcuInterface --> >>>EGS53<<< has 2 ecu interfaces; try to to find correct one !	
00002634	121.47058105	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002635	121.47069550	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002636	121.47079468	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002637	121.47096252	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS53', 0x0A4310D2)	
00002638	121.47492218	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS53', 0x0A4310D2)	
00002639	121.47876740	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002640	121.47888947	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002641	121.47898865	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002642	121.47910309	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002643	121.47920990	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002644	121.47933197	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS53', 0x0A4310D2)	
00002645	121.48317719	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00002646	121.48327637	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00002647	121.48344421	[580] ==== CAESAR global debugger ==> CMOpenChannel(EGS53) on CANHS-1 on Card 4660 #OC#	
00002648	121.48358154	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS53', 0x0A431612)	
00002649	121.48739624	[580] ==== CAESAR global debugger ==> #CR498# ECU: EGS53, GPD: ((VERSION 03.77.02, 18.01.06, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.15))	
00002650	121.48765564	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00002651	121.48789978	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00002652	121.49140167	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00002653	121.49152374	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00002654	121.49167633	[580] -- CALInitEcu --> CC is not allowed	
00002655	121.49183655	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00002656	121.49199677	[580] ==== CAESAR global debugger ==> CMInitChannel(EGS53) #OCI#	
00002657	128.00366211	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002658	128.00392151	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002659	128.00425720	[580] ==== CAESAR global debugger ==> CMExitChannel(EGS53) #OCI#	
00002660	128.00785828	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00002661	128.00801086	[580] ==== CAESAR global debugger ==> CMCloseChannel(EGS53) #OC#	
00002662	128.01043701	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>EGS53<<	
00002663	128.01060486	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002664	128.01068115	[580] -- CCalComm::GetEcuInterface --> >>>EGS53<<< has 2 ecu interfaces; try to to find correct one !	
00002665	128.01086426	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002666	128.01095581	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002667	128.01116943	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002668	128.01126099	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS53', 0x0A4312D2)	
00002669	128.01596069	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS53', 0x0A4312D2)	
00002670	128.02058411	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002671	128.02067566	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002672	128.02085876	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002673	128.02093506	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002674	128.02128601	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002675	128.02142334	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS53', 0x0A4312D2)	
00002676	128.02680969	[580] ==== DIOpenEcu ==> Kein Fehler	
00002677	128.02708435	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00002678	128.02716064	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00002679	128.02738953	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00002680	128.04273987	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00002681	128.04286194	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00002682	128.04301453	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00002683	128.04309082	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002684	128.04327393	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00002685	128.04333496	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002686	128.06517029	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): GETRIEBE / EGS2 / VGSNAG2	
00002687	128.06541443	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>VGSNAG2<< is a CAN ECU, skip check!	
00002688	128.06549072	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00002689	128.06573486	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002690	128.06613159	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00002691	128.06628418	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002692	128.06637573	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00002693	128.06684875	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002694	128.06692505	[580] -- CCalComm::GetEcuInterface --> >>>VGSNAG2<<< has 1 ecu interfaces; try to to find correct one !	
00002695	128.06712341	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002696	128.06733704	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002697	128.06739807	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002698	128.06790161	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('VGSNAG2', 0x0A4312D2)	
00002699	128.07493591	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('VGSNAG2', 0x0A4312D2)	
00002700	128.08288574	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002701	128.08296204	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002702	128.08309937	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002703	128.08335876	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002704	128.08351135	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002705	128.08367920	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00002706	128.08372498	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00002707	128.08395386	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>VGSNAG2<< has no mutual exclusions !	
00002708	128.08398438	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> EGS2 is not a bus member.	
00002709	128.08407593	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>EGS2<< !	
00002710	128.08453369	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002711	128.08464050	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00002712	128.08471680	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002713	128.08511353	[580] -- CALInitEcu --> Ecu >>>VGSNAG2<<< is a normal CAESAR Ecu !	
00002714	128.08525085	[580] -- CALInitEcu thread proc --> CBF to initialize: VGSNAG2 on channel 1/ pin 101, has own connection (no bus member)	
00002715	128.08532715	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00002716	128.08538818	[580] -- CALInitEcu thread proc --> Init service: 	
00002717	128.08546448	[580] -- CALInitEcu thread proc --> Special handlings: FLASHID_CODE;	
00002718	128.08554077	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00002719	128.08564758	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002720	128.08570862	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>VGSNAG2<< / >>VGSNAG2<<, SubSystem service = >><<	
00002721	128.08578491	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>EGS53<<, bCommIsActive = 0	
00002722	128.08586121	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002723	128.08598328	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>VGSNAG2<<< on CAN_HS	
00002724	128.08615112	[580] ==== CMLockResources ==> Kein Fehler	
00002725	128.08627319	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002726	128.08634949	[580] -- CCalComm::GetEcuInterface --> >>>VGSNAG2<<< has 1 ecu interfaces; try to to find correct one !	
00002727	128.08642578	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002728	128.08650208	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002729	128.08657837	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002730	128.08668518	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('VGSNAG2', 0x0A431792)	
00002731	128.09072876	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('VGSNAG2', 0x0A431792)	
00002732	128.09405518	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002733	128.09408569	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002734	128.09420776	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002735	128.09425354	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002736	128.09432983	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002737	128.09439087	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('VGSNAG2', 0x0A431792)	
00002738	128.09791565	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00002739	128.09794617	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00002740	128.09811401	[580] ==== CAESAR global debugger ==> CMOpenChannel(VGSNAG2) on CANHS-1 on Card 4660 #OC#	
00002741	128.09814453	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('VGSNAG2', 0x0A431492)	
00002742	128.10194397	[580] ==== CAESAR global debugger ==> #CR498# ECU: VGSNAG2, GPD: ((VERSION 03.78.07, 02.09.11, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.15))	
00002743	128.10214233	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00002744	128.10235596	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00002745	128.10432434	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00002746	128.10452271	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00002747	128.10466003	[580] -- CALInitEcu --> CC is not allowed	
00002748	128.10481262	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00002749	128.10494995	[580] ==== CAESAR global debugger ==> CMInitChannel(VGSNAG2) #OCI#	
00002750	135.66839600	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002751	135.66896057	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002752	135.66940308	[580] ==== CAESAR global debugger ==> CMExitChannel(VGSNAG2) #OCI#	
00002753	135.67602539	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00002754	135.67636108	[580] ==== CAESAR global debugger ==> CMCloseChannel(VGSNAG2) #OC#	
00002755	135.67942810	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>VGSNAG2<<	
00002756	135.67974854	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002757	135.67996216	[580] -- CCalComm::GetEcuInterface --> >>>VGSNAG2<<< has 1 ecu interfaces; try to to find correct one !	
00002758	135.68016052	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002759	135.68038940	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002760	135.68063354	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002761	135.68083191	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('VGSNAG2', 0x0A431612)	
00002762	135.68597412	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('VGSNAG2', 0x0A431612)	
00002763	135.69020081	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002764	135.69024658	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002765	135.69036865	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002766	135.69041443	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002767	135.69053650	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002768	135.69055176	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('VGSNAG2', 0x0A431612)	
00002769	135.69419861	[580] ==== DIOpenEcu ==> Kein Fehler	
00002770	135.69432068	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00002771	135.69435120	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00002772	135.69448853	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00002773	135.71128845	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00002774	135.71186829	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00002775	135.71197510	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00002776	135.71200562	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002777	135.71205139	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00002778	135.71209717	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002779	135.73358154	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): GETRIEBE / ASG / KSG	
00002780	135.73371887	[580] -- CDB_GetNextECUToTest --> INIT_ANYWAY is specified, skip test for pin/protocol/address !	
00002781	135.73374939	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002782	135.73393250	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00002783	135.73394775	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002784	135.73400879	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00002785	135.73410034	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002786	135.73413086	[580] -- CCalComm::GetEcuInterface --> >>>KSG<<< has 1 ecu interfaces; try to to find correct one !	
00002787	135.73417664	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>KLINE<< !	
00002788	135.73423767	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002789	135.73432922	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('KSG', 0x0A431852)	
00002790	135.73658752	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('KSG', 0x0A431852)	
00002791	135.73814392	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002792	135.73826599	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002793	135.73828125	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002794	135.73838806	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002795	135.73841858	[580] -- CCalComm::GetEcuInterface --> interface is OK and it is no CAN ECU; so skip baudrate check and just use it !	
00002796	135.73854065	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00002797	135.73858643	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00002798	135.73863220	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>KSG<< has no mutual exclusions !	
00002799	135.73869324	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ASG is not a bus member.	
00002800	135.73873901	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>ASG<< !	
00002801	135.73890686	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002802	135.73893738	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00002803	135.73910522	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002804	135.73937988	[580] -- CALInitEcu --> Ecu >>>KSG<<< is a normal CAESAR Ecu !	
00002805	135.73941040	[580] -- CALInitEcu thread proc --> CBF to initialize: KSG on channel 1/ pin 11, has own connection (no bus member)	
00002806	135.73951721	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00002807	135.73954773	[580] -- CALInitEcu thread proc --> Init service: 	
00002808	135.73965454	[580] -- CALInitEcu thread proc --> Special handlings: INIT_ANYWAY;	
00002809	135.73968506	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00002810	135.73976135	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002811	135.73980713	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>KSG<< / >>KSG<<, SubSystem service = >><<	
00002812	135.73985291	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>VGSNAG2<<, bCommIsActive = 0	
00002813	135.73991394	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002814	135.73997498	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>KSG<<< on pin 11	
00002815	135.74003601	[580] ==== CMLockResources ==> Kein Fehler	
00002816	135.74009705	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002817	135.74015808	[580] -- CCalComm::GetEcuInterface --> >>>KSG<<< has 1 ecu interfaces; try to to find correct one !	
00002818	135.74020386	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>KLINE<< !	
00002819	135.74026489	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002820	135.74031067	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('KSG', 0x0A4312D2)	
00002821	135.74172974	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('KSG', 0x0A4312D2)	
00002822	135.74308777	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002823	135.74311829	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002824	135.74322510	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002825	135.74324036	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002826	135.74334717	[580] -- CCalComm::GetEcuInterface --> interface is OK and it is no CAN ECU; so skip baudrate check and just use it !	
00002827	135.74337769	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('KSG', 0x0A4312D2)	
00002828	135.74487305	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00002829	135.74490356	[580] -- CCALComm::RetrieveAndOpenChannel --> no fitting resource available ! deliver OPEN error.	
00002830	135.74501038	[580] -- CALInitEcu --> OPEN error occured; DO NOT memorize, Pin/address/protocol combination !	
00002831	135.74504089	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00002832	135.78643799	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00002833	135.79646301	[580] -- CCALCalOpenCommNew::CheckEcuInit --> no comm error. return with NOK !	
00002834	135.80313110	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002835	135.81066895	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to FINISHED --------------	
00002836	135.81733704	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002837	135.82620239	[580] -- CALOpenCommNew --> Communication was NOK; resetting >>>GETRIEBE<<< to allow test for ECU change with new CBF and Protocol on next try.	
00002838	135.83265686	[580] -- CTableManager::ResetTable --> resetting entry >>GETRIEBE<<; erase marks = 1	
00002839	135.84877014	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002840	135.88409424	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002841	137.55854797	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002842	137.62657166	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002843	139.63638306	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002844	139.72267151	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002845	141.63212585	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002846	141.69508362	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002847	143.58776855	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00002848	143.66883850	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00002849	145.40548706	[580] -- CCALCalOpenCommNew::PerformAPICall --> ------------ START -----------	
00002850	145.40560913	[580] -- CCALCalOpenCommNew::PerformAPICall --> No blocking DAS ecu on another channel detected; just continue.	
00002851	145.40562439	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00002852	145.40570068	[580] -- CCALCalOpenCommNew::OpenCommSTART --> starting OpenComm for ecu >>>EGS1<<< on channel >>1<<....	
00002853	145.40574646	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00002854	145.40588379	[580] -- CCALCalOpenCommNew::OpenCommSTART --> group name is >>>GETRIEBE<<<.	
00002855	145.40591431	[580] -- CCALCalOpenCommNew::OpenCommSTART --> requested ecu is a group member, but group is not marked yet ==> no implicit group reset required !	
00002856	145.40597534	[580] -- CCALCalOpenCommNew::OpenCommSTART --> CDB_GetMarkedECU delivers >><< for Ecu name >>EGS1<< !	
00002857	145.40602112	[580] -- CTableManager::ResetTable --> resetting entry >>EGS1<<; erase marks = 0	
00002858	145.40608215	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00002859	145.40614319	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ------------ no thread active / switch to RETRIEVE_NEXT_ECU --------------	
00002860	145.40618896	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00002861	145.42739868	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): GETRIEBE / EGS1 / EGS52	
00002862	145.42742920	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>EGS52<< is a CAN ECU, skip check!	
00002863	145.42752075	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00002864	145.42755127	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002865	145.42761230	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00002866	145.42771912	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002867	145.42776489	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00002868	145.42781067	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002869	145.42787170	[580] -- CCalComm::GetEcuInterface --> >>>EGS52<<< has 2 ecu interfaces; try to to find correct one !	
00002870	145.42790222	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002871	145.42794800	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002872	145.42803955	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002873	145.42834473	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431152)	
00002874	145.42958069	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431152)	
00002875	145.43070984	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002876	145.43074036	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002877	145.43081665	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002878	145.43092346	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002879	145.43093872	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002880	145.43104553	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431212)	
00002881	145.43215942	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431212)	
00002882	145.43327332	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002883	145.43328857	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002884	145.43338013	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002885	145.43351746	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002886	145.43354797	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002887	145.43367004	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00002888	145.43368530	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00002889	145.43382263	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>EGS52<< has no mutual exclusions !	
00002890	145.43383789	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> EGS1 is not a bus member.	
00002891	145.43392944	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>EGS1<< !	
00002892	145.43409729	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002893	145.43412781	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00002894	145.43423462	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00002895	145.43453979	[580] -- CALInitEcu --> Ecu >>>EGS52<<< is a normal CAESAR Ecu !	
00002896	145.43457031	[580] -- CALInitEcu thread proc --> CBF to initialize: EGS52 on channel 1/ pin 101, has own connection (no bus member)	
00002897	145.43466187	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00002898	145.43472290	[580] -- CALInitEcu thread proc --> Init service: 	
00002899	145.43478394	[580] -- CALInitEcu thread proc --> Special handlings: FLASHID_CODE;	
00002900	145.43484497	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00002901	145.43489075	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002902	145.43495178	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>EGS52<< / >>EGS52<<, SubSystem service = >><<	
00002903	145.43502808	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>VGSNAG2<<, bCommIsActive = 0	
00002904	145.43508911	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00002905	145.43513489	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>EGS52<<< on CAN_HS	
00002906	145.43518066	[580] ==== CMLockResources ==> Kein Fehler	
00002907	145.43525696	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002908	145.43530273	[580] -- CCalComm::GetEcuInterface --> >>>EGS52<<< has 2 ecu interfaces; try to to find correct one !	
00002909	145.43534851	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002910	145.43539429	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002911	145.43544006	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002912	145.43557739	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4311D2)	
00002913	145.43667603	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4311D2)	
00002914	145.43754578	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002915	145.43766785	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002916	145.43775940	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002917	145.43788147	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002918	145.43789673	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002919	145.43795776	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431352)	
00002920	145.43908691	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431352)	
00002921	145.44018555	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002922	145.44026184	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002923	145.44027710	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002924	145.44035339	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002925	145.44039917	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002926	145.44050598	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431352)	
00002927	145.44165039	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00002928	145.44166565	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00002929	145.44178772	[580] ==== CAESAR global debugger ==> CMOpenChannel(EGS52) on CANHS-1 on Card 4660 #OC#	
00002930	145.44181824	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4316D2)	
00002931	145.44296265	[580] ==== CAESAR global debugger ==> #CR498# ECU: EGS52, GPD: ((VERSION 03.77.02, 18.01.06, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.15))	
00002932	145.44308472	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00002933	145.44322205	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00002934	145.44470215	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00002935	145.44473267	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00002936	145.44487000	[580] -- CALInitEcu --> CC is not allowed	
00002937	145.44493103	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00002938	145.44497681	[580] ==== CAESAR global debugger ==> CMInitChannel(EGS52) #OCI#	
00002939	151.94978333	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002940	151.95014954	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00002941	151.95036316	[580] ==== CAESAR global debugger ==> CMExitChannel(EGS52) #OCI#	
00002942	151.95350647	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00002943	151.95367432	[580] ==== CAESAR global debugger ==> CMCloseChannel(EGS52) #OC#	
00002944	151.95614624	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>EGS52<<	
00002945	151.95648193	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00002946	151.95663452	[580] -- CCalComm::GetEcuInterface --> >>>EGS52<<< has 2 ecu interfaces; try to to find correct one !	
00002947	151.95703125	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00002948	151.95718384	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00002949	151.95730591	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00002950	151.95753479	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4316D2)	
00002951	151.96128845	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4316D2)	
00002952	151.96398926	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00002953	151.96418762	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002954	151.96423340	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002955	151.96438599	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00002956	151.96443176	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00002957	151.96472168	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431552)	
00002958	151.96759033	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431552)	
00002959	151.97016907	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00002960	151.97019958	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00002961	151.97035217	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00002962	151.97039795	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00002963	151.97053528	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00002964	151.97071838	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431552)	
00002965	151.97280884	[580] ==== DIOpenEcu ==> Kein Fehler	
00002966	151.97299194	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00002967	151.97303772	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00002968	151.97315979	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00002969	151.99043274	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00002970	151.99047852	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00002971	151.99061584	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00002972	151.99066162	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002973	151.99085999	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00002974	151.99092102	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00002975	152.01559448	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name):  /  / 	
00002976	152.01562500	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> no more ECUs in CAL database !	
00002977	152.01571655	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ...but we had a at least one real init try; so return the fault of that try.	
00002978	152.01585388	[580] -- CALOpenCommNew --> Communication was NOK; resetting >>>EGS1<<< to allow test for ECU change with new CBF and Protocol on next try.	
00002979	152.01591492	[580] -- CTableManager::ResetTable --> resetting entry >>EGS1<<; erase marks = 1	
00002980	152.01608276	[580] -- CContext::TraceEntry --> context entry: Group >>GETRIEBE<<, Members >>|EGS1|EGS3|EGS2|ASG|<<, status is NOK	
00002981	155.27542114	[580] -- CCALCalOpenCommNew::PerformAPICall --> ------------ START -----------	
00002982	155.27545166	[580] -- CCALCalOpenCommNew::PerformAPICall --> No blocking DAS ecu on another channel detected; just continue.	
00002983	155.27557373	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00002984	155.27560425	[580] -- CCALCalOpenCommNew::OpenCommSTART --> starting OpenComm for ecu >>>EGS1<<< on channel >>1<<....	
00002985	155.27566528	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ============================================================	
00002986	155.27583313	[580] -- CCALCalOpenCommNew::OpenCommSTART --> group name is >>>GETRIEBE<<<.	
00002987	155.27590942	[580] -- CCALCalOpenCommNew::OpenCommSTART --> requested ecu is a group member, but group is not marked yet ==> no implicit group reset required !	
00002988	155.27597046	[580] -- CCALCalOpenCommNew::OpenCommSTART --> CDB_GetMarkedECU delivers >><< for Ecu name >>EGS1<< !	
00002989	155.27600098	[580] -- CTableManager::ResetTable --> resetting entry >>EGS1<<; erase marks = 0	
00002990	155.27607727	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00002991	155.27615356	[580] -- CCALCalOpenCommNew::OpenCommSTART --> ------------ no thread active / switch to RETRIEVE_NEXT_ECU --------------	
00002992	155.27619934	[580] -- CCALCalOpenCommNew::OpenCommSTART --> 	
00002993	155.29689026	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name): GETRIEBE / EGS1 / EGS52	
00002994	155.29702759	[580] -- CCALComm::PinAndProtocolAndAddressAreNew --> >>EGS52<< is a CAN ECU, skip check!	
00002995	155.29704285	[580] -- CDB_GetNextECUToTest --> pin/protocol/address are fresh; so test the ECU !	
00002996	155.29736328	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002997	155.29742432	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> === new ECU is no XSMonitor dummy on SDconnect; so keep CAESAR alive and check for firmware switch ! ===	
00002998	155.29747009	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ========================================================================================================	
00002999	155.29751587	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> firmware for new ecu is USE_FIRMWARE_AS_IS; so there is nothing to do.	
00003000	155.29760742	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00003001	155.29766846	[580] -- CCalComm::GetEcuInterface --> >>>EGS52<<< has 2 ecu interfaces; try to to find correct one !	
00003002	155.29800415	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00003003	155.29803467	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00003004	155.29812622	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00003005	155.29823303	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4317D2)	
00003006	155.29942322	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4317D2)	
00003007	155.30039978	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00003008	155.30052185	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00003009	155.30058289	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00003010	155.30062866	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00003011	155.30068970	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00003012	155.30075073	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431492)	
00003013	155.30212402	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431492)	
00003014	155.30331421	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00003015	155.30345154	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00003016	155.30346680	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00003017	155.30357361	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00003018	155.30361938	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00003019	155.30380249	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> No blocking DIOGENES ecu on another channel detected; just continue.	
00003020	155.30381775	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Required pin is either CAN or not in use on another channel; just continue.	
00003021	155.30387878	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> >>EGS52<< has no mutual exclusions !	
00003022	155.30395508	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> EGS1 is not a bus member.	
00003023	155.30401611	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> channel is free, so just start init thread for >>EGS1<< !	
00003024	155.30426025	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00003025	155.30435181	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ------------- switch to INITIALIZING_ECU --------------	
00003026	155.30441284	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> 	
00003027	155.30461121	[580] -- CALInitEcu --> Ecu >>>EGS52<<< is a normal CAESAR Ecu !	
00003028	155.30464172	[580] -- CALInitEcu thread proc --> CBF to initialize: EGS52 on channel 1/ pin 101, has own connection (no bus member)	
00003029	155.30468750	[580] -- CALInitEcu thread proc --> Comm Parameters: 	
00003030	155.30474854	[580] -- CALInitEcu thread proc --> Init service: 	
00003031	155.30477905	[580] -- CALInitEcu thread proc --> Special handlings: FLASHID_CODE;	
00003032	155.30482483	[580] -- CALInitEcu thread proc --> Initial startup FCs: 	
00003033	155.30488586	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00003034	155.30493164	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === requested ECU (long/Dio name) = >>EGS52<< / >>EGS52<<, SubSystem service = >><<	
00003035	155.30497742	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> === active ECU on channel = >>EGS52<<, bCommIsActive = 0	
00003036	155.30502319	[580] -- CALInitEcu thread proc / Entry TryKEcuInit --> =================================================================	
00003037	155.30506897	[580] -- CCALComm::RetrieveAndOpenChannel --> trying to find a resource for ECU >>>EGS52<<< on CAN_HS	
00003038	155.30514526	[580] ==== CMLockResources ==> Kein Fehler	
00003039	155.30519104	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00003040	155.30523682	[580] -- CCalComm::GetEcuInterface --> >>>EGS52<<< has 2 ecu interfaces; try to to find correct one !	
00003041	155.30531311	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00003042	155.30534363	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00003043	155.30538940	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00003044	155.30545044	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431752)	
00003045	155.30651855	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431752)	
00003046	155.30751038	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00003047	155.30752563	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00003048	155.30763245	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00003049	155.30766296	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00003050	155.30776978	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00003051	155.30778503	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4315D2)	
00003052	155.30889893	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4315D2)	
00003053	155.30996704	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00003054	155.30999756	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00003055	155.31008911	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00003056	155.31010437	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00003057	155.31021118	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00003058	155.31022644	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A4315D2)	
00003059	155.31170654	[580] ==== CMGetECUResourceByInterfaceAndPin ==> Kein Fehler	
00003060	155.31173706	[580] -- CCALComm::RetrieveAndOpenChannel --> Fitting resource available ! try to open the channel.	
00003061	155.31184387	[580] ==== CAESAR global debugger ==> CMOpenChannel(EGS52) on CANHS-1 on Card 4660 #OC#	
00003062	155.31185913	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431252)	
00003063	155.31309509	[580] ==== CAESAR global debugger ==> #CR498# ECU: EGS52, GPD: ((VERSION 03.77.02, 18.01.06, GPD-Translator)), CBF: ((VERSION 04.00.01, CBF -- generated by SP based CTRAFO 03.00.15))	
00003064	155.31318665	[580] ==== CAESAR global debugger ==> Warning: KW2C3PE :Versionmismatch Headerfile 10502(CBF) 10504(GBF)	
00003065	155.31332397	[580] ==== CAESAR global debugger ==> J> SetChannelStatus to 65535	
00003066	155.31526184	[580] ==== CMOpenChannel / globales cerr ==> Kein Fehler	
00003067	155.31533813	[580] -- IsIgnitionOK --> ECU does not require Ignition	
00003068	155.31539917	[580] -- CALInitEcu --> CC is not allowed	
00003069	155.31547546	[580] -- CALInitEcu thread proc / TryKEcuInit --> no subsystem service defined !	
00003070	155.31562805	[580] ==== CAESAR global debugger ==> CMInitChannel(EGS52) #OCI#	
00003071	161.82685852	[580] ==== CAESAR channel debugger ==>  > ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00003072	161.82723999	[580] ==== CMInitChannel 1 / channel error ==> Fehler-Nr 2142 = ComCoordinator: 02142:TIMEOUTP2CAN: Timeout-P2 on CAN-Bus. Timeout from the end of data sent from tester to the beginning of the response data from ECU	
00003073	161.82754517	[580] ==== CAESAR global debugger ==> CMExitChannel(EGS52) #OCI#	
00003074	161.83148193	[580] ==== CMExitChannel 1 / channel error ==> Kein Fehler	
00003075	161.83163452	[580] ==== CAESAR global debugger ==> CMCloseChannel(EGS52) #OC#	
00003076	161.83317566	[580] -- CCALComm::GetAdressAndProtocol --> Trying to retrieve address and protocol for >>EGS52<<	
00003077	161.83345032	[580] ==== DIECUGetNumberOfAvailableInterfaceTypes ==> Kein Fehler	
00003078	161.83361816	[580] -- CCalComm::GetEcuInterface --> >>>EGS52<<< has 2 ecu interfaces; try to to find correct one !	
00003079	161.83383179	[580] -- CCalComm::GetEcuInterface --> CAL database returned interface type >>HSCAN<< !	
00003080	161.83396912	[580] -- CCalComm::GetEcuInterface --> CAN HS baudrate is defined as >>500<< !	
00003081	161.83410645	[580] -- CCalComm::GetEcuInterface --> scan available CAESAR interfaces for a matching one...	
00003082	161.83439636	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431792)	
00003083	161.83847046	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431792)	
00003084	161.84146118	[580] -- CCalComm::GetEcuInterface --> 1. ecu interface has qualifier >>KLINE_KW2000PE_10_4<<, long name >>KLINE (KW2000PE, 10.4)<<, description >>(null)<< and protocol >>KW2000PE<< !	
00003085	161.84159851	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00003086	161.84179688	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00003087	161.84194946	[580] -- CCalComm::GetEcuInterface --> interface is >>KLINE<<, baudrate is >>10_4<< !	
00003088	161.84201050	[580] -- CCalComm::GetEcuInterface --> interface name does not match.	
00003089	161.84219360	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431512)	
00003090	161.84495544	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431512)	
00003091	161.84712219	[580] -- CCalComm::GetEcuInterface --> 2. ecu interface has qualifier >>HSCAN_KW2C3PE_500<<, long name >>HSCAN (KW2C3PE, 500)<<, description >>(null)<< and protocol >>KW2C3PE<< !	
00003092	161.84727478	[580] -- CCalComm::GetEcuInterface --> Interface name contains underscores and therefore baudrate/protocol; 	
00003093	161.84732056	[580] -- CCalComm::GetEcuInterface --> must be a new CBF. Compare interface type and baudrate !	
00003094	161.84750366	[580] -- CCalComm::GetEcuInterface --> interface is >>HSCAN<<, baudrate is >>500<< !	
00003095	161.84754944	[580] -- CCalComm::GetEcuInterface --> interface and baudrate are OK; so let's use it !	
00003096	161.84771729	[580] ==== CAESAR global debugger ==> DIOpenECUByInterface ('EGS52', 0x0A431512)	
00003097	161.84974670	[580] ==== DIOpenEcu ==> Kein Fehler	
00003098	161.84997559	[580] -- CCALComm::GetAdressAndProtocol --> Address = 00 hex, Protocol = >>KW2C3PE<<	
00003099	161.85000610	[580] -- CALInitEcu --> Init was not successful; memorizing protocol = >>KW2C3PE<<, pin = 101 and address = 0x00 / 0 decimal	
00003100	161.85012817	[580] -- CALInitEcu thread proc --> CALInitEcu thread for channel 1 finished !	
00003101	161.85676575	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init thread has finished ! Evaluate result.	
00003102	161.85679626	[580] -- CCALCalOpenCommNew::CheckEcuInit --> init error 515/2142 has occured.	
00003103	161.85697937	[580] -- CCALCalOpenCommNew::CheckEcuInit --> GROUP ecu; try to find next one !	
00003104	161.85699463	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00003105	161.85717773	[580] -- CCALCalOpenCommNew::CheckEcuInit --> ------------- switch to RETRIEVE_NEXT_ECU --------------	
00003106	161.85719299	[580] -- CCALCalOpenCommNew::CheckEcuInit --> 	
00003107	161.88041687	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> Next database ECU (grp/DAS/Diogenes name):  /  / 	
00003108	161.88043213	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> no more ECUs in CAL database !	
00003109	161.88055420	[580] -- CCALCalOpenCommNew::RetrieveNextEcu --> ...but we had a at least one real init try; so return the fault of that try.	
00003110	161.88066101	[580] -- CALOpenCommNew --> Communication was NOK; resetting >>>EGS1<<< to allow test for ECU change with new CBF and Protocol on next try.	
00003111	161.88070679	[580] -- CTableManager::ResetTable --> resetting entry >>EGS1<<; erase marks = 1	
00003112	161.88084412	[580] -- CContext::TraceEntry --> context entry: Group >>GETRIEBE<<, Members >>|EGS1|EGS3|EGS2|ASG|<<, status is NOK	
00003113	161.97625732	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003114	161.97637939	[580] -- CALGetCommState --> comm link is free	
00003115	161.97639465	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003116	161.97671509	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003117	161.97676086	[580] -- CALGetCommState --> Channel 1 is not in use	
00003118	161.97680664	[580] -- CALGetCommState --> Channel 2 is not in use	
00003119	161.97686768	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003120	161.97692871	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003121	161.98785400	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003122	161.98797607	[580] -- CALGetCommState --> comm link is free	
00003123	161.98802185	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003124	161.98866272	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003125	161.98876953	[580] -- CALGetCommState --> Channel 1 is not in use	
00003126	161.98880005	[580] -- CALGetCommState --> Channel 2 is not in use	
00003127	161.98886108	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003128	161.98892212	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003129	162.00086975	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003130	162.00114441	[580] -- CALGetCommState --> comm link is free	
00003131	162.00292969	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003132	162.00535583	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003133	162.00575256	[580] -- CALGetCommState --> Channel 1 is not in use	
00003134	162.00720215	[580] -- CALGetCommState --> Channel 2 is not in use	
00003135	162.00767517	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003136	162.00805664	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003137	162.02133179	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003138	162.02166748	[580] -- CALGetCommState --> comm link is free	
00003139	162.02220154	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003140	162.02528381	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003141	162.02574158	[580] -- CALGetCommState --> Channel 1 is not in use	
00003142	162.02627563	[580] -- CALGetCommState --> Channel 2 is not in use	
00003143	162.02642822	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003144	162.02719116	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003145	162.03842163	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003146	162.03944397	[580] -- CALGetCommState --> comm link is free	
00003147	162.03993225	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003148	162.04087830	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003149	162.04109192	[580] -- CALGetCommState --> Channel 1 is not in use	
00003150	162.04129028	[580] -- CALGetCommState --> Channel 2 is not in use	
00003151	162.04151917	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003152	162.04191589	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003153	162.05586243	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003154	162.05610657	[580] -- CALGetCommState --> comm link is free	
00003155	162.05618286	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003156	162.05749512	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003157	162.05772400	[580] -- CALGetCommState --> Channel 1 is not in use	
00003158	162.05790710	[580] -- CALGetCommState --> Channel 2 is not in use	
00003159	162.05805969	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003160	162.05833435	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003161	162.06973267	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003162	162.06982422	[580] -- CALGetCommState --> comm link is free	
00003163	162.07011414	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003164	162.07106018	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003165	162.07135010	[580] -- CALGetCommState --> Channel 1 is not in use	
00003166	162.07138062	[580] -- CALGetCommState --> Channel 2 is not in use	
00003167	162.07223511	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003168	162.07287598	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003169	162.08471680	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003170	162.08485413	[580] -- CALGetCommState --> comm link is free	
00003171	162.08590698	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003172	162.08752441	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003173	162.08778381	[580] -- CALGetCommState --> Channel 1 is not in use	
00003174	162.08792114	[580] -- CALGetCommState --> Channel 2 is not in use	
00003175	162.08856201	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003176	162.09390259	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003177	162.10307312	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003178	162.10350037	[580] -- CALGetCommState --> comm link is free	
00003179	162.10481262	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003180	162.10494995	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003181	162.10510254	[580] -- CALGetCommState --> Channel 1 is not in use	
00003182	162.10514832	[580] -- CALGetCommState --> Channel 2 is not in use	
00003183	162.10528564	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003184	162.10545349	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003185	162.11657715	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003186	162.11668396	[580] -- CALGetCommState --> comm link is free	
00003187	162.11674500	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003188	162.11703491	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003189	162.11724854	[580] -- CALGetCommState --> Channel 1 is not in use	
00003190	162.11735535	[580] -- CALGetCommState --> Channel 2 is not in use	
00003191	162.11741638	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003192	162.11752319	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003193	162.12850952	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003194	162.12863159	[580] -- CALGetCommState --> comm link is free	
00003195	162.12866211	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003196	162.12896729	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003197	162.12898254	[580] -- CALGetCommState --> Channel 1 is not in use	
00003198	162.12927246	[580] -- CALGetCommState --> Channel 2 is not in use	
00003199	162.12940979	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003200	162.12948608	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003201	162.14035034	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003202	162.14054871	[580] -- CALGetCommState --> comm link is free	
00003203	162.14064026	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003204	162.14091492	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003205	162.14105225	[580] -- CALGetCommState --> Channel 1 is not in use	
00003206	162.14106750	[580] -- CALGetCommState --> Channel 2 is not in use	
00003207	162.14118958	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003208	162.14125061	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003209	162.15203857	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003210	162.15208435	[580] -- CALGetCommState --> comm link is free	
00003211	162.15242004	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003212	162.15283203	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003213	162.15312195	[580] -- CALGetCommState --> Channel 1 is not in use	
00003214	162.15321350	[580] -- CALGetCommState --> Channel 2 is not in use	
00003215	162.15336609	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003216	162.15345764	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003217	162.16461182	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003218	162.16462708	[580] -- CALGetCommState --> comm link is free	
00003219	162.16481018	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003220	162.16506958	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003221	162.16510010	[580] -- CALGetCommState --> Channel 1 is not in use	
00003222	162.16520691	[580] -- CALGetCommState --> Channel 2 is not in use	
00003223	162.16554260	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003224	162.16581726	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003225	162.17628479	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003226	162.17639160	[580] -- CALGetCommState --> comm link is free	
00003227	162.17642212	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003228	162.17672729	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003229	162.17675781	[580] -- CALGetCommState --> Channel 1 is not in use	
00003230	162.18022156	[580] -- CALGetCommState --> Channel 2 is not in use	
00003231	162.18031311	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003232	162.18038940	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003233	162.19209290	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003234	162.19210815	[580] -- CALGetCommState --> comm link is free	
00003235	162.19226074	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003236	162.19267273	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003237	162.19271851	[580] -- CALGetCommState --> Channel 1 is not in use	
00003238	162.19284058	[580] -- CALGetCommState --> Channel 2 is not in use	
00003239	162.19285583	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003240	162.19299316	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003241	162.20385742	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003242	162.20404053	[580] -- CALGetCommState --> comm link is free	
00003243	162.20411682	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003244	162.20439148	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003245	162.20455933	[580] -- CALGetCommState --> Channel 1 is not in use	
00003246	162.20457458	[580] -- CALGetCommState --> Channel 2 is not in use	
00003247	162.20469666	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003248	162.20474243	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003249	162.21556091	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003250	162.21586609	[580] -- CALGetCommState --> comm link is free	
00003251	162.21591187	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003252	162.21636963	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003253	162.21649170	[580] -- CALGetCommState --> Channel 1 is not in use	
00003254	162.21658325	[580] -- CALGetCommState --> Channel 2 is not in use	
00003255	162.21681213	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003256	162.21688843	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003257	162.22792053	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003258	162.22804260	[580] -- CALGetCommState --> comm link is free	
00003259	162.22807312	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003260	162.22839355	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003261	162.22856140	[580] -- CALGetCommState --> Channel 1 is not in use	
00003262	162.22866821	[580] -- CALGetCommState --> Channel 2 is not in use	
00003263	162.22871399	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003264	162.22885132	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003265	162.23977661	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003266	162.23994446	[580] -- CALGetCommState --> comm link is free	
00003267	162.24000549	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003268	162.24031067	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003269	162.24049377	[580] -- CALGetCommState --> Channel 1 is not in use	
00003270	162.24064636	[580] -- CALGetCommState --> Channel 2 is not in use	
00003271	162.24067688	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003272	162.24081421	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003273	162.25154114	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003274	162.25157166	[580] -- CALGetCommState --> comm link is free	
00003275	162.25169373	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003276	162.25207520	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003277	162.25209045	[580] -- CALGetCommState --> Channel 1 is not in use	
00003278	162.25221252	[580] -- CALGetCommState --> Channel 2 is not in use	
00003279	162.25222778	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003280	162.25244141	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003281	162.35112000	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003282	162.36128235	[580] -- CALGetCommState --> comm link is free	
00003283	162.36892700	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003284	162.37594604	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003285	162.38322449	[580] -- CALGetCommState --> Channel 1 is not in use	
00003286	162.39028931	[580] -- CALGetCommState --> Channel 2 is not in use	
00003287	162.39970398	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003288	162.40666199	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003289	162.41557312	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003290	162.42247009	[580] -- CALGetCommState --> comm link is free	
00003291	162.43054199	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003292	162.43827820	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003293	162.44717407	[580] -- CALGetCommState --> Channel 1 is not in use	
00003294	162.45533752	[580] -- CALGetCommState --> Channel 2 is not in use	
00003295	162.46434021	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003296	162.47148132	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003297	162.47991943	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003298	162.48864746	[580] -- CALGetCommState --> comm link is free	
00003299	162.49736023	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003300	162.50442505	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003301	162.51301575	[580] -- CALGetCommState --> Channel 1 is not in use	
00003302	162.52082825	[580] -- CALGetCommState --> Channel 2 is not in use	
00003303	162.53010559	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003304	162.53735352	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003305	162.54650879	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003306	162.55339050	[580] -- CALGetCommState --> comm link is free	
00003307	162.56266785	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003308	162.57423401	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003309	162.57441711	[580] -- CALGetCommState --> Channel 1 is not in use	
00003310	162.57449341	[580] -- CALGetCommState --> Channel 2 is not in use	
00003311	162.57452393	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003312	162.57466125	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003313	162.58512878	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003314	162.58515930	[580] -- CALGetCommState --> comm link is free	
00003315	162.58522034	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003316	162.58544922	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003317	162.58558655	[580] -- CALGetCommState --> Channel 1 is not in use	
00003318	162.58561707	[580] -- CALGetCommState --> Channel 2 is not in use	
00003319	162.58566284	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003320	162.58642578	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003321	162.59718323	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003322	162.59724426	[580] -- CALGetCommState --> comm link is free	
00003323	162.59732056	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003324	162.59764099	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003325	162.59774780	[580] -- CALGetCommState --> Channel 1 is not in use	
00003326	162.59793091	[580] -- CALGetCommState --> Channel 2 is not in use	
00003327	162.59803772	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003328	162.59805298	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003329	162.60893250	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003330	162.60896301	[580] -- CALGetCommState --> comm link is free	
00003331	162.60913086	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003332	162.60931396	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003333	162.60934448	[580] -- CALGetCommState --> Channel 1 is not in use	
00003334	162.60939026	[580] -- CALGetCommState --> Channel 2 is not in use	
00003335	162.60945129	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003336	162.60952759	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003337	162.62054443	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003338	162.62059021	[580] -- CALGetCommState --> comm link is free	
00003339	162.62069702	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003340	162.62095642	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003341	162.62097168	[580] -- CALGetCommState --> Channel 1 is not in use	
00003342	162.62107849	[580] -- CALGetCommState --> Channel 2 is not in use	
00003343	162.62109375	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003344	162.62132263	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003345	162.63476563	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003346	162.63487244	[580] -- CALGetCommState --> comm link is free	
00003347	162.63488770	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003348	162.63511658	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003349	162.63513184	[580] -- CALGetCommState --> Channel 1 is not in use	
00003350	162.63526917	[580] -- CALGetCommState --> Channel 2 is not in use	
00003351	162.63528442	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003352	162.63534546	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003353	162.64590454	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003354	162.64602661	[580] -- CALGetCommState --> comm link is free	
00003355	162.64604187	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003356	162.64633179	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003357	162.64636230	[580] -- CALGetCommState --> Channel 1 is not in use	
00003358	162.64640808	[580] -- CALGetCommState --> Channel 2 is not in use	
00003359	162.64645386	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003360	162.64651489	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003361	162.65762329	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003362	162.65771484	[580] -- CALGetCommState --> comm link is free	
00003363	162.65782166	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003364	162.65797424	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003365	162.65826416	[580] -- CALGetCommState --> Channel 1 is not in use	
00003366	162.65844727	[580] -- CALGetCommState --> Channel 2 is not in use	
00003367	162.65855408	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003368	162.65861511	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003369	162.66931152	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003370	162.66943359	[580] -- CALGetCommState --> comm link is free	
00003371	162.66947937	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003372	162.66967773	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003373	162.66972351	[580] -- CALGetCommState --> Channel 1 is not in use	
00003374	162.66975403	[580] -- CALGetCommState --> Channel 2 is not in use	
00003375	162.66981506	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003376	162.66986084	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003377	162.68022156	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003378	162.68031311	[580] -- CALGetCommState --> comm link is free	
00003379	162.68034363	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003380	162.68063354	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003381	162.68070984	[580] -- CALGetCommState --> Channel 1 is not in use	
00003382	162.68075562	[580] -- CALGetCommState --> Channel 2 is not in use	
00003383	162.68080139	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003384	162.68090820	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003385	162.69175720	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003386	162.69181824	[580] -- CALGetCommState --> comm link is free	
00003387	162.69192505	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003388	162.69215393	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003389	162.69221497	[580] -- CALGetCommState --> Channel 1 is not in use	
00003390	162.69226074	[580] -- CALGetCommState --> Channel 2 is not in use	
00003391	162.69230652	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003392	162.69239807	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003393	162.70339966	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003394	162.70350647	[580] -- CALGetCommState --> comm link is free	
00003395	162.70359802	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003396	162.70387268	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003397	162.70414734	[580] -- CALGetCommState --> Channel 1 is not in use	
00003398	162.70419312	[580] -- CALGetCommState --> Channel 2 is not in use	
00003399	162.70425415	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003400	162.70436096	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003401	162.71546936	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003402	162.71557617	[580] -- CALGetCommState --> comm link is free	
00003403	162.71566772	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003404	162.71621704	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003405	162.71632385	[580] -- CALGetCommState --> Channel 1 is not in use	
00003406	162.71650696	[580] -- CALGetCommState --> Channel 2 is not in use	
00003407	162.71661377	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003408	162.71675110	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003409	162.72726440	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003410	162.72752380	[580] -- CALGetCommState --> comm link is free	
00003411	162.72766113	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003412	162.72805786	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003413	162.72810364	[580] -- CALGetCommState --> Channel 1 is not in use	
00003414	162.72821045	[580] -- CALGetCommState --> Channel 2 is not in use	
00003415	162.72827148	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003416	162.72850037	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003417	162.73973083	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003418	162.73976135	[580] -- CALGetCommState --> comm link is free	
00003419	162.73989868	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003420	162.74017334	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003421	162.74020386	[580] -- CALGetCommState --> Channel 1 is not in use	
00003422	162.74032593	[580] -- CALGetCommState --> Channel 2 is not in use	
00003423	162.74050903	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003424	162.74060059	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003425	162.75140381	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003426	162.75143433	[580] -- CALGetCommState --> comm link is free	
00003427	162.75158691	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003428	162.75186157	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003429	162.75189209	[580] -- CALGetCommState --> Channel 1 is not in use	
00003430	162.75199890	[580] -- CALGetCommState --> Channel 2 is not in use	
00003431	162.75221252	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003432	162.75228882	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003433	162.82154846	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003434	162.83038330	[580] -- CALGetCommState --> comm link is free	
00003435	162.83688354	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003436	162.84469604	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003437	162.85314941	[580] -- CALGetCommState --> Channel 1 is not in use	
00003438	162.85943604	[580] -- CALGetCommState --> Channel 2 is not in use	
00003439	162.86621094	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003440	162.87477112	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003441	162.88121033	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003442	162.88970947	[580] -- CALGetCommState --> comm link is free	
00003443	162.89741516	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003444	162.90596008	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003445	162.91244507	[580] -- CALGetCommState --> Channel 1 is not in use	
00003446	162.92225647	[580] -- CALGetCommState --> Channel 2 is not in use	
00003447	162.92921448	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003448	162.93836975	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003449	162.94531250	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003450	162.95478821	[580] -- CALGetCommState --> comm link is free	
00003451	162.96148682	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003452	162.97166443	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003453	162.97898865	[580] -- CALGetCommState --> Channel 1 is not in use	
00003454	162.98725891	[580] -- CALGetCommState --> Channel 2 is not in use	
00003455	162.99449158	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003456	163.00567627	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003457	163.01263428	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003458	163.02041626	[580] -- CALGetCommState --> comm link is free	
00003459	163.02705383	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003460	163.03610229	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003461	163.04356384	[580] -- CALGetCommState --> Channel 1 is not in use	
00003462	163.05111694	[580] -- CALGetCommState --> Channel 2 is not in use	
00003463	163.06166077	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003464	163.06890869	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003465	163.08099365	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003466	163.08108521	[580] -- CALGetCommState --> comm link is free	
00003467	163.08123779	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003468	163.08166504	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003469	163.08174133	[580] -- CALGetCommState --> Channel 1 is not in use	
00003470	163.08177185	[580] -- CALGetCommState --> Channel 2 is not in use	
00003471	163.08184814	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003472	163.08189392	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003473	163.09336853	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003474	163.09341431	[580] -- CALGetCommState --> comm link is free	
00003475	163.09346008	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003476	163.09370422	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003477	163.09376526	[580] -- CALGetCommState --> Channel 1 is not in use	
00003478	163.09379578	[580] -- CALGetCommState --> Channel 2 is not in use	
00003479	163.09384155	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003480	163.09390259	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003481	163.10487366	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003482	163.10490417	[580] -- CALGetCommState --> comm link is free	
00003483	163.10496521	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003484	163.10520935	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003485	163.10533142	[580] -- CALGetCommState --> Channel 1 is not in use	
00003486	163.10534668	[580] -- CALGetCommState --> Channel 2 is not in use	
00003487	163.10543823	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003488	163.10545349	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003489	163.11666870	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003490	163.11679077	[580] -- CALGetCommState --> comm link is free	
00003491	163.11694336	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003492	163.11717224	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003493	163.11729431	[580] -- CALGetCommState --> Channel 1 is not in use	
00003494	163.11734009	[580] -- CALGetCommState --> Channel 2 is not in use	
00003495	163.11738586	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003496	163.11744690	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003497	163.12826538	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003498	163.12838745	[580] -- CALGetCommState --> comm link is free	
00003499	163.12840271	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003500	163.12870789	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003501	163.12872314	[580] -- CALGetCommState --> Channel 1 is not in use	
00003502	163.12881470	[580] -- CALGetCommState --> Channel 2 is not in use	
00003503	163.12886047	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003504	163.12892151	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003505	163.13981628	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003506	163.13993835	[580] -- CALGetCommState --> comm link is free	
00003507	163.13995361	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003508	163.14021301	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003509	163.14024353	[580] -- CALGetCommState --> Channel 1 is not in use	
00003510	163.14033508	[580] -- CALGetCommState --> Channel 2 is not in use	
00003511	163.14036560	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003512	163.14047241	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003513	163.15179443	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003514	163.15182495	[580] -- CALGetCommState --> comm link is free	
00003515	163.15193176	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003516	163.15225220	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003517	163.15226746	[580] -- CALGetCommState --> Channel 1 is not in use	
00003518	163.15235901	[580] -- CALGetCommState --> Channel 2 is not in use	
00003519	163.15242004	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003520	163.15248108	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003521	163.16375732	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003522	163.16392517	[580] -- CALGetCommState --> comm link is free	
00003523	163.16401672	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003524	163.16433716	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003525	163.16447449	[580] -- CALGetCommState --> Channel 1 is not in use	
00003526	163.16452026	[580] -- CALGetCommState --> Channel 2 is not in use	
00003527	163.16467285	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003528	163.16474915	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003529	163.17642212	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003530	163.17662048	[580] -- CALGetCommState --> comm link is free	
00003531	163.17669678	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003532	163.17704773	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003533	163.17720032	[580] -- CALGetCommState --> Channel 1 is not in use	
00003534	163.17723083	[580] -- CALGetCommState --> Channel 2 is not in use	
00003535	163.17735291	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003536	163.17741394	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003537	163.18817139	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003538	163.18844604	[580] -- CALGetCommState --> comm link is free	
00003539	163.18861389	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003540	163.18894958	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003541	163.18910217	[580] -- CALGetCommState --> Channel 1 is not in use	
00003542	163.18916321	[580] -- CALGetCommState --> Channel 2 is not in use	
00003543	163.18930054	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003544	163.18972778	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003545	163.20077515	[580] -- IsComLinkInUse --> PART_J is configured; skip COM link check and deliver FALSE !	
00003546	163.20109558	[580] -- CALGetCommState --> comm link is free	
00003547	163.20167542	[580] -- CALGetCommState --> Caesar is alive; perform checks.	
00003548	163.20223999	[580] -- CALGetCommState --> IgnitionReadFromSim mode active; Ignition info from >>C:\ProgramData\Mercedes-Benz\csd\writefil\sim\GLOBAL.SIM<< is >>ON<< !	
00003549	163.20239258	[580] -- CALGetCommState --> Channel 1 is not in use	
00003550	163.20306396	[580] -- CALGetCommState --> Channel 2 is not in use	
00003551	163.20364380	[580] -- CALGetCommState --> returned bitfield is: 0801	
00003552	163.20413208	[580] -- CAL.DLL / CAL_GET_COMM_STATE --> Commstate hexadecimal delivered to DAS: 0801	
00003553	163.21667480	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00003554	163.30610657	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00003555	164.60316467	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00003556	164.65647888	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00003557	166.66241455	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00003558	166.71246338	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00003559	168.60221863	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00003560	168.70353699	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00003561	170.59672546	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00003562	170.69604492	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00003563	172.98204041	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00003564	172.99720764	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.8 V !	
00003565	174.75830078	[580] ==== CAESAR global debugger ==> J> SIJReadVbatt	
00003566	174.76283264	[580] -- CALGetVoltage --> PassThru device active and Kl30 measurement allowed in CAL.INI; battery voltage from CAESAR:   11.9 V !	
